{"version":3,"file":"ngx-modelstage.js.map","sources":["ng://ngx-modelstage/src/ps-geometry.ts","ng://ngx-modelstage/src/mx-common.ts","ng://ngx-modelstage/src/mx-appstate.ts","ng://ngx-modelstage/src/modelstage.ts","ng://ngx-modelstage/src/modelstage-sample-web.ts"],"sourcesContent":["/// ModelStage Â© 2018 Plansysteme GmbH, Hamburg, Germany. All rights reserved.\r\n\r\nexport module psgeometry {\r\n\r\n    export class Matrix4 {\r\n    elements: number[];\r\n\r\n    static Identity = new Matrix4();\r\n\r\n    static FromTranslation(x: number, y: number, z: number) {\r\n      let result = new Matrix4();\r\n      result.elements[3] = x;\r\n      result.elements[7] = y;\r\n      result.elements[11] = z;\r\n      return result;\r\n    }\r\n\r\n    static FromScaling(x: number, y: number, z: number) {\r\n      let result = new Matrix4();\r\n      result.elements[0] = x;\r\n      result.elements[5] = y;\r\n      result.elements[10] = z;\r\n      return result;\r\n    }\r\n     \r\n    static FromRotationX(angle: number) {\r\n      let cosA = Math.cos(angle);\r\n      let sinA = Math.sin(angle);\r\n      let result = new Matrix4();\r\n      result.elements[5] = cosA;\r\n      result.elements[6] = -sinA;\r\n      result.elements[9] = sinA;\r\n      result.elements[10] = cosA;\r\n      return result;\r\n    }\r\n    \r\n    static FromRotationY(angle: number) {\r\n      let cosA = Math.cos(angle);\r\n      let sinA = Math.sin(angle);\r\n      let result = new Matrix4();\r\n      result.elements[0] = cosA;\r\n      result.elements[2] = sinA;\r\n      result.elements[8] = -sinA;\r\n      result.elements[10] = cosA;\r\n      return result;\r\n    }\r\n        \r\n    static FromRotationZ(angle: number) {\r\n      let cosA = Math.cos(angle);\r\n      let sinA = Math.sin(angle);\r\n      let result = new Matrix4();\r\n      result.elements[0] = cosA;\r\n      result.elements[1] = -sinA;\r\n      result.elements[4] = sinA;\r\n      result.elements[5] = cosA;\r\n      return result;\r\n    }\r\n\r\n    static FromRotation(pitch: number, yaw: number, roll: number) {\r\n      return new Matrix4([\r\n        Math.cos(yaw) * Math.cos(pitch), Math.sin(yaw) * Math.cos(pitch), -Math.sin(pitch), 0,\r\n        Math.cos(yaw) * Math.sin(pitch) * Math.sin(roll) - Math.sin(yaw) * Math.cos(roll), Math.sin(yaw) * Math.sin(pitch) * Math.sin(roll) + Math.cos(yaw) * Math.cos(roll), Math.cos(pitch) * Math.sin(roll), 0,\r\n        Math.cos(yaw) * Math.sin(pitch) * Math.cos(roll) + Math.sin(yaw) * Math.sin(roll), Math.sin(yaw) * Math.sin(pitch) * Math.cos(roll) - Math.cos(yaw) * Math.sin(roll), Math.cos(pitch) * Math.cos(roll), 0,\r\n        0, 0, 0, 1]\r\n      ).transpose();\r\n    }\r\n\r\n    constructor(elements?: number[]) {\r\n      this.elements = elements || [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\r\n    }\r\n\r\n    e(colIdx: number, rowIdx: number): number {\r\n      let idx = colIdx + (rowIdx || 0) * 4;\r\n      return idx >= 0 && idx < 16 ? this.elements[idx] : null;\r\n    };\r\n\r\n    row(idx: number): Vec4 {\r\n      if (idx >= 0 && idx < 4) {\r\n        return new Vec4(this.elements[idx * 4], this.elements[idx * 4 + 1], this.elements[idx * 4 + 2], this.elements[idx * 4 + 3]);\r\n      } else {\r\n        return null;\r\n      }\r\n    };\r\n\r\n    col(idx: number): Vec4 {\r\n      if (idx <= 0 && idx < 4) {\r\n        return new Vec4(this.elements[idx], this.elements[idx + 4], this.elements[idx + 8], this.elements[idx + 12]);\r\n      } else {\r\n        return null;\r\n      }\r\n    }\r\n\r\n    equals(m: Matrix4) {\r\n      if (m) {\r\n        let l = this.elements;\r\n        let r = m.elements;\r\n\r\n        return l[0] == r[0] && l[1] == r[1] && l[2] == r[2] && l[3] == r[3] &&\r\n          l[4] == r[4] && l[5] == r[5] && l[6] == r[6] && l[7] == r[7] &&\r\n          l[8] == r[8] && l[9] == r[9] && l[10] == r[10] && l[11] == r[11] &&\r\n          l[12] == r[12] && l[13] == r[13] && l[14] == r[14] && l[15] == r[15];\r\n      } else {\r\n        return false;\r\n      }\r\n\r\n    }\r\n\r\n    multiply(m: Matrix4 | Vec4 | number): Matrix4 | Vec4 {\r\n      if (m instanceof Matrix4) {\r\n        let l = this.elements;\r\n        let r = m.elements;\r\n        return new Matrix4([\r\n          l[0] * r[0] + l[4] * r[1] + l[8] * r[2] + l[12] * r[3],\r\n          l[1] * r[0] + l[5] * r[1] + l[9] * r[2] + l[13] * r[3],\r\n          l[2] * r[0] + l[6] * r[1] + l[10] * r[2] + l[14] * r[3],\r\n          l[3] * r[0] + l[7] * r[1] + l[11] * r[2] + l[15] * r[3],\r\n\r\n          l[0] * r[4] + l[4] * r[5] + l[8] * r[6] + l[12] * r[7],\r\n          l[1] * r[4] + l[5] * r[5] + l[9] * r[6] + l[13] * r[7],\r\n          l[2] * r[4] + l[6] * r[5] + l[10] * r[6] + l[14] * r[7],\r\n          l[3] * r[4] + l[7] * r[5] + l[11] * r[6] + l[15] * r[7],\r\n\r\n          l[0] * r[8] + l[4] * r[9] + l[8] * r[10] + l[12] * r[11],\r\n          l[1] * r[8] + l[5] * r[9] + l[9] * r[10] + l[13] * r[11],\r\n          l[2] * r[8] + l[6] * r[9] + l[10] * r[10] + l[14] * r[11],\r\n          l[3] * r[8] + l[7] * r[9] + l[11] * r[10] + l[15] * r[11],\r\n\r\n          l[0] * r[12] + l[4] * r[13] + l[8] * r[14] + l[12] * r[15],\r\n          l[1] * r[12] + l[5] * r[13] + l[9] * r[14] + l[13] * r[15],\r\n          l[2] * r[12] + l[6] * r[13] + l[10] * r[14] + l[14] * r[15],\r\n          l[3] * r[12] + l[7] * r[13] + l[11] * r[14] + l[15] * r[15]\r\n        ]);\r\n      } else if (m instanceof Vec4) {\r\n        return new Vec4(\r\n          m.x * this.elements[0] + m.y * this.elements[1] + m.z * this.elements[2] + m.w * this.elements[3],\r\n          m.x * this.elements[4] + m.y * this.elements[5] + m.z * this.elements[6] + m.w * this.elements[7],\r\n          m.x * this.elements[8] + m.y * this.elements[9] + m.z * this.elements[10] + m.w * this.elements[11],\r\n          m.x * this.elements[12] + m.y * this.elements[13] + m.z * this.elements[14] + m.w * this.elements[15]);\r\n      } else {\r\n        return new Matrix4(this.elements.map(function (e) { return e * <number>m; }));\r\n      }\r\n    }\r\n\r\n    toRightTriangular(): Matrix4 {\r\n      return new Matrix4(Matrix.toRightTriangular(this.elements, 4, 4));\r\n    }\r\n\r\n    determinant(): number {\r\n      let m = this.toRightTriangular();\r\n      return m.elements[0] * m.elements[5] * m.elements[10] * m.elements[15];\r\n    }\r\n\r\n    isSingular(): boolean {\r\n      return this.determinant() === 0;\r\n    }\r\n\r\n    transpose(): Matrix4 {\r\n      let e = this.elements;\r\n      return new Matrix4([\r\n        e[0], e[4], e[8], e[12],\r\n        e[1], e[5], e[9], e[13],\r\n        e[2], e[6], e[10], e[14],\r\n        e[3], e[7], e[11], e[15]\r\n      ]);\r\n    }\r\n\r\n    inverse(): Matrix4 {\r\n      if (!this.isSingular()) {\r\n        let augmentedMatrix = [\r\n          this.elements[0], this.elements[1], this.elements[2], this.elements[3], 1, 0, 0, 0,\r\n          this.elements[4], this.elements[5], this.elements[6], this.elements[7], 0, 1, 0, 0,\r\n          this.elements[8], this.elements[9], this.elements[10], this.elements[11], 0, 0, 1, 0,\r\n          this.elements[12], this.elements[13], this.elements[14], this.elements[15], 0, 0, 0, 1\r\n        ];\r\n\r\n        let m = Matrix.toRightTriangular(augmentedMatrix, 4, 8);\r\n\r\n        for (let row = 3; row >= 0; row--) {\r\n          let divisor = m[row * 9];\r\n          for (let col = 0; col < 8; col++) {\r\n            m[row * 8 + col] = m[row * 8 + col] / divisor;\r\n          }\r\n\r\n          for (let altrow = row - 1; altrow >= 0; altrow--) {\r\n            let multiplier = m[altrow * 8 + row];\r\n            for (let col = 0; col < 8; col++) {\r\n              m[altrow * 8 + col] = m[altrow * 8 + col] - m[row * 8 + col] * multiplier;\r\n            }\r\n          }\r\n        }\r\n        return new Matrix4([\r\n          m[4], m[5], m[6], m[7],\r\n          m[12], m[13], m[14], m[15],\r\n          m[20], m[21], m[22], m[23],\r\n          m[28], m[29], m[30], m[31]\r\n        ]);\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  export class Matrix3 {\r\n    elements: number[];\r\n\r\n    constructor(elements?: number[]) {\r\n      this.elements = elements || [1, 0, 0, 0, 1, 0, 0, 0, 1];\r\n    }\r\n\r\n    static Identity = new Matrix3();\r\n\r\n    e(colIdx: number, rowIdx: number): number {\r\n      let idx = colIdx + (rowIdx || 0) * 3;\r\n      return idx >= 0 && idx < 9 ? this.elements[idx] : null;\r\n    }\r\n\r\n    row(idx: number): Vec3 {\r\n      if (idx >= 0 && idx < 3) {\r\n        return new Vec3(this.elements[idx * 3], this.elements[idx * 3 + 1], this.elements[idx * 3 + 2]);\r\n      } else {\r\n        return null;\r\n      }\r\n    }\r\n\r\n    col(idx: number): Vec3 {\r\n      if (idx <= 0 && idx < 3) {\r\n        return new Vec3(this.elements[idx], this.elements[idx + 3], this.elements[idx + 6]);\r\n      } else {\r\n        return null;\r\n      }\r\n    }\r\n\r\n    multiply(m: Matrix3 | Vec3 | number): Matrix3 | Vec3 {\r\n      if (m instanceof Matrix3) {\r\n        let l = this.elements;\r\n        let r = m.elements;\r\n        return new Matrix3([\r\n          l[0] * r[0] + l[3] * r[1] + l[6] * r[2],\r\n          l[1] * r[0] + l[4] * r[1] + l[7] * r[2],\r\n          l[2] * r[0] + l[5] * r[1] + l[8] * r[2],\r\n\r\n          l[0] * r[3] + l[3] * r[4] + l[6] * r[5],\r\n          l[1] * r[3] + l[4] * r[4] + l[7] * r[5],\r\n          l[2] * r[3] + l[5] * r[4] + l[8] * r[5],\r\n\r\n          l[0] * r[6] + l[3] * r[7] + l[6] * r[8],\r\n          l[1] * r[6] + l[4] * r[7] + l[7] * r[8],\r\n          l[2] * r[6] + l[5] * r[7] + l[8] * r[8]\r\n        ]);\r\n      } else if (m instanceof Vec3) {\r\n        return new Vec3(\r\n          m.x * this.elements[0] + m.y * this.elements[1] + m.z * this.elements[2],\r\n          m.x * this.elements[3] + m.y * this.elements[4] + m.z * this.elements[5],\r\n          m.x * this.elements[6] + m.y * this.elements[7] + m.z * this.elements[8]);\r\n      } else {\r\n        return new Matrix3(this.elements.map(function (e) { return e * <number>m; }));\r\n      }\r\n    }\r\n\r\n    toRightTriangular(): Matrix3 {\r\n      return new Matrix3(Matrix.toRightTriangular(this.elements, 3, 3));\r\n    }\r\n\r\n    determinant(): number {\r\n      let m = this.toRightTriangular();\r\n      return m.elements[0] * m.elements[4] * m.elements[8];\r\n    }\r\n\r\n    isSingular(): boolean {\r\n      return this.determinant() === 0;\r\n    }\r\n\r\n    transpose(): Matrix3 {\r\n      let e = this.elements;\r\n      return new Matrix3([\r\n        e[0], e[3], e[6],\r\n        e[1], e[4], e[7],\r\n        e[2], e[5], e[8]\r\n      ]);\r\n    }\r\n\r\n    inverse(): Matrix3 {\r\n      if (!this.isSingular()) {\r\n        let augmentedMatrix = [\r\n          this.elements[0], this.elements[1], this.elements[2], 1, 0, 0,\r\n          this.elements[3], this.elements[4], this.elements[5], 0, 1, 0,\r\n          this.elements[6], this.elements[7], this.elements[8], 0, 0, 1,\r\n        ];\r\n\r\n        let m = Matrix.toRightTriangular(augmentedMatrix, 3, 6);\r\n\r\n        for (let row = 2; row >= 0; row--) {\r\n          let divisor = m[row * 7];\r\n          for (let col = 0; col < 6; col++) {\r\n            m[row * 7 + col] = m[row * 7 + col] / divisor;\r\n          }\r\n\r\n          for (let altrow = row - 1; altrow >= 0; altrow--) {\r\n            let multiplier = m[altrow * 6 + row];\r\n            for (let col = 0; col < 6; col++) {\r\n              m[altrow * 6 + col] = m[altrow * 6 + col] - m[row * 6 + col] * multiplier;\r\n            }\r\n          }\r\n        }\r\n        return new Matrix3([\r\n          m[3], m[4], m[5],\r\n          m[9], m[10], m[11],\r\n          m[15], m[16], m[17]\r\n        ]);\r\n      }\r\n      else {\r\n        return null;\r\n      }\r\n    }\r\n  }\r\n\r\n  export class Matrix {\r\n    static toRightTriangular(elements, rows, cols) {\r\n      let m = elements.slice(0);\r\n\r\n      for (let row = 0; row < rows; row++) {\r\n        if (m[row * (cols + 1)] == 0) {\r\n          for (let altrow = row + 1; altrow < rows; altrow++) {\r\n            if (m[altrow * cols + row] != 0) {\r\n              for (let j = 0; j < cols; j++) {\r\n                m[row * cols + j] += m[altrow * cols + j];\r\n              }\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        if (m[row * (cols + 1)] != 0) {\r\n          for (let altrow = row + 1; altrow < rows; altrow++) {\r\n            let multiplier = m[altrow * cols + row] / m[row * (cols + 1)];\r\n            for (let j = 0; j < cols; j++) {\r\n              m[altrow * cols + j] = j < row ? 0 : m[altrow * cols + j] - m[row * cols + j] * multiplier;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return m;\r\n    }\r\n  }\r\n\r\n  export class Vec3 {\r\n    x: number;\r\n    y: number;\r\n    z: number;\r\n\r\n    constructor(x?, y?, z?) {\r\n      this.x = x || 0.0;\r\n      this.y = y || 0.0;\r\n      this.z = z || 0.0;\r\n    }\r\n\r\n    asVec3() {\r\n      return this;\r\n    }\r\n\r\n    asVec4(w?: number): Vec4 {\r\n      return new Vec4(this.x, this.y, this.z, w || 1.0);\r\n    }\r\n\r\n    equals(v: Vec3): boolean {\r\n      return this.x == v.x && this.y == v.y && this.z == v.z;\r\n    }\r\n\r\n    assignPoint(x, y, z) {\r\n      this.x = x;\r\n      this.y = y;\r\n      this.z = z;\r\n    }\r\n\r\n    assignVec(v: Vec3 | Vec4) {\r\n      this.x = v.x;\r\n      this.y = v.y;\r\n      this.z = v.z;\r\n    }\r\n\r\n    add(vec: Vec3 | Vec4): Vec3 {\r\n      return new Vec3(this.x + vec.x, this.y + vec.y, this.z + vec.z);\r\n    }\r\n\r\n    sub(vec: Vec3 | Vec4): Vec3 {\r\n      return new Vec3(this.x - vec.x, this.y - vec.y, this.z - vec.z);\r\n    }\r\n\r\n    dot(vec: Vec3 | Vec4): number {\r\n      return this.x * vec.x + this.y * vec.y + this.z * vec.z;\r\n    }\r\n\r\n    cross(v: Vec3 | Vec4) {\r\n      return new Vec3(\r\n        (this.y * v.z) - (this.z * v.y),\r\n        (this.z * v.x) - (this.x * v.z),\r\n        (this.x * v.y) - (this.y * v.x)\r\n      );\r\n    }\r\n\r\n    multiply(s: number) {\r\n      return new Vec3(this.x * s, this.y * s, this.z * s);\r\n    }\r\n\r\n    applyQuaternion(q: Quaternion) {\r\n      let x = this.x;\r\n      let y = this.y;\r\n      let z = this.z;\r\n\r\n      let qx = q.x;\r\n      let qy = q.y;\r\n      let qz = q.z;\r\n      let qw = q.w;\r\n\r\n      // quaternion * vector\r\n      let px = qw * x + qy * z - qz * y;\r\n      let py = qw * y + qz * x - qx * z;\r\n      let pz = qw * z + qx * y - qy * x;\r\n      let pw = -qx * x - qy * y - qz * z;\r\n\r\n      // product * inverse quaternion\r\n      this.x = px * qw - pw * qx - py * qz + pz * qy;\r\n      this.y = py * qw - pw * qy - pz * qx + px * qz;\r\n      this.z = pz * qw - pw * qz - px * qy + py * qx;\r\n\r\n      return this;\r\n    }\r\n\r\n    norm() {\r\n      return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\r\n    }\r\n\r\n    normalize() {\r\n      return this.multiply(1 / this.norm());\r\n    }\r\n\r\n    elements() {\r\n      return [this.x, this.y, this.z];\r\n    }\r\n\r\n    squaredDist(v: Vec3 | Vec4) {\r\n      return (this.x - v.x) * (this.x - v.x) +\r\n        (this.y - v.y) * (this.y - v.y) +\r\n        (this.z - v.z) * (this.z - v.z);\r\n    }\r\n  }\r\n\r\n  export class Vec4 {\r\n    x: number;\r\n    y: number;\r\n    z: number;\r\n    w: number;\r\n\r\n    public static Zero = new Vec4(0.0, 0.0, 0.0, 0.0);\r\n\r\n    public static One = new Vec4(1.0, 1.0, 1.0, 1.0);\r\n\r\n    constructor(x?, y?, z?, w?) {\r\n      this.x = x || 0.0;\r\n      this.y = y || 0.0;\r\n      this.z = z || 0.0;\r\n      this.w = w || 0.0;\r\n    }\r\n\r\n    equals(v: Vec4): boolean {\r\n      return this.x == v.x && this.y == v.y && this.z == v.z && this.w == v.w;\r\n    }\r\n\r\n    asVec3(): Vec3 {\r\n      return new Vec3(this.x, this.y, this.z);\r\n    }\r\n\r\n    asVec4(): Vec4 {\r\n      return this;\r\n    }\r\n\r\n    add(vec: Vec4): Vec4 {\r\n      return new Vec4(this.x + vec.x, this.y + vec.y, this.z + vec.z, this.w + vec.w);\r\n    }\r\n\r\n    sub(vec: Vec4): Vec4 {\r\n      return new Vec4(this.x - vec.x, this.y - vec.y, this.z - vec.z, this.w - vec.w);\r\n    }\r\n\r\n    dot(vec: Vec4): number {\r\n      return this.x * vec.x + this.y * vec.y + this.z * vec.z + this.w * vec.w;\r\n    }\r\n\r\n    cross(v: Vec4): Vec4 {\r\n      return new Vec4(\r\n        (this.y * v.z) - (this.z * v.y),\r\n        (this.z * v.x) - (this.x * v.z),\r\n        (this.x * v.y) - (this.y * v.x),\r\n        1.0\r\n      );\r\n    }\r\n\r\n    multiply(s: number): Vec4 {\r\n      return new Vec4(this.x * s, this.y * s, this.z * s, this.w * s);\r\n    }\r\n\r\n    norm(): number {\r\n      return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\r\n    }\r\n\r\n    normalize(): Vec4 {\r\n      return this.multiply(1 / this.norm());\r\n    }\r\n\r\n    elements(): number[] {\r\n      return [this.x, this.y, this.z, this.w];\r\n    }\r\n\r\n    squaredDist(v: Vec4) {\r\n      return (this.x - v.x) * (this.x - v.x) +\r\n        (this.y - v.y) * (this.y - v.y) +\r\n        (this.z - v.z) * (this.z - v.z) +\r\n        (this.w - v.w) * (this.w - v.w);\r\n    }\r\n  }\r\n\r\n  export class Quaternion {\r\n    x: number;\r\n    y: number;\r\n    z: number;\r\n    w: number;\r\n\r\n    constructor(x?: number, y?: number, z?: number, w?: number) {\r\n      this.x = x || 0.0;\r\n      this.y = y || 0.0;\r\n      this.z = z || 0.0;\r\n      this.w = typeof w == 'undefined' ? 1.0 : w;\r\n    }\r\n\r\n    setFromAxisAngle(axis: Vec3, angle: number): Quaternion {\r\n      let halfAngle = angle / 2;\r\n      let s = Math.sin(halfAngle);\r\n\r\n      this.x = axis.x * s;\r\n      this.y = axis.y * s;\r\n      this.z = axis.z * s;\r\n      this.w = Math.cos(halfAngle);\r\n\r\n      return this;\r\n    }\r\n\r\n    multiply(q: Quaternion) {\r\n      let x = this.x, y = this.y, z = this.z, w = this.w;\r\n      let qx = q.x, qy = q.y, qz = q.z, qw = q.w;\r\n\r\n      this.x = x * qw + w * qx + y * qz - z * qy;\r\n      this.y = y * qw + w * qy + z * qx - x * qz;\r\n      this.z = z * qw + w * qz + x * qy - y * qx;\r\n      this.w = w * qw - x * qx - y * qy - z * qz;\r\n    }\r\n  }\r\n\r\n  export class AABB3D {\r\n    public minX: number = +Infinity;\r\n    public maxX: number = -Infinity;\r\n    public minY: number = +Infinity;\r\n    public maxY: number = -Infinity;\r\n    public minZ: number = +Infinity;\r\n    public maxZ: number = -Infinity;\r\n\r\n    public addPoint(x: number, y: number, z: number) {\r\n      this.minX = Math.min(this.minX, x);\r\n      this.maxX = Math.max(this.maxX, x);\r\n      this.minY = Math.min(this.minY, y);\r\n      this.maxY = Math.max(this.maxY, y);\r\n      this.minZ = Math.min(this.minZ, z);\r\n      this.maxZ = Math.max(this.maxZ, z);\r\n    }\r\n\r\n    public addVector(v: Vec3 | Vec4) {\r\n      this.addPoint(v.x, v.y, v.z);\r\n    }\r\n\r\n    public addAABB(box: AABB3D) {\r\n      this.addPoint(box.minX, box.minY, box.minZ);\r\n      this.addPoint(box.maxX, box.maxY, box.maxZ);\r\n    }\r\n\r\n    public clear() {\r\n      this.minX = +Infinity;\r\n      this.maxX = -Infinity;\r\n      this.minY = +Infinity;\r\n      this.maxY = -Infinity;\r\n      this.minZ = +Infinity;\r\n      this.maxZ = -Infinity;\r\n    }\r\n\r\n    public center(): Vec3 {\r\n      return new Vec3(\r\n        .5 * (this.minX + this.maxX),\r\n        .5 * (this.minY + this.maxY),\r\n        .5 * (this.minZ + this.maxZ)\r\n      );\r\n    }\r\n\r\n    public extents(): Vec3 {\r\n      return new Vec3(\r\n        (this.maxX - this.minX),\r\n        (this.maxY - this.minY),\r\n        (this.maxZ - this.minZ)\r\n      );\r\n    }\r\n\r\n    public min(): Vec3 {\r\n      return new Vec3(\r\n        this.minX,\r\n        this.minY,\r\n        this.minZ\r\n      );\r\n    }\r\n\r\n    public max(): Vec3 {\r\n      return new Vec3(\r\n        this.maxX,\r\n        this.maxY,\r\n        this.maxZ\r\n      );\r\n    }\r\n\r\n    public contains(v: Vec3 | Vec4) {\r\n      return v.x >= this.minX && v.x <= this.maxX &&\r\n        v.y >= this.minY && v.y <= this.maxY &&\r\n        v.z >= this.minZ && v.z <= this.maxZ;\r\n    }\r\n\r\n    public transform(matrix: Matrix4): AABB3D {\r\n      let result = new AABB3D();\r\n\r\n      let minV = <Vec4>matrix.multiply(new Vec4(this.minX, this.minY, this.minZ, 1));\r\n      let maxV = <Vec4>matrix.multiply(new Vec4(this.maxX, this.maxY, this.maxZ, 1));\r\n\r\n      result.minX = minV.x; result.minY = minV.y; result.minZ = minV.z;\r\n      result.maxX = maxV.x; result.maxY = maxV.y; result.maxZ = maxV.z;\r\n\r\n      return result;\r\n    }\r\n\r\n    public intersectsRay(ray: Line3D): Vec3 {\r\n      let result: Vec3 = null;\r\n\r\n      let v0 = ray.p0.asVec3();\r\n      let dir = ray.p1.asVec3().sub(ray.p0.asVec3());\r\n\r\n      let intX0 = ray.intersectRayWithPlane(new Vec3(this.minX, 0, 0), new Vec3(-1, 0, 0));\r\n      let intX1 = ray.intersectRayWithPlane(new Vec3(this.maxX, 0, 0), new Vec3(1, 0, 0));\r\n      let intY0 = ray.intersectRayWithPlane(new Vec3(0, this.minY, 0), new Vec3(0, -1, 0));\r\n      let intY1 = ray.intersectRayWithPlane(new Vec3(0, this.maxY, 0), new Vec3(0, 1, 0));\r\n      let intZ0 = ray.intersectRayWithPlane(new Vec3(0, 0, this.minZ), new Vec3(0, 0, -1));\r\n      let intZ1 = ray.intersectRayWithPlane(new Vec3(0, 0, this.maxZ), new Vec3(0, 0, 1));\r\n\r\n      let currDist = Infinity;\r\n      if (intX0 && this.contains(intX0)) { currDist = v0.squaredDist(intX0); result = intX0; }\r\n      if (intX1 && this.contains(intX1) && v0.squaredDist(intX1) < currDist) { currDist = v0.squaredDist(intX1); result = intX1; }\r\n      if (intY0 && this.contains(intY0) && v0.squaredDist(intY0) < currDist) { currDist = v0.squaredDist(intY0); result = intY0; }\r\n      if (intY1 && this.contains(intY1) && v0.squaredDist(intY1) < currDist) { currDist = v0.squaredDist(intY1); result = intY1; }\r\n      if (intZ0 && this.contains(intZ0) && v0.squaredDist(intZ0) < currDist) { currDist = v0.squaredDist(intZ0); result = intZ0; }\r\n      if (intZ1 && this.contains(intZ1) && v0.squaredDist(intZ1) < currDist) { currDist = v0.squaredDist(intZ1); result = intZ1; }\r\n\r\n      return result;\r\n    }\r\n  }\r\n\r\n  export class Point3D {\r\n    x: number;\r\n    y: number;\r\n    z: number;\r\n\r\n    constructor(x?, y?, z?) {\r\n      this.x = x || 0.0;\r\n      this.y = y || 0.0;\r\n      this.z = z || 0.0;\r\n    }\r\n\r\n    asVec3(): Vec3 {\r\n      return new Vec3(this.x, this.y, this.z);\r\n    }\r\n\r\n    asVec4(w?: number): Vec4 {\r\n      return new Vec4(this.x, this.y, this.z, w || 1.0);\r\n    }\r\n  }\r\n\r\n  export class Line3D {\r\n    p0: Point3D;\r\n    p1: Point3D;\r\n\r\n    constructor(p0, p1) {\r\n      this.p0 = p0 || new Point3D();\r\n      this.p1 = p1 || new Point3D();\r\n    }\r\n\r\n    public intersectRayWithPlane(v0: Vec3, n: Vec3): Vec3 {\r\n      let result: Vec3 = null;\r\n\r\n      let u = this.p1.asVec3().sub(this.p0.asVec3());\r\n\r\n      let D = n.dot(u);\r\n      if (D != 0) {\r\n        let w = this.p0.asVec3().sub(v0);\r\n        let N = -n.dot(w);\r\n        let sI = N / D;\r\n\r\n        if (sI >= 0) {\r\n          result = this.p0.asVec3().add(u.multiply(sI));\r\n        }\r\n      }\r\n\r\n      return result;\r\n    }\r\n\r\n    intersectTriangle(p0, p1, p2) {\r\n      let matrix = new Matrix3([\r\n        this.p0.x - this.p1.x, p1.x - p0.x, p2.x - p0.x,\r\n        this.p0.y - this.p1.y, p1.y - p0.y, p2.y - p0.y,\r\n        this.p0.z - this.p1.z, p1.z - p0.z, p2.z - p0.z\r\n      ]).inverse();\r\n\r\n      if (matrix) {\r\n        let res = matrix.multiply(this.p0.asVec3().sub(p0.asVec3()));\r\n        if (res && (<Vec3>res).y >= 0 && (<Vec3>res).y <= 1.0 && (<Vec3>res).z >= 0 && (<Vec3>res).z <= 1.0 && (<Vec3>res).y + (<Vec3>res).z <= 1.0) {\r\n          return p0.asVec3()\r\n            .add(p1.asVec3().sub(p0.asVec3()).multiply((<Vec3>res).y))\r\n            .add(p2.asVec3().sub(p0.asVec3()).multiply((<Vec3>res).z));\r\n        } else {\r\n          return null;\r\n        }\r\n      } else {\r\n        return null;\r\n      }\r\n    }\r\n\r\n    transform(matrix: Matrix4) {\r\n      let v0 = <Vec4>matrix.multiply(this.p0.asVec4());\r\n      let v1 = <Vec4>matrix.multiply(this.p1.asVec4());\r\n      return new Line3D(new Point3D(v0.x, v0.y, v0.z), new Point3D(v1.x, v1.y, v1.z));\r\n    }\r\n  }\r\n\r\n  export class Camera {\r\n    private _position: Vec3;\r\n    private _direction: Vec3;\r\n    private _up: Vec3;\r\n\r\n    private currentViewMatrix: Matrix4;\r\n\r\n    constructor(position?: Vec3, direction?: Vec3, up?: Vec3) {\r\n      this._position = position || new Vec3(0.0, 0.0, 20.0);\r\n      this._direction = direction || new Vec3(0.0, 0.0, -1.0);\r\n      this._up = up || new Vec3(0.0, 1.0, 0.0);\r\n    }\r\n\r\n    changed() {\r\n      this.currentViewMatrix = null;\r\n    }\r\n\r\n    setPosition(x?: number, y?: number, z?: number) {\r\n      this._position.x = x || 0.0;\r\n      this._position.y = y || 0.0;\r\n      this._position.z = z || 0.0;\r\n      this.changed();\r\n    }\r\n\r\n    setDirection(x: number, y: number, z: number) {\r\n      this._direction.x = x;\r\n      this._direction.y = y;\r\n      this._direction.z = z;\r\n      this.changed();\r\n    }\r\n\r\n    setCenter(x: number, y: number, z: number) {\r\n      this._direction.x = x - this._position.x;\r\n      this._direction.y = y - this._position.y;\r\n      this._direction.z = z - this._position.z;\r\n      this.changed();\r\n    }\r\n\r\n    getPosition(): Vec3 {\r\n      return this._position;\r\n    }\r\n\r\n    asVec3(): Vec3 {\r\n      return this._position;\r\n    }\r\n\r\n    asVec4(): Vec4 {\r\n      return this._position.asVec4();\r\n    }\r\n\r\n    getProjectionMatrix(width, height): Matrix4 {\r\n      return this.makePerspective(45, width / height, 0.1, 10000.0);\r\n    }\r\n\r\n    getViewMatrix(): Matrix4 {\r\n      return <psgeometry.Matrix4>this.makeLookAt();\r\n    }\r\n\r\n    private makePerspective(fovy, aspect, znear, zfar): Matrix4 {\r\n      let ymax = znear * Math.tan(fovy * Math.PI / 360.0);\r\n      let ymin = -ymax;\r\n      let xmin = ymin * aspect;\r\n      let xmax = ymax * aspect;\r\n\r\n      return this.makeFrustum(xmin, xmax, ymin, ymax, znear, zfar);\r\n    }\r\n\r\n    private makeFrustum(left, right,\r\n      bottom, top,\r\n      znear, zfar): Matrix4 {\r\n      let x = 2 * znear / (right - left);\r\n      let y = 2 * znear / (top - bottom);\r\n      let a = (right + left) / (right - left);\r\n      let b = (top + bottom) / (top - bottom);\r\n      let c = -(zfar + znear) / (zfar - znear);\r\n      let d = -2 * zfar * znear / (zfar - znear);\r\n\r\n      return new Matrix4(\r\n        [x, 0, a, 0,\r\n          0, y, b, 0,\r\n          0, 0, c, d,\r\n          0, 0, -1, 0]);\r\n    }\r\n\r\n    private makeOrtho(left, right, bottom, top, znear, zfar): Matrix4 {\r\n      let tx = -(right + left) / (right - left);\r\n      let ty = -(top + bottom) / (top - bottom);\r\n      let tz = -(zfar + znear) / (zfar - znear);\r\n\r\n      return new Matrix4(\r\n        [2 / (right - left), 0, 0, tx,\r\n          0, 2 / (top - bottom), 0, ty,\r\n          0, 0, -2 / (zfar - znear), tz,\r\n          0, 0, 0, 1]);\r\n    }\r\n\r\n    private makeLookAt(): Matrix4 {\r\n      let eye = this._position;\r\n      let center = this._position.add(this._direction);\r\n      let up = this._up;\r\n\r\n      let z = eye.sub(center).normalize();\r\n      let x = up.cross(z).normalize();\r\n      let y = z.cross(x).normalize();\r\n\r\n      let m = new Matrix4([\r\n        x.x, x.y, x.z, 0,\r\n        y.x, y.y, y.z, 0,\r\n        z.x, z.y, z.z, 0,\r\n        0, 0, 0, 1]);\r\n\r\n      let t = new Matrix4([\r\n        1, 0, 0, -eye.x,\r\n        0, 1, 0, -eye.y,\r\n        0, 0, 1, -eye.z,\r\n        0, 0, 0, 1]);\r\n\r\n      return <Matrix4>t.multiply(m);\r\n    }\r\n  }\r\n\r\n  function pointInTriangle(p, a, b, c): boolean {\r\n    // Compute vectors        \r\n    let v0 = c.subtract(a);\r\n    let v1 = b.subtract(a);\r\n    let v2 = p.subtract(a);\r\n\r\n    // Compute dot products\r\n    let dot00 = v0.dot(v0)\r\n    let dot01 = v0.dot(v1)\r\n    let dot02 = v0.dot(v2)\r\n    let dot11 = v1.dot(v1)\r\n    let dot12 = v1.dot(v2)\r\n\r\n    // Compute barycentric coordinates\r\n    let invDenom = 1 / (dot00 * dot11 - dot01 * dot01)\r\n    let u = (dot11 * dot02 - dot01 * dot12) * invDenom\r\n    let v = (dot00 * dot12 - dot01 * dot02) * invDenom\r\n\r\n    // Check if point is in triangle\r\n    return (u >= 0) && (v >= 0) && (u + v < 1);\r\n  }\r\n\r\n\r\n  export class Vec2 {\r\n    public x: number;\r\n    public y: number;\r\n\r\n    constructor(x?: number, y?: number) {\r\n      this.x = x || 0.0;\r\n      this.y = y || 0.0;\r\n    }\r\n\r\n    public sub(v: Vec2) {\r\n      return new Vec2(this.x - v.x, this.y - v.y);\r\n    }\r\n\r\n    public static insideTri(a: Vec2, b: Vec2, c: Vec2, p: Vec2) {\r\n      return Vec2.cross(c.sub(b), p.sub(b)) >= .0 &&\r\n        Vec2.cross(a.sub(c), p.sub(c)) >= .0 &&\r\n        Vec2.cross(b.sub(a), p.sub(a)) >= .0;\r\n    };\r\n\r\n    public static cross(v0: Vec2, v1: Vec2): number {\r\n      return v0.x * v1.y - v0.y * v1.x;\r\n    }\r\n\r\n  }\r\n\r\n  export class Polygon2D {\r\n\r\n    private static Epsilon = 1e-10;\r\n\r\n    private vertices: Array<Vec2> = [];\r\n\r\n    public get Vertices() {\r\n      return this.vertices;\r\n    }\r\n\r\n    public addVertex(x: number, y: number) {\r\n      this.vertices.push(new Vec2(x, y));\r\n    }\r\n\r\n    public addVector(v: Vec2) {\r\n      this.vertices.push(v);\r\n    }\r\n\r\n    public addToAABB(box: AABB2D) {\r\n      this.vertices.forEach((p) => {\r\n        box.addVector(p);\r\n      });\r\n    }\r\n\r\n    public clear() {\r\n      this.vertices.length = 0;\r\n    }\r\n\r\n    public getArea(): number {\r\n      // see: https://stackoverflow.com/a/1165943\r\n      let result = 0;\r\n\r\n      let n = this.vertices.length;\r\n      for (let i = n - 1, q = 0; q < n; i = q++) {\r\n        result += this.vertices[i].x * this.vertices[q].y - this.vertices[q].x * this.vertices[i].y;\r\n      }\r\n\r\n      return result * 0.5;\r\n    }\r\n\r\n\r\n\r\n    private snip(u: number, v: number, w: number, n: number, indices: Array<number>) {\r\n      let result;\r\n\r\n      let a = this.vertices[indices[u]];\r\n      let b = this.vertices[indices[v]];\r\n      let c = this.vertices[indices[w]];\r\n      let p: Vec2;\r\n\r\n      result = (b.x - a.x) * (c.y - a.y) - (b.y - a.y) * (c.x - a.x) > Polygon2D.Epsilon;\r\n\r\n      for (let i = 0; i < n && result; ++i) {\r\n        if ((i != u) && (i != v) && (i != w)) {\r\n          p = this.vertices[indices[i]];\r\n          result = !Vec2.insideTri(a, b, c, p);\r\n        }\r\n      }\r\n\r\n      return result;\r\n    }\r\n\r\n    public triangulate(): Polygon2D {\r\n      let result = new Polygon2D();\r\n\r\n      let n = this.vertices.length;\r\n\r\n      if (n > 2) {\r\n        let indices: Array<number> = [];\r\n\r\n        if (this.getArea() > .0) {\r\n          for (let i = 0; i < n; ++i) indices[i] = i;\r\n        } else {\r\n          for (let i = 0; i < n; ++i) indices[i] = (n - 1) - i;\r\n        }\r\n\r\n        let nv = n;\r\n\r\n        /*  remove nv-2 Vertices, creating 1 triangle every time */\r\n        let count = 2 * nv;   /* error detection */\r\n\r\n        for (let m = 0, v = nv - 1; nv > 2;) {\r\n          /* if we loop, it is probably a non-simple polygon */\r\n          if (0 >= count--) {\r\n            return new Polygon2D();\r\n          }\r\n\r\n          /* three consecutive vertices in current polygon, <u,v,w> */\r\n          let u = v; if (nv <= u) u = 0;     /* previous */\r\n          v = u + 1; if (nv <= v) v = 0;     /* new v    */\r\n          let w = v + 1; if (nv <= w) w = 0;     /* next     */\r\n\r\n          if (this.snip(u, v, w, nv, indices)) {\r\n            let a, b, c, s, t;\r\n\r\n            /* true names of the vertices */\r\n            a = indices[u]; b = indices[v]; c = indices[w];\r\n\r\n            /* output Triangle */\r\n            result.addVector(this.vertices[c]);\r\n            result.addVector(this.vertices[b]);\r\n            result.addVector(this.vertices[a]);\r\n\r\n            ++m;\r\n\r\n            /* remove v from remaining polygon */\r\n            for (s = v, t = v + 1; t < nv; s++ , t++) {\r\n              indices[s] = indices[t];\r\n            }\r\n            --nv;\r\n\r\n            /* reset error detection counter */\r\n            count = 2 * nv;\r\n          }\r\n        }\r\n      }\r\n\r\n      return result;\r\n    }\r\n  }\r\n\r\n  export class AABB2D {\r\n    public minX: number = +Infinity;\r\n    public maxX: number = -Infinity;\r\n    public minY: number = +Infinity;\r\n    public maxY: number = -Infinity;\r\n\r\n    public addPoint(x: number, y: number) {\r\n      this.minX = Math.min(this.minX, x);\r\n      this.maxX = Math.max(this.maxX, x);\r\n      this.minY = Math.min(this.minY, y);\r\n      this.maxY = Math.max(this.maxY, y);\r\n    }\r\n\r\n    public addVector(v: Vec2 | Vec3 | Vec4) {\r\n      this.addPoint(v.x, v.y);\r\n    }\r\n\r\n    public addAABB(box: AABB2D) {\r\n      this.addPoint(box.minX, box.minY);\r\n      this.addPoint(box.maxX, box.maxY);\r\n    }\r\n\r\n    public clear() {\r\n      this.minX = +Infinity;\r\n      this.maxX = -Infinity;\r\n      this.minY = +Infinity;\r\n      this.maxY = -Infinity;\r\n    }\r\n\r\n    public center(): Vec2 {\r\n      return new Vec2(\r\n        .5 * (this.minX + this.maxX),\r\n        .5 * (this.minY + this.maxY)\r\n      );\r\n    }\r\n\r\n    public extents(): Vec2 {\r\n      return new Vec2(\r\n        (this.maxX - this.minX),\r\n        (this.maxY - this.minY)\r\n      );\r\n    }\r\n\r\n    public min(): Vec2 {\r\n      return new Vec2(\r\n        this.minX,\r\n        this.minY\r\n      );\r\n    }\r\n\r\n    public max(): Vec2 {\r\n      return new Vec2(\r\n        this.maxX,\r\n        this.maxY\r\n      );\r\n    }\r\n\r\n    public contains(v: Vec2 | Vec3 | Vec4) {\r\n      return v.x >= this.minX && v.x <= this.maxX &&\r\n        v.y >= this.minY && v.y <= this.maxY\r\n    }\r\n  }\r\n\r\n  /** Represents a point in 3D space using spherical coordinates.\r\n   */\r\n  export class Spherical {\r\n\r\n    public r = 0;\r\n    public azimuth = 0;\r\n    public polar = 0;\r\n\r\n    public constructor(r: number, azimuth: number, polar: number) {\r\n      this.r = r;\r\n      this.azimuth = azimuth;\r\n      this.polar = polar;\r\n    }\r\n\r\n    /** Converts cartesian coordinates x,y,z to spherical coordinates.\r\n      */\r\n    public static FromCartesian(x: number, y: number, z: number): Spherical {\r\n      let r = Math.sqrt(x * x + y * y + z * z);\r\n      return new Spherical(\r\n        r,\r\n        Math.asin(y / r),\r\n        Math.atan2(-x, z));\r\n    }\r\n\r\n    /** Converts cartesian vector to spherical coordinates.\r\n      */\r\n    public static FromCartesianVector(v: Vec4 | Vec3) {\r\n      return Spherical.FromCartesian(v.x, v.y, v.z);\r\n    }\r\n\r\n    /** Converts spherical coordinates to cartesian vector.\r\n      */\r\n    public static ToCartesian(r: number, polar: number, azimuth: number): Vec4 {\r\n      return new Vec4(r * Math.cos(polar) * Math.sin(azimuth),\r\n        -r * Math.sin(polar),\r\n        -r * Math.cos(polar) * Math.cos(azimuth));\r\n    }\r\n\r\n    /** Converts spherical coordinates to cartesian vector.\r\n      */\r\n    public toCartesian(): Vec4 {\r\n      return new Vec4(this.r * Math.cos(this.polar) * Math.sin(this.azimuth),\r\n        -this.r * Math.sin(this.polar),\r\n        -this.r * Math.cos(this.polar) * Math.cos(this.azimuth));\r\n    }\r\n\r\n    }\r\n}\r\n","/// ModelStage Â© 2018 Plansysteme GmbH, Hamburg, Germany. All rights reserved.\r\n\r\nimport { psgeometry } from './ps-geometry';\r\nimport { HubConnectionBuilder, LogLevel, HubConnection } from '@aspnet/signalr';\r\n\r\nexport module modelstageweb {\r\n\r\n    export function uuidv4(): string {\r\n\r\n        let crypto = window.crypto || (<any>window).msCrypto;\r\n\r\n        return ('' + 1e7 + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, (c: any) =>\r\n            (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16));\r\n    }\r\n\r\n    export class ToolsWebGL {\r\n\r\n        private stage: StageWebGL;\r\n         \r\n        constructor(stage: StageWebGL) {\r\n            this.stage = stage;\r\n        }\r\n\r\n        public createShader(shaderType: GLenum, shaderSource: string): WebGLShader {\r\n            let shader = this.stage.gl.createShader(shaderType);\r\n\r\n            this.stage.gl.shaderSource(shader, shaderSource);\r\n            this.stage.gl.compileShader(shader);\r\n\r\n            console.log(this.stage.gl.getShaderInfoLog(shader));\r\n\r\n            return shader;\r\n        }\r\n    }\r\n\r\n    export class BlockStreamBlockDescriptor {\r\n\r\n        private blockType: string;\r\n\r\n        private majorVersion: number;\r\n\r\n        private minorVersion: number;\r\n\r\n        private flags: number;\r\n\r\n        private payloadBytes: number;\r\n\r\n        public get BlockType() {\r\n            return this.blockType;\r\n        }\r\n\r\n        public set BlockType(value: string) {\r\n            this.blockType = value;\r\n        }\r\n\r\n        public get MajorVersion() {\r\n            return this.majorVersion;\r\n        }\r\n\r\n        public set MajorVersion(value: number) {\r\n            this.majorVersion = value;\r\n        }\r\n\r\n        public get MinorVersion() {\r\n            return this.minorVersion;\r\n        }\r\n\r\n        public set MinorVersion(value: number) {\r\n            this.minorVersion = value;\r\n        }\r\n\r\n        public get Flags() {\r\n            return this.flags;\r\n        }\r\n\r\n        public set Flags(value: number) {\r\n            this.flags = value;\r\n        }\r\n\r\n        public get PayloadBytes() {\r\n            return this.payloadBytes;\r\n        }\r\n\r\n        public set PayloadBytes(value: number) {\r\n            this.payloadBytes = value;\r\n        }\r\n    }\r\n\r\n    export enum BlockStreamReaderStates {\r\n        FILE_HEADER_EXPECTED = 0,\r\n        BLOCK_DESCRIPTOR_EXPECTED = 1,\r\n        PAYLOAD_EXPECTED = 2\r\n    }\r\n\r\n    export class BlockStreamReader {\r\n\r\n        private arrayBuffer: ArrayBuffer = null;\r\n\r\n        private byteArray: Uint8Array = null;\r\n\r\n        private currentPos: number = 0;\r\n\r\n        private currentBlockDescriptor: BlockStreamBlockDescriptor;\r\n\r\n        private blockEnd: number = 0;\r\n\r\n        private isComplete: boolean = false;\r\n\r\n        private fatalError: boolean = false;\r\n\r\n        private state: BlockStreamReaderStates = BlockStreamReaderStates.FILE_HEADER_EXPECTED;\r\n\r\n        public get CurrentBlockDescriptor() {\r\n            return this.currentBlockDescriptor;\r\n        }\r\n\r\n        public get FatalError() {\r\n            return this.fatalError;\r\n        }\r\n\r\n        constructor(buffer: ArrayBuffer) {\r\n            this.arrayBuffer = buffer;\r\n            this.byteArray = new Uint8Array(buffer);\r\n\r\n            this.assureFileHeader();\r\n        }\r\n\r\n        public remainingBytesInBlock(): number {\r\n            return this.blockEnd - this.currentPos;\r\n        }\r\n\r\n        public assureRemainingBytesInBlock(count: number): boolean {\r\n            return this.currentPos + count <= this.blockEnd;\r\n        }\r\n\r\n        public readBytes(count: number): ArrayBuffer\r\n        {\r\n            return this.arrayBuffer.slice(this.currentPos, this.currentPos + count); \r\n        }\r\n\r\n        public tryReadInt16(lambda: (value: number) => void): boolean {\r\n            let result = this.assureRemainingBytesInBlock(2);\r\n\r\n            if (result) {\r\n                lambda(this.byteArray[this.currentPos++] +\r\n                    this.byteArray[this.currentPos++] * 256);\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n        public tryReadFloat(lambda: (value: number) => void): boolean {\r\n            let result = this.assureRemainingBytesInBlock(4);\r\n\r\n            if (result) {\r\n                let buf = new ArrayBuffer(4);\r\n                let view = new DataView(buf);\r\n                view.setUint8(0, this.byteArray[this.currentPos++]);\r\n                view.setUint8(1, this.byteArray[this.currentPos++]);\r\n                view.setUint8(2, this.byteArray[this.currentPos++]);\r\n                view.setUint8(3, this.byteArray[this.currentPos++]);\r\n\r\n                //let view = new DataView(this.byteArray.buffer, this.currentPos, 4);\r\n                lambda(view.getFloat32(0, true));\r\n                //this.currentPos += 4;\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n        public tryReadInt(lambda: (value: number) => void): boolean {\r\n            let result = this.assureRemainingBytesInBlock(4);\r\n\r\n            if (result) {\r\n                lambda(this.byteArray[this.currentPos++] +\r\n                    this.byteArray[this.currentPos++] * 256 +\r\n                    this.byteArray[this.currentPos++] * 65536 +\r\n                    this.byteArray[this.currentPos++] * 16777216);\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n        public tryReadInt64(lambda: (value: number) => void): boolean {\r\n            let result = this.assureRemainingBytesInBlock(8);\r\n\r\n            if (result) {\r\n                lambda(this.byteArray[this.currentPos++] +\r\n                    this.byteArray[this.currentPos++] * 256 +\r\n                    this.byteArray[this.currentPos++] * 65536 +\r\n                    this.byteArray[this.currentPos++] * 16777216 +\r\n                    this.byteArray[this.currentPos++] * 4294967296 +\r\n                    this.byteArray[this.currentPos++] * 1099511627776 +\r\n                    this.byteArray[this.currentPos++] * 281474976710656 +\r\n                    this.byteArray[this.currentPos++] * 72057594037927936);\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n        public tryReadString(lambda: (value: string) => void): boolean {\r\n            let result = false;\r\n\r\n\r\n            this.tryReadInt((stringLength) => {\r\n                let value: string = '';\r\n\r\n                if (this.assureRemainingBytesInBlock(stringLength)) {\r\n                    \r\n                    for (let i: number = 0; i < stringLength; ++i) {\r\n                        value += String.fromCharCode(this.byteArray[this.currentPos++]);\r\n                    }\r\n                }\r\n\r\n                lambda(value);\r\n\r\n                result = true;\r\n            });\r\n\r\n            return result;\r\n        }\r\n\r\n        public readString(): string {\r\n            let result: string = '';\r\n            this.tryReadString((value) => { result = value; });\r\n            return result;\r\n        }\r\n\r\n        public readMatrix4(): psgeometry.Matrix4 {\r\n            let result = new psgeometry.Matrix4();\r\n            for (let i = 0; i < 16; ++i) {\r\n                this.tryReadFloat((val) => { result.elements[i] = val; });\r\n            }\r\n            return result.transpose();\r\n        }\r\n\r\n        private internalReadString(startPos: number, length: number): string {\r\n            let result: string = '';\r\n            for (let i: number = 0; i < length; ++i) {\r\n                result += String.fromCharCode(this.byteArray[startPos + i]);\r\n            }\r\n            return result;\r\n        }\r\n\r\n        private internalReadInt(startPos: number): number {\r\n            return this.byteArray[startPos] +\r\n                this.byteArray[startPos + 1] * 256 +\r\n                this.byteArray[startPos + 2] * 65536 +\r\n                this.byteArray[startPos + 3] * 16777216;\r\n        }\r\n\r\n        private assureFileHeader() {\r\n            if (this.byteArray.byteLength >= 8) {\r\n                if (this.byteArray[0] == 0x70 && // =\"psblstr1\"\r\n                    this.byteArray[1] == 0x73 &&\r\n                    this.byteArray[2] == 0x62 &&\r\n                    this.byteArray[3] == 0x6C &&\r\n                    this.byteArray[4] == 0x73 &&\r\n                    this.byteArray[5] == 0x74 &&\r\n                    this.byteArray[6] == 0x72 &&\r\n                    this.byteArray[7] == 0x31) {\r\n                    this.currentPos += 8;\r\n                    this.state = BlockStreamReaderStates.BLOCK_DESCRIPTOR_EXPECTED;\r\n                } else {\r\n                    this.fatalError = true;\r\n                }\r\n            } else {\r\n                this.fatalError = this.isComplete;\r\n            }\r\n        }\r\n\r\n        public enterBlock(): { success: boolean, descriptor: BlockStreamBlockDescriptor } {\r\n            let result: { success: boolean, descriptor: BlockStreamBlockDescriptor } = { success: false, descriptor: null };\r\n\r\n            if (this.byteArray.byteLength >= this.currentPos + 5) {\r\n                if (this.byteArray[this.currentPos] == 0x70 && // = \"psbl\"\r\n                    this.byteArray[this.currentPos + 1] == 0x73 &&\r\n                    this.byteArray[this.currentPos + 2] == 0x62 &&\r\n                    this.byteArray[this.currentPos + 3] == 0x6C) {\r\n                    let blockTypeLength = this.byteArray[this.currentPos + 4];\r\n                    if (this.byteArray.byteLength >= this.currentPos + 5 + blockTypeLength + 8) {\r\n                        // read the descriptor from stream\r\n                        result.descriptor = new BlockStreamBlockDescriptor();\r\n                        result.descriptor.BlockType = this.internalReadString(this.currentPos + 5, blockTypeLength);\r\n                        result.descriptor.MajorVersion = this.byteArray[this.currentPos + 5 + blockTypeLength];\r\n                        result.descriptor.MinorVersion = this.byteArray[this.currentPos + 5 + blockTypeLength + 1];\r\n                        result.descriptor.Flags = this.byteArray[this.currentPos + 5 + blockTypeLength + 2] * 256 + this.byteArray[this.currentPos + 5 + blockTypeLength + 3];\r\n                        result.descriptor.PayloadBytes = this.internalReadInt(this.currentPos + 5 + blockTypeLength + 4);\r\n                        this.state = BlockStreamReaderStates.PAYLOAD_EXPECTED;\r\n                        this.currentPos += 5 + blockTypeLength + 8;\r\n                        this.blockEnd = this.currentPos + result.descriptor.PayloadBytes;\r\n\r\n                        this.currentBlockDescriptor = result.descriptor;\r\n\r\n                        result.success = true;\r\n                    } else {\r\n                        // there are too few bytes to make a full block descriptor, but the stream is completely read\r\n                        this.fatalError = this.isComplete;\r\n                    }\r\n                } else {\r\n                    // no valid block header found\r\n                    this.fatalError = true;\r\n                }\r\n            } else {\r\n                // there are too few bytes to make a block header, but the stream is completely read \r\n                this.fatalError = this.isComplete && (this.byteArray.byteLength > this.currentPos);\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n        public leaveBlock() {\r\n            this.currentPos = this.blockEnd;\r\n            this.state = BlockStreamReaderStates.BLOCK_DESCRIPTOR_EXPECTED;\r\n        }\r\n    }\r\n\r\n    export class ShaderInstance {\r\n\r\n        private shaderKey: string;\r\n\r\n        private references: { [index: string]: string } = {};\r\n\r\n        private figureID: string;\r\n\r\n        public get FigureID() {\r\n            return this.figureID;\r\n        }\r\n\r\n        public set FigureID(value: string) {\r\n            this.figureID = value;\r\n        }\r\n\r\n        public get ShaderKey() {\r\n            return this.shaderKey;\r\n        }\r\n\r\n        public set ShaderKey(value: string) {\r\n            this.shaderKey = value;\r\n        }\r\n\r\n        public getReference(key: string) {\r\n            return this.references[key];\r\n        }\r\n\r\n        constructor(shaderKey: string) {\r\n            this.shaderKey = shaderKey;\r\n        }\r\n\r\n        public construct(reader: BlockStreamReader) {\r\n        }\r\n\r\n        public addReference(key: string, value: string) {\r\n            this.references[key] = value;\r\n        }\r\n    }\r\n\r\n    export class MeshShaderInstance extends ShaderInstance {\r\n\r\n        SIZE_OF_FLOAT = 4;\r\n\r\n        protected bufferID: string;\r\n\r\n        protected priority: number;\r\n\r\n        constructor(shaderKey: string) {\r\n            super(shaderKey);\r\n        }\r\n\r\n        public construct(reader: BlockStreamReader) {\r\n            if (!reader.tryReadString((id) => { this.bufferID = id; })) {\r\n                this.bufferID = '_default';\r\n            }\r\n            if (!reader.tryReadInt16((priority) => { this.priority = priority; })) {\r\n                this.priority = 0;\r\n            }\r\n        }\r\n\r\n        public getStride(): number {\r\n            return this.ShaderKey == 'TransparentMeshShader' ? 10 * this.SIZE_OF_FLOAT : 9 * this.SIZE_OF_FLOAT;\r\n        }\r\n\r\n    }\r\n\r\n    export class TexturedMeshShaderInstance extends MeshShaderInstance {\r\n\r\n        protected textureID: string;\r\n\r\n        public get TextureID() {\r\n            return this.textureID;\r\n        }\r\n\r\n        constructor(shaderKey: string) {\r\n            super(shaderKey);\r\n        }\r\n\r\n        public construct(reader: BlockStreamReader) {\r\n            let result = reader.tryReadString((textureID) => { this.textureID = textureID; });\r\n\r\n            if (result) {\r\n                this.addReference('TextureBuffer', this.textureID);\r\n\r\n                super.construct(reader);\r\n            }\r\n        }\r\n\r\n        public getStride(): number {\r\n            return 11 * this.SIZE_OF_FLOAT;\r\n        }\r\n\r\n    }\r\n\r\n    function ShaderInstanceFromReader(reader: BlockStreamReader): ShaderInstance {\r\n        let result: ShaderInstance = null;\r\n\r\n        let shaderKey;\r\n        if (reader.tryReadString((key) => { shaderKey = key; })) {\r\n            if (shaderKey == 'OpaqueMeshShader' || shaderKey == 'TransparentMeshShader') {\r\n                result = new MeshShaderInstance(shaderKey);\r\n            }\r\n            else if (shaderKey == 'TexturedMeshShader') {\r\n                result = new TexturedMeshShaderInstance(shaderKey);\r\n            }\r\n\r\n            if (result) {\r\n                result.construct(reader);\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    export class Mesh3DLib {\r\n        private rootNode: NodeAsset;\r\n\r\n        public constructor(private objectNamePrefix: string) {\r\n        }\r\n\r\n        public setRootNode(rootNode: NodeAsset) {\r\n            this.rootNode = rootNode;\r\n        }\r\n\r\n        public getNodeFromPath(path: string): NodeAsset {\r\n            if (path.length == 0 || !this.rootNode || this.rootNode.Name == path) {\r\n                return this.rootNode;\r\n            }\r\n            else {\r\n                return this.rootNode.getChildNodeFromPath(path.substr(this.rootNode.Name.length));\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    export class AssetFactoryWebGL {\r\n\r\n        private lastPercentage = -1;\r\n\r\n        private stage: StageWebGL;\r\n\r\n        private currentFigure: FigureWebGL;\r\n\r\n        private currentShaderInstance: ShaderInstance;\r\n\r\n        private currentSceneMesh3DLib: Mesh3DLib;\r\n\r\n        constructor(stage: StageWebGL) {\r\n            this.stage = stage;\r\n        }\r\n\r\n        protected createFigure(reader: BlockStreamReader, stage: StageWebGL, assetStore: AssetStoreWebGL) {\r\n            this.currentFigure = new FigureWebGL(reader.readString());\r\n\r\n            if (this.currentSceneMesh3DLib) {\r\n                reader.tryReadString((nodePath) => {\r\n                    this.currentFigure.Node = this.currentSceneMesh3DLib.getNodeFromPath(nodePath);\r\n                });\r\n            }\r\n\r\n\r\n            assetStore.addFigure(this.currentFigure);\r\n            return true;\r\n        }\r\n\r\n        protected createMesh(reader: BlockStreamReader, stage: StageWebGL, assetStore: AssetStoreWebGL) {\r\n            let result: boolean = false;\r\n\r\n            this.currentShaderInstance = ShaderInstanceFromReader(reader);\r\n\r\n            if (this.currentShaderInstance && this.currentFigure) {\r\n                this.currentFigure.addShaderInstance(this.currentShaderInstance);\r\n                result = true;\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n        protected createMeshBuffer(reader: BlockStreamReader, stage: StageWebGL, assetStore: AssetStoreWebGL) {\r\n            let bufferAsset = new BufferAssetWebGL(reader, 'VertexBuffer', false);\r\n            let currentID: string = bufferAsset.BufferID;\r\n            let counter = 1;\r\n            while (assetStore.getBufferAsset(currentID)) {\r\n                currentID = bufferAsset.BufferID + counter++;\r\n            }\r\n            bufferAsset.BufferID = currentID;\r\n            assetStore.addBufferAsset(currentID, bufferAsset);\r\n\r\n            if (this.currentShaderInstance && this.currentFigure) {\r\n                // extract triangles from vertex buffer, this information is used by Octree to determine triangle data from triangle indices stored in Octree data structure.\r\n                // this.currentShaderInstance.pushTriangles(this.currentFigure.getTriangles(), bufferAsset.getBufferData(), bufferAsset.getBufferSize());\r\n            }\r\n\r\n            bufferAsset.initialize(stage);\r\n\r\n            if (this.currentShaderInstance) {\r\n                this.currentShaderInstance.addReference('VertexBuffer', bufferAsset.BufferID);\r\n            }\r\n        }\r\n\r\n        protected createMeshIndicesBuffer(reader: BlockStreamReader, stage: StageWebGL, assetStore: AssetStoreWebGL) {\r\n            let bufferAsset = new BufferAssetWebGL(reader, 'IndexBuffer', true);\r\n            let currentID = bufferAsset.BufferID;\r\n            let counter = 1;\r\n            while (assetStore.getBufferAsset(currentID)) {\r\n                currentID = bufferAsset.BufferID + counter++;\r\n            }\r\n            bufferAsset.BufferID = currentID;\r\n            assetStore.addBufferAsset(currentID, bufferAsset);\r\n\r\n            bufferAsset.initialize(stage);\r\n\r\n            if (this.currentShaderInstance) {\r\n                this.currentShaderInstance.addReference('IndexBuffer', bufferAsset.BufferID);\r\n            }\r\n        }\r\n\r\n        protected createTexture(reader: BlockStreamReader, stage: StageWebGL, assetStore: AssetStoreWebGL, deferreds: Array<JQuery.Deferred<boolean>>) {\r\n            let textureName: string; \r\n            let pixelDataSize;\r\n            if (reader.tryReadString((value) => { textureName = value; }) && reader.tryReadInt64((value) => { pixelDataSize = value; })) {\r\n                let imageData = reader.readBytes(pixelDataSize);\r\n                let extension = textureName.substr(textureName.lastIndexOf('.')).toLowerCase();\r\n                let imageType = 'jpeg';\r\n                if (extension == '.png') {\r\n                    imageType = 'png';\r\n                }\r\n                let blob = new Blob([imageData], { 'type': 'image/' + imageType });\r\n                let url = URL.createObjectURL(blob);\r\n                let image = new Image();\r\n\r\n                let deferred = $.Deferred();\r\n                deferreds.push(deferred);\r\n                image.onload = () => {\r\n                    this.stage.AssetStore.addTextureAsset(textureName, new TextureAssetWebGL(this.stage, image));\r\n                    deferred.resolve();\r\n                }\r\n                image.onerror = () => {\r\n                    console.error('Error processing texture blob ' + textureName);\r\n                    deferred.reject();\r\n                }\r\n                image.src = url;\r\n            }\r\n        }\r\n\r\n        protected createOctree(reader: BlockStreamReader, stage: StageWebGL, assetStore: AssetStoreWebGL) {\r\n            this.currentFigure.setIntersector(Octree.CreateFromBlockStream(reader));\r\n        }\r\n\r\n        protected createScene(reader: BlockStreamReader, stage: StageWebGL, assetStore: AssetStoreWebGL) {\r\n            this.currentSceneMesh3DLib = new Mesh3DLib(reader.readString());\r\n        }\r\n\r\n        protected createRootNode(reader: BlockStreamReader, stage: StageWebGL, assetStore: AssetStoreWebGL) {\r\n            if (this.currentSceneMesh3DLib) {\r\n                let rootNode = NodeAsset.FromBlockStream(reader, this.currentSceneMesh3DLib);\r\n                this.currentSceneMesh3DLib.setRootNode(rootNode);\r\n                this.stage.AssetStore.addRootNode(rootNode);\r\n            }\r\n        }\r\n\r\n        private processBlock(blockType: string, reader: BlockStreamReader, stage: StageWebGL, assetStore: AssetStoreWebGL, deferreds: Array<JQuery.Deferred<boolean>>) {\r\n            if (blockType == 'PSScene') {\r\n                this.createScene(reader, stage, assetStore);\r\n            }\r\n            else if (blockType == 'PSFigure') {\r\n                this.createFigure(reader, stage, assetStore);\r\n            }\r\n            else if (blockType == 'PSMesh') {\r\n                this.createMesh(reader, stage, assetStore);\r\n            }\r\n            else if (blockType == 'PSMeshData') {\r\n                this.createMeshBuffer(reader, stage, assetStore);\r\n            }\r\n            else if (blockType == 'PSMeshIndices') {\r\n                this.createMeshIndicesBuffer(reader, stage, assetStore);\r\n            }\r\n            else if (blockType == 'PSTexture') {\r\n                this.createTexture(reader, stage, assetStore, deferreds);\r\n            }\r\n            else if (blockType == 'PSMeshOctree') {\r\n                this.createOctree(reader, stage, assetStore);\r\n            }\r\n            else if (blockType == 'PSRootNode') {\r\n                this.createRootNode(reader, stage, assetStore);\r\n            }\r\n\r\n        }\r\n\r\n        private loadFromArrayBuffer(buffer: ArrayBuffer): JQuery.Deferred<boolean> {\r\n            let deferreds: Array<JQuery.Deferred<boolean>> = [];\r\n\r\n            let assetStore = this.stage.AssetStore;\r\n\r\n            let reader: BlockStreamReader = new BlockStreamReader(buffer);\r\n            try {\r\n                let res = reader.enterBlock();\r\n                while (res.success) {\r\n                    this.processBlock(res.descriptor.BlockType, reader, this.stage, assetStore, deferreds);\r\n                    reader.leaveBlock();\r\n                    res = reader.enterBlock();\r\n                }\r\n            }\r\n            catch (error) {\r\n                console.log(JSON.stringify(error));\r\n            }\r\n\r\n            return $.when.apply($, deferreds);\r\n        }\r\n\r\n        public getFromUrl(url: string): JQuery.Deferred<Boolean> {\r\n            let deferred: JQuery.Deferred<Boolean> = $.Deferred();\r\n\r\n            let req: XMLHttpRequest = new XMLHttpRequest();\r\n\r\n            req.open('GET', url, true);\r\n            req.responseType = 'arraybuffer';\r\n\r\n            req.onload = (event) => {\r\n                this.loadFromArrayBuffer(<ArrayBuffer>req.response).done(() => {\r\n                    deferred.resolve(true);\r\n                });\r\n            };\r\n\r\n            req.onerror = (event) => {\r\n                deferred.reject(event);\r\n            };\r\n\r\n            req.addEventListener('progress', (oEvent) => {\r\n                if (oEvent.lengthComputable) {\r\n                    let percentComplete = oEvent.loaded / oEvent.total;\r\n                    if (this.lastPercentage != Math.floor(percentComplete * 100)) {\r\n                        this.lastPercentage = Math.floor(percentComplete * 100);\r\n                        deferred.notify(Math.round(percentComplete * 100));\r\n                    }\r\n                } else {\r\n                    // Unable to compute progress information since the total size is unknown\r\n                }\r\n            });\r\n\r\n            req.send(null);\r\n\r\n            return deferred;\r\n        }\r\n\r\n    }\r\n\r\n    export interface Intersector {\r\n        getBoundingBox(): psgeometry.AABB3D;\r\n    }\r\n\r\n    export class BoundingBoxIntersector implements Intersector {\r\n        constructor(private boundingBox: psgeometry.AABB3D) {\r\n        }\r\n\r\n        public getBoundingBox(): psgeometry.AABB3D {\r\n            return this.boundingBox;\r\n        }\r\n    }\r\n\r\n    export class Octree implements Intersector {\r\n        private boundingBox = new psgeometry.AABB3D();\r\n\r\n        static CreateFromBlockStream(reader: BlockStreamReader): Octree {\r\n            let octree = new Octree();\r\n            let x0, y0, z0, x1, y1, z1;\r\n            let levels;\r\n             \r\n            if (reader.tryReadInt((val) => { levels = val; }) &&\r\n                reader.tryReadFloat((val) => x0 = val) &&\r\n                reader.tryReadFloat((val) => y0 = val) &&\r\n                reader.tryReadFloat((val) => z0 = val) &&\r\n                reader.tryReadFloat((val) => x1 = val) &&\r\n                reader.tryReadFloat((val) => y1 = val) &&\r\n                reader.tryReadFloat((val) => z1 = val)) {\r\n                octree.boundingBox.addPoint(x0, y0, z0);\r\n                octree.boundingBox.addPoint(x1, y1, z1);\r\n            }\r\n            \r\n            return octree;\r\n        }\r\n\r\n        public getBoundingBox(): psgeometry.AABB3D {\r\n            return this.boundingBox;\r\n        }\r\n\r\n    }\r\n\r\n    export class FigureWebGL {\r\n\r\n        private figureID: string;\r\n\r\n        private shaderInstances: ShaderInstance[] = [];\r\n\r\n        private intersector: Intersector;\r\n\r\n        private node: NodeAsset;\r\n\r\n        public get Node() {\r\n            return this.node;\r\n        }\r\n\r\n        public set Node(value: NodeAsset) {\r\n            this.node = value;\r\n        }\r\n\r\n        public get FigureID() {\r\n            return this.figureID;\r\n        }\r\n\r\n        public get ShaderInstances() {\r\n            return this.shaderInstances;\r\n        }\r\n\r\n        constructor(figureID: string) {\r\n            this.figureID = figureID;\r\n        }\r\n\r\n        public getBoundingBox(): psgeometry.AABB3D {\r\n            if (this.intersector) {\r\n                return this.Node ? this.intersector.getBoundingBox().transform(this.Node.AbsoluteTransformation) : this.intersector.getBoundingBox();\r\n            } else {\r\n                return new psgeometry.AABB3D();\r\n            }\r\n        }\r\n\r\n        public addShaderInstance(shaderInstance: ShaderInstance) {\r\n            this.shaderInstances.push(shaderInstance);\r\n        }\r\n\r\n        public render(context: RenderContextWebGL) {\r\n            let stage = context.Stage;\r\n\r\n            this.shaderInstances.forEach((shaderInstance) => {\r\n                shaderInstance.FigureID = this.figureID;\r\n                let shaderProgram = stage.getShaderProgram(context, shaderInstance.ShaderKey);\r\n                if (shaderProgram) {\r\n                    context.ShaderProgram = shaderProgram;\r\n                    context.NodeTransform = this.Node ? this.Node.AbsoluteTransformation : null;\r\n                    shaderProgram.render(context, shaderInstance);\r\n                }\r\n            });\r\n        }\r\n\r\n        public setIntersector(intersector: Intersector) {\r\n            this.intersector = intersector;\r\n        }\r\n\r\n        public intersectsBoundingBox(ray: psgeometry.Line3D, at: psgeometry.Vec3) {\r\n            let result = false;\r\n            if (this.intersector) {\r\n                let intersectionPoint = this.intersector.getBoundingBox().intersectsRay(ray);\r\n                if (intersectionPoint) {\r\n                    at.assignVec(intersectionPoint);\r\n                    result = true\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n    }\r\n\r\n    export class AnimationTransformation {\r\n        public static FromBlockStream(reader: BlockStreamReader, mesh3DLib: Mesh3DLib): AnimationTransformation {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    export class NodeAsset {\r\n        private name: string;\r\n\r\n        private parentNode: NodeAsset;\r\n\r\n        private childNodes: { [index: string]: NodeAsset } = {};\r\n\r\n        private localTransformation: psgeometry.Matrix4;\r\n\r\n        private absoluteTransformation: psgeometry.Matrix4;\r\n\r\n        public get Name() {\r\n            return this.name;\r\n        }\r\n\r\n        public get AbsoluteTransformation() {\r\n            return this.absoluteTransformation;\r\n        }\r\n\r\n        public get LocalTransformation() {\r\n            return this.localTransformation;\r\n        }\r\n\r\n        public getChildNodeFromPath(path: string) {\r\n            for (let child in this.childNodes) {\r\n                if (path == this.childNodes[child].Name) {\r\n                    return this.childNodes[child];\r\n                }\r\n            }\r\n            for (let child in this.childNodes) {\r\n                if (path.substring(0, this.childNodes[child].Name.length) == this.childNodes[child].Name) {\r\n                    return this.childNodes[child].getChildNodeFromPath(path.substr(this.childNodes[child].Name.length));\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n\r\n\r\n        public static FromBlockStream(reader: BlockStreamReader, mesh3DLib: Mesh3DLib, parentNode?: NodeAsset): NodeAsset {\r\n            let result = new NodeAsset();\r\n\r\n            result.name = reader.readString();\r\n            result.localTransformation = reader.readMatrix4();\r\n            result.absoluteTransformation = NodeAsset.calculateAbsoluteTransformation(result.localTransformation, parentNode);\r\n            result.parentNode = parentNode;\r\n            result.readChildNodes(reader, mesh3DLib);\r\n            result.readAnimationTransformations(reader, mesh3DLib);\r\n\r\n            return result;\r\n        }\r\n\r\n        private static calculateAbsoluteTransformation(localTransformation: psgeometry.Matrix4, parentNode: NodeAsset): psgeometry.Matrix4 {\r\n            if (parentNode) {\r\n                return <psgeometry.Matrix4>localTransformation.multiply(parentNode.AbsoluteTransformation);\r\n            }\r\n            else {\r\n                return localTransformation;\r\n            }\r\n        }\r\n\r\n        private readChildNodes(reader: BlockStreamReader, mesh3DLib: Mesh3DLib) {\r\n            reader.tryReadInt((childNameCount) => {\r\n                for (let i = 0; i < childNameCount; ++i) {\r\n                    this.addChildNode(NodeAsset.FromBlockStream(reader, mesh3DLib, this));\r\n                }\r\n            });\r\n        }\r\n\r\n        private readAnimationTransformations(reader: BlockStreamReader, mesh3DLib: Mesh3DLib) {\r\n            reader.tryReadInt((numAnimationTransformations) => {\r\n                for (let i = 0; i < numAnimationTransformations; ++i) {\r\n                    this.addAnimationTransformation(AnimationTransformation.FromBlockStream(reader, mesh3DLib));\r\n                }\r\n            });\r\n        }\r\n\r\n        private addChildNode(node: NodeAsset) {\r\n            this.childNodes[node.Name] = node;\r\n        } \r\n\r\n        private addAnimationTransformation(animationTransformation: AnimationTransformation) {\r\n\r\n        }\r\n    }\r\n\r\n    export class BufferAssetWebGL {\r\n\r\n        private bufferID: string;\r\n\r\n        private bufferSize: number = 0;\r\n\r\n        public bufferData: ArrayBuffer | SharedArrayBuffer;\r\n\r\n        private webGLBuffer: WebGLBuffer;\r\n\r\n        private isElementBuffer: boolean = false;\r\n\r\n        public get BufferID() {\r\n            return this.bufferID;\r\n        }\r\n\r\n        public set BufferID(value: string) {\r\n            this.bufferID = value;\r\n        }\r\n\r\n        public get Buffer() {\r\n            return this.webGLBuffer;\r\n        }\r\n\r\n        public get BufferSize() {\r\n            return this.bufferSize;\r\n        }\r\n\r\n        public set BufferSize(value: number) {\r\n            this.bufferSize = value;\r\n        }\r\n\r\n        constructor(reader: BlockStreamReader, bufferID: string, isElementBuffer: boolean) {\r\n            this.bufferID = bufferID;\r\n            this.isElementBuffer = isElementBuffer;\r\n\r\n            if (reader) {\r\n                let descriptor = reader.CurrentBlockDescriptor;\r\n                if (descriptor) {\r\n\r\n                    // read additional meta data if available\r\n                    if (descriptor.MajorVersion > 1) {\r\n                        this.bufferID = reader.readString();\r\n                    }\r\n\r\n                    this.bufferSize = reader.remainingBytesInBlock();\r\n                    this.bufferData = reader.readBytes(this.bufferSize);\r\n                }\r\n            }\r\n        }\r\n\r\n        public initialize(stage: StageWebGL) {\r\n            this.webGLBuffer = stage.gl.createBuffer();\r\n\r\n            if (this.isElementBuffer) {\r\n                stage.gl.bindBuffer(stage.gl.ELEMENT_ARRAY_BUFFER, this.webGLBuffer);\r\n                stage.gl.bufferData(stage.gl.ELEMENT_ARRAY_BUFFER, <ArrayBuffer>this.bufferData, stage.gl.STATIC_DRAW);\r\n            } else {\r\n                stage.gl.bindBuffer(stage.gl.ARRAY_BUFFER, this.webGLBuffer);\r\n                stage.gl.bufferData(stage.gl.ARRAY_BUFFER, <ArrayBuffer>this.bufferData, stage.gl.STATIC_DRAW);\r\n            }\r\n        }\r\n\r\n        public bind(stage: StageWebGL) {\r\n            if (this.isElementBuffer) {\r\n                stage.gl.bindBuffer(stage.gl.ELEMENT_ARRAY_BUFFER, this.webGLBuffer);\r\n            } else {\r\n                stage.gl.bindBuffer(stage.gl.ARRAY_BUFFER, this.webGLBuffer);\r\n            }\r\n        }\r\n\r\n        public bindInterleaved(stage: StageWebGL, attributeLocation: number, size: number, stride: number, offset: number) {\r\n            if (attributeLocation >= 0) {\r\n                stage.gl.bindBuffer(stage.gl.ARRAY_BUFFER, this.webGLBuffer);\r\n                stage.gl.enableVertexAttribArray(attributeLocation);\r\n                stage.gl.vertexAttribPointer(attributeLocation, size, stage.gl.FLOAT, false, stride, offset);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    export class OpaqueMeshBuilder {\r\n\r\n        private vertices: Array<number> = [];\r\n\r\n        private indices: Array<number> = [];\r\n\r\n        private vertBufferAsset: BufferAssetWebGL;\r\n\r\n        private indBufferAsset: BufferAssetWebGL;\r\n\r\n        constructor() {\r\n        }\r\n\r\n        public addTri(x0: number, y0: number, z0: number,\r\n            x1: number, y1: number, z1: number,\r\n            x2: number, y2: number, z2: number,\r\n            r: number, g: number, b: number, doubleSided?: boolean) {\r\n\r\n            this.vertices.push(\r\n                x0, y0, z0, 0, 0, 1, r, g, b,\r\n                x1, y1, z1, 0, 0, 1, r, g, b,\r\n                x2, y2, z2, 0, 0, 1, r, g, b);\r\n\r\n            let i = this.indices.length;\r\n            this.indices.push(i, i + 1, i + 2);\r\n\r\n            if (doubleSided) {\r\n                this.vertices.push(\r\n                    x1, y1, z1, 0, 0, 1, r, g, b,\r\n                    x0, y0, z0, 0, 0, 1, r, g, b,\r\n                    x2, y2, z2, 0, 0, 1, r, g, b);\r\n\r\n                i = this.indices.length;\r\n                this.indices.push(i, i + 1, i + 2);\r\n            }\r\n        }\r\n\r\n        public addQuad(x0: number, y0: number, z0: number,\r\n            x1: number, y1: number, z1: number,\r\n            x2: number, y2: number, z2: number,\r\n            x3: number, y3: number, z3: number,\r\n            r: number, g: number, b: number, doubleSided?: boolean) {\r\n\r\n            this.addTri(x0, y0, z0,\r\n                x1, y1, z1,\r\n                x2, y2, z2,\r\n                r, g, b, doubleSided);\r\n            this.addTri(x0, y0, z0,\r\n                x2, y2, z2,\r\n                x3, y3, z3,\r\n                r, g, b, doubleSided);\r\n        }\r\n\r\n        public addStroke(x0: number, y0: number, z0: number,\r\n            x1: number, y1: number, z1: number,\r\n            r: number, g: number, b: number) {\r\n\r\n            let dir = new psgeometry.Vec3(x1, y1, z1).sub(new psgeometry.Vec3(x0, y0, z0));\r\n            let radius = dir.norm();\r\n            let azimuth = Math.atan2(-dir.z, dir.x);\r\n            let polar = Math.asin(dir.y / radius);\r\n\r\n            let thickness = .01;\r\n            let up = <psgeometry.Vec4>psgeometry.Matrix4.FromRotation(azimuth, polar, 0).multiply(new psgeometry.Vec4(0, thickness, 0, 1));\r\n            let front = <psgeometry.Vec4>psgeometry.Matrix4.FromRotation(azimuth, polar, 0).multiply(new psgeometry.Vec4(0, 0, thickness, 1));\r\n\r\n            this.addQuad(x0 + up.x - front.x, y0 + up.y - front.y, z0 + up.z - front.z,\r\n                x1 + up.x - front.x, y1 + up.y - front.y, z1 + up.z - front.z,\r\n                x1 - up.x - front.x, y1 - up.y - front.y, z1 - up.z - front.z,\r\n                x0 - up.x - front.x, y0 - up.y - front.y, z0 - up.z - front.z,\r\n                r, g, b);\r\n\r\n            this.addQuad(x0 - up.x + front.x, y0 - up.y + front.y, z0 - up.z + front.z,\r\n                x1 - up.x + front.x, y1 - up.y + front.y, z1 - up.z + front.z,\r\n                x1 + up.x + front.x, y1 + up.y + front.y, z1 + up.z + front.z,\r\n                x0 + up.x + front.x, y0 + up.y + front.y, z0 + up.z + front.z,\r\n                r, g, b);\r\n\r\n            this.addQuad(x0 - up.x - front.x, y0 - up.y - front.y, z0 - up.z - front.z,\r\n                x1 - up.x - front.x, y1 - up.y - front.y, z1 - up.z - front.z,\r\n                x1 - up.x + front.x, y1 - up.y + front.y, z1 - up.z + front.z,\r\n                x0 - up.x + front.x, y0 - up.y + front.y, z0 - up.z + front.z,\r\n                r, g, b);\r\n\r\n            this.addQuad(x0 + up.x + front.x, y0 + up.y + front.y, z0 + up.z + front.z,\r\n                x1 + up.x + front.x, y1 + up.y + front.y, z1 + up.z + front.z,\r\n                x1 + up.x - front.x, y1 + up.y - front.y, z1 + up.z - front.z,\r\n                x0 + up.x - front.x, y0 + up.y - front.y, z0 + up.z - front.z,\r\n                r, g, b);\r\n\r\n        }\r\n\r\n        public initialize(stage: StageWebGL) {\r\n            let vertBuf = new Float32Array(this.vertices.length);\r\n            vertBuf.set(this.vertices);\r\n            this.vertBufferAsset.bufferData = vertBuf.buffer;\r\n            this.vertBufferAsset.BufferSize = this.indices.length * 9 * 4;\r\n\r\n            let indBuf = new Int32Array(this.indices.length);\r\n            indBuf.set(this.indices);\r\n            this.indBufferAsset.bufferData = indBuf.buffer;\r\n\r\n            this.vertBufferAsset.initialize(stage);\r\n            this.indBufferAsset.initialize(stage);\r\n        }\r\n\r\n        public createFigure(stage: StageWebGL, figureID: string): FigureWebGL {\r\n            this.indBufferAsset = new modelstageweb.BufferAssetWebGL(undefined, figureID + '_indices', true);\r\n            this.vertBufferAsset = new modelstageweb.BufferAssetWebGL(undefined, figureID + '_vertices', false);\r\n\r\n            this.initialize(stage);\r\n\r\n            stage.AssetStore.addBufferAsset(figureID + '_indices', this.indBufferAsset);\r\n            stage.AssetStore.addBufferAsset(figureID + '_vertices', this.vertBufferAsset);\r\n\r\n            let shaderInstance = new modelstageweb.MeshShaderInstance('OpaqueMeshShader');\r\n            shaderInstance.addReference('IndexBuffer', figureID + '_indices');\r\n            shaderInstance.addReference('VertexBuffer', figureID + '_vertices');\r\n\r\n            let figure = new modelstageweb.FigureWebGL(figureID);\r\n            figure.addShaderInstance(shaderInstance);\r\n\r\n            return figure;\r\n        }\r\n    }\r\n\r\n    export class TransparentMeshBuilder {\r\n\r\n        private vertices: Array<number> = [];\r\n\r\n        private indices: Array<number> = [];\r\n\r\n        constructor(protected vertBufferAsset: BufferAssetWebGL, protected indBufferAsset: BufferAssetWebGL) {\r\n        }\r\n\r\n        public addTri(x0: number, y0: number, z0: number,\r\n            x1: number, y1: number, z1: number,\r\n            x2: number, y2: number, z2: number,\r\n            r: number, g: number, b: number, a: number, twoSided?: boolean) {\r\n\r\n            this.vertices.push(\r\n                x0, y0, z0, 0, 0, 1, r, g, b, a,\r\n                x1, y1, z1, 0, 0, 1, r, g, b, a,\r\n                x2, y2, z2, 0, 0, 1, r, g, b, a);\r\n\r\n            let i = this.indices.length;\r\n            this.indices.push(i, i + 1, i + 2);\r\n\r\n            if (twoSided) {\r\n                this.addTri(x0, y0, z0,\r\n                    x2, y2, z2,\r\n                    x1, y1, z1,\r\n                    r, g, b, a);\r\n            }\r\n        }\r\n\r\n        public addQuad(x0: number, y0: number, z0: number,\r\n            x1: number, y1: number, z1: number,\r\n            x2: number, y2: number, z2: number,\r\n            x3: number, y3: number, z3: number,\r\n            r: number, g: number, b: number, a: number, twoSided?: boolean) {\r\n\r\n            this.addTri(x0, y0, z0,\r\n                x1, y1, z1,\r\n                x2, y2, z2,\r\n                r, g, b, a, twoSided);\r\n            this.addTri(x0, y0, z0,\r\n                x2, y2, z2,\r\n                x3, y3, z3,\r\n                r, g, b, a, twoSided);\r\n        }\r\n\r\n        public initialize(stage: StageWebGL) {\r\n            let vertBuf = new Float32Array(this.vertices.length);\r\n            vertBuf.set(this.vertices);\r\n            this.vertBufferAsset.bufferData = vertBuf.buffer;\r\n            this.vertBufferAsset.BufferSize = this.indices.length * 10 * 4;\r\n\r\n            let indBuf = new Int32Array(this.indices.length);\r\n            indBuf.set(this.indices);\r\n            this.indBufferAsset.bufferData = indBuf.buffer;\r\n\r\n            this.vertBufferAsset.initialize(stage);\r\n            this.indBufferAsset.initialize(stage);\r\n        }\r\n    }\r\n\r\n    export class TexturedMeshBuilder {\r\n\r\n        private vertices: Array<number> = [];\r\n\r\n        private indices: Array<number> = [];\r\n\r\n        constructor(protected vertBufferAsset: BufferAssetWebGL, protected indBufferAsset: BufferAssetWebGL) {\r\n        }\r\n\r\n        public addTri(x0: number, y0: number, z0: number, u0: number, v0: number,\r\n            x1: number, y1: number, z1: number, u1: number, v1: number,\r\n            x2: number, y2: number, z2: number, u2: number, v2: number,\r\n            r: number, g: number, b: number, twoSided?: boolean) {\r\n\r\n            this.vertices.push(\r\n                x0, y0, z0, 0, 0, 1, r, g, b, u0, v0,\r\n                x1, y1, z1, 0, 0, 1, r, g, b, u1, v1,\r\n                x2, y2, z2, 0, 0, 1, r, g, b, u2, v2);\r\n\r\n            let i = this.indices.length;\r\n            this.indices.push(i, i + 1, i + 2);\r\n\r\n            if (twoSided) {\r\n                this.addTri(x0, y0, z0, u0, v0,\r\n                    x2, y2, z2, u2, v2,\r\n                    x1, y1, z1, u1, v1,\r\n                    r, g, b);\r\n            }\r\n        }\r\n\r\n        public addQuad(x0: number, y0: number, z0: number, u0: number, v0: number,\r\n            x1: number, y1: number, z1: number, u1: number, v1: number,\r\n            x2: number, y2: number, z2: number, u2: number, v2: number,\r\n            x3: number, y3: number, z3: number, u3: number, v3: number,\r\n            r: number, g: number, b: number, twoSided?: boolean) {\r\n\r\n            this.addTri(x0, y0, z0, u0, v0,\r\n                x1, y1, z1, u1, v1,\r\n                x2, y2, z2, u2, v2,\r\n                r, g, b, twoSided);\r\n            this.addTri(x0, y0, z0, u0, v0,\r\n                x2, y2, z2, u2, v2, \r\n                x3, y3, z3, u3, v3,\r\n                r, g, b, twoSided);\r\n        }\r\n\r\n        public initialize(stage: StageWebGL) {\r\n            let vertBuf = new Float32Array(this.vertices.length);\r\n            vertBuf.set(this.vertices);\r\n            this.vertBufferAsset.bufferData = vertBuf.buffer;\r\n            this.vertBufferAsset.BufferSize = this.indices.length * 11 * 4;\r\n\r\n            let indBuf = new Int32Array(this.indices.length);\r\n            indBuf.set(this.indices);\r\n            this.indBufferAsset.bufferData = indBuf.buffer;\r\n\r\n            this.vertBufferAsset.initialize(stage);\r\n            this.indBufferAsset.initialize(stage);\r\n        }\r\n    }\r\n\r\n    export class TextureAssetWebGL {\r\n\r\n        private texture: WebGLTexture;\r\n\r\n        constructor(stage: StageWebGL, image: HTMLImageElement | WebGLTexture) {\r\n            if (image instanceof WebGLTexture) {\r\n                this.texture = image;\r\n            } else {\r\n                this.texture = stage.gl.createTexture();\r\n                stage.gl.bindTexture(stage.gl.TEXTURE_2D, this.texture);\r\n                stage.gl.texImage2D(stage.gl.TEXTURE_2D, 0, stage.gl.RGBA, stage.gl.RGBA, stage.gl.UNSIGNED_BYTE, image);\r\n                stage.gl.texParameteri(stage.gl.TEXTURE_2D, stage.gl.TEXTURE_MAG_FILTER, stage.gl.LINEAR);\r\n                stage.gl.texParameteri(stage.gl.TEXTURE_2D, stage.gl.TEXTURE_MIN_FILTER, stage.gl.LINEAR_MIPMAP_NEAREST);\r\n                stage.gl.generateMipmap(stage.gl.TEXTURE_2D);\r\n                stage.gl.bindTexture(stage.gl.TEXTURE_2D, null);\r\n            }\r\n        }\r\n\r\n        bind(stage: StageWebGL, program: ShaderProgramWebGL, attributeName: string) {\r\n            stage.gl.activeTexture(stage.gl.TEXTURE0);\r\n            stage.gl.uniform1i(stage.gl.getUniformLocation(program.Program, attributeName), 0);\r\n            stage.gl.bindTexture(stage.gl.TEXTURE_2D, this.texture);\r\n        }\r\n\r\n        unbind(stage: StageWebGL, program: ShaderProgramWebGL, attributeName: string) {\r\n            stage.gl.activeTexture(stage.gl.TEXTURE0);\r\n            stage.gl.bindTexture(stage.gl.TEXTURE_2D, null);\r\n        }\r\n\r\n    }\r\n\r\n    /// An asset store class for WebGL.\r\n    export class AssetStoreWebGL {\r\n\r\n        /// All aggregated figures.\r\n        private figures: { [index: string]: FigureWebGL } = {};\r\n\r\n        /// All aggregated nodes assets.\r\n        private rootNodeAssets: { [index: string]: NodeAsset } = {};\r\n\r\n        /// All aggregated buffer assets.\r\n        private bufferAssets: { [index: string]: BufferAssetWebGL } = {};\r\n\r\n        /// All aggregated texture assets.\r\n        private textureAssets: { [index: string]: TextureAssetWebGL } = {};\r\n\r\n\r\n        /// Adds the specified figure to the the store.\r\n        public addFigure(figure: FigureWebGL) {\r\n            this.figures[figure.FigureID] = figure;\r\n        }\r\n\r\n        /// Determines the figure with the the specified id.\r\n        public getFigure(figureID: string): FigureWebGL {\r\n            return this.figures[figureID];\r\n        }\r\n\r\n        /// Adds a buffer asset to the store.\r\n        public addBufferAsset(bufferAssetID: string, bufferAsset: BufferAssetWebGL) {\r\n            this.bufferAssets[bufferAssetID] = bufferAsset;\r\n        }\r\n\r\n        public addRootNode(node: NodeAsset) {\r\n            this.rootNodeAssets[node.Name] = node;\r\n        }\r\n\r\n        /// Determines the buffer asset with the specified id.\r\n        public getBufferAsset(bufferAssetID: string): BufferAssetWebGL {\r\n            return this.bufferAssets[bufferAssetID];\r\n        }\r\n\r\n        /// Adds a texture asset to the store.\r\n        public addTextureAsset(textureAssetID: string, textureAsset: TextureAssetWebGL) {\r\n            this.textureAssets[textureAssetID] = textureAsset;\r\n        }\r\n\r\n        /// Determines the texture asset with the specified id.\r\n        public getTextureAsset(textureAssetID: string): TextureAssetWebGL {\r\n            return this.textureAssets[textureAssetID];\r\n        }\r\n\r\n        /// Returns the map of aggregated figures.\r\n        public get Figures(): { [index: string]: FigureWebGL } {\r\n            return this.figures;\r\n        }\r\n\r\n        public getRootNode(name: string): NodeAsset {\r\n            return this.rootNodeAssets[name];\r\n        }\r\n\r\n    }\r\n\r\n    export interface SceneItemFilterWebGL {\r\n        passes(sceneItem: SceneItemWebGL, context: RenderContextWebGL);\r\n    }\r\n\r\n    export class GenericSceneItemFilterWebGL implements SceneItemFilterWebGL {\r\n        passes(sceneItem: SceneItemWebGL, context: RenderContextWebGL) {\r\n            return context.Phase != 'Shadow';\r\n        }\r\n\r\n    }\r\n\r\n    export class SceneItemWebGL {\r\n\r\n        protected scene: SceneWebGL;\r\n\r\n        protected parent: SceneItemWebGL;\r\n\r\n        protected sceneItemID: string;\r\n\r\n        protected children: Array<SceneItemWebGL> = []\r\n\r\n        protected childrenByKey: { [sceneItemID: string]: SceneItemWebGL } = {}\r\n\r\n        protected isVisible: boolean;\r\n\r\n        protected childrenVisible: boolean;\r\n\r\n        protected testIntersection: boolean;\r\n\r\n        protected testChildrenIntersection: boolean;\r\n\r\n        protected filter: SceneItemFilterWebGL;\r\n\r\n        private data: { [index: string]: any } = {};\r\n\r\n        public get Data(): { [index: string]: any } {\r\n            return this.data;\r\n        }\r\n\r\n        public get Scene() {\r\n            return this.scene;\r\n        }\r\n\r\n        public get SceneItemID() {\r\n            return this.sceneItemID;\r\n        }\r\n\r\n        public get Children() {\r\n            return this.children;\r\n        }\r\n\r\n        public get TestChildrenIntersection() {\r\n            return this.testChildrenIntersection;\r\n        }\r\n\r\n        public set TestChildrenIntersection(val: boolean) {\r\n            this.testChildrenIntersection = val;\r\n        }\r\n\r\n        public get TestIntersection() {\r\n            return this.testIntersection;\r\n        }\r\n\r\n        public set TestIntersection(val: boolean) {\r\n            this.testIntersection = val;\r\n        }\r\n\r\n        public get Filter() { return this.filter; }\r\n\r\n        public set Filter(value: SceneItemFilterWebGL) {\r\n            this.filter = value;\r\n        }\r\n\r\n        constructor(scene: SceneWebGL, sceneItemID: string, isVisible?: boolean, testIntersection?: boolean, childrenVisible?: boolean, testChildrenIntersection?: boolean) {\r\n            this.scene = scene;\r\n            this.sceneItemID = sceneItemID;\r\n            this.isVisible = isVisible || typeof isVisible === 'undefined';\r\n            this.childrenVisible = childrenVisible || typeof childrenVisible === 'undefined';\r\n            this.testIntersection = testIntersection || typeof testIntersection === 'undefined';\r\n            this.testChildrenIntersection = testChildrenIntersection || typeof testChildrenIntersection === 'undefined';\r\n        }\r\n\r\n        public addChild(sceneItem: SceneItemWebGL) {\r\n            this.childrenByKey[sceneItem.sceneItemID] = sceneItem;\r\n            this.children.push(sceneItem);\r\n            sceneItem.addedToSceneGraph(this);\r\n        }\r\n\r\n        public getChild(sceneItemID: string) {\r\n            return this.childrenByKey[sceneItemID];\r\n        }\r\n\r\n        public removeChild(sceneItemID: string) {\r\n            this.children = this.children.filter(sceneItem => sceneItem.sceneItemID != sceneItemID);\r\n            delete this.childrenByKey[sceneItemID];\r\n        }\r\n\r\n        public insertChild(sceneItem: SceneItemWebGL, index: number) {\r\n            this.childrenByKey[sceneItem.sceneItemID] = sceneItem;\r\n            this.children.splice(index, 0, sceneItem);\r\n            sceneItem.addedToSceneGraph(this);\r\n        }\r\n\r\n        protected beginRender(context: RenderContextWebGL) {\r\n        }\r\n\r\n        protected endRender(context: RenderContextWebGL) {\r\n        }\r\n\r\n        public render(context: RenderContextWebGL) {\r\n            if (!this.filter || this.filter.passes(this, context)) {\r\n                if (this.isVisible) {\r\n                    this.beginRender(context);\r\n                    this.renderChildren(context);\r\n                    this.endRender(context);\r\n                } else {\r\n                    this.renderChildren(context);\r\n                }\r\n            }\r\n        }\r\n\r\n        protected renderChildren(context: RenderContextWebGL) {\r\n            if (this.childrenVisible) {\r\n                this.children.forEach((child) => {\r\n                    child.render(context);\r\n                });\r\n            }\r\n        }\r\n\r\n        public addedToSceneGraph(parentSceneItem: SceneItemWebGL) {\r\n            this.scene = parentSceneItem.scene;\r\n            this.parent = parentSceneItem;\r\n        }\r\n\r\n        public intersectsBoundingBox(ray: psgeometry.Line3D, at: psgeometry.Vec3): Boolean {\r\n            return false;\r\n        } \r\n\r\n        protected isIntersectionCandidate(ray: psgeometry.Line3D, at: psgeometry.Vec3): Boolean {\r\n            return this.intersectsBoundingBox(ray, at);\r\n        }\r\n\r\n        public addIntersectionCandidates(ray: psgeometry.Line3D, candidates: Array<IntersectionCandidate>) {\r\n            if (this.testIntersection) {\r\n                let at = new psgeometry.Vec3();\r\n                if (this.isIntersectionCandidate(ray, at)) {\r\n                    candidates.push(new IntersectionCandidate(this, at.squaredDist(ray.p0.asVec3())));\r\n                }\r\n            }\r\n            if (this.testChildrenIntersection) {\r\n                for (let i in this.children) {\r\n                    this.children[i].addIntersectionCandidates(ray, candidates);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    export class ActorWebGL extends SceneItemWebGL {\r\n        private figures: FigureWebGL[] = [];\r\n\r\n        private lastModelTransform: psgeometry.Matrix4;\r\n\r\n        private inverseModelTransform: psgeometry.Matrix4;\r\n\r\n        private state: RenderState = new RenderState();\r\n\r\n        public get State() {\r\n            return this.state;\r\n        }\r\n\r\n        public get Figures() {\r\n            return this.figures;\r\n        }\r\n\r\n        constructor(scene: SceneWebGL, actorID: string) {\r\n            super(scene, actorID);\r\n        }\r\n\r\n        public addFigure(figure: FigureWebGL) {\r\n            this.figures.push(figure);\r\n        }\r\n\r\n        public beginRender(context: RenderContextWebGL) {\r\n            this.figures.forEach((figure) => {\r\n                figure.render(context);\r\n            });\r\n\r\n        }\r\n\r\n        public intersectsBoundingBox(ray: psgeometry.Line3D, at: psgeometry.Vec3): Boolean {\r\n            let transformedRay = this.inverseModelTransform ? ray.transform(this.inverseModelTransform) : ray;\r\n\r\n            let result = false;\r\n            for (let figureIdx in this.figures)\r\n            {\r\n                if (!result) {\r\n                    result = this.figures[figureIdx].intersectsBoundingBox(transformedRay, at);\r\n                    if (result) {\r\n                        at.assignVec(<psgeometry.Vec4>this.lastModelTransform.multiply(at.asVec4()));\r\n                    }\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n\r\n        public render(context: RenderContextWebGL) {\r\n            if (!this.filter || this.filter.passes(this, context)) {\r\n                if (this.isVisible || this.childrenVisible) {\r\n                    context.pushState(this.state);\r\n\r\n                    if (this.isVisible) {\r\n                        this.beginRender(context);\r\n                        this.renderChildren(context);\r\n                        this.endRender(context);\r\n                    } else {\r\n                        this.renderChildren(context);\r\n                    }\r\n\r\n                    let modelTransform = context.NodeTransform ? <psgeometry.Matrix4>context.NodeTransform.multiply(context.ModelTransform) : context.ModelTransform;\r\n                    if (!modelTransform.equals(this.lastModelTransform)) {\r\n                        this.inverseModelTransform = modelTransform.inverse();\r\n                        this.lastModelTransform = modelTransform;\r\n                    }\r\n\r\n                    context.popState();\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    export class IntersectionCandidate {\r\n        public sceneItem: SceneItemWebGL;\r\n\r\n        private squaredDist: number = Infinity;\r\n\r\n        constructor(sceneItem: SceneItemWebGL, squaredDist: number) {\r\n            this.sceneItem = sceneItem;\r\n            this.squaredDist = squaredDist;\r\n        }\r\n\r\n        public compare(intersectionCandidate: IntersectionCandidate) {\r\n            return this.squaredDist < intersectionCandidate.squaredDist ? -1 :\r\n                (this.squaredDist > intersectionCandidate.squaredDist ? 1 : 0);\r\n        }\r\n    }\r\n\r\n    export class RenderState {\r\n        private parent: RenderState;\r\n\r\n        private entries: { [key: string]: any } = {};\r\n\r\n        public get Parent() {\r\n            return this.parent;\r\n        }\r\n\r\n        public set Parent(val: RenderState) {\r\n            this.parent = val;\r\n        }\r\n\r\n        private evaluate(entry: any): any {\r\n            return typeof entry == 'function' ? entry(this) : entry;\r\n        }\r\n\r\n        public contains(key: string) {\r\n            return this.entries[key] != undefined;\r\n        }\r\n\r\n        public get<T>(key: string, defaultValue: T): T {\r\n            let result = defaultValue;\r\n            this.tryGet(key, (val) => { result = val; });\r\n            return result;\r\n        }\r\n\r\n        public tryGet(key: string, lambda: (val: any) => void): boolean {\r\n            if (this.contains(key)) {\r\n                lambda(this.evaluate(this.entries[key]));\r\n                return true;\r\n            } else {\r\n                return this.parent == null ? false : this.parent.tryGet(key, lambda);\r\n            }\r\n        }\r\n\r\n        public set(key: string, value: any) {\r\n            this.entries[key] = value;\r\n        }\r\n    }\r\n\r\n    export class SceneWebGL {\r\n\r\n        private isInitialized: boolean = false;\r\n\r\n        private sceneHierarchy: SceneItemWebGL = new SceneItemWebGL(this, '');\r\n\r\n        private dirty = true;\r\n\r\n        private state = new RenderState();\r\n\r\n        public get SceneHierarchy() {\r\n            return this.sceneHierarchy;\r\n        }\r\n\r\n        public get IsInitialized() {\r\n            return this.isInitialized;\r\n        }\r\n\r\n        public set IsInitialized(value: boolean) {\r\n            this.isInitialized = value;\r\n        }\r\n\r\n        public get State() {\r\n            return this.state;\r\n        }\r\n\r\n        public initialize() {\r\n        }\r\n\r\n        public setDirty() {\r\n            this.dirty = true;\r\n        }\r\n\r\n        public isDirty() {\r\n            if (this.dirty) {\r\n                this.dirty = false;\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        public render(context: RenderContextWebGL) {\r\n            if (this.isInitialized) {\r\n\r\n                context.SceneCategory = this.getSceneCategory();\r\n\r\n                // updateRunningSequences(context);\r\n\r\n                context.pushState(this.state);\r\n\r\n                this.sceneHierarchy.render(context);\r\n\r\n                context.popState();\r\n            }\r\n        }\r\n\r\n        public addSceneItem(sceneItem: SceneItemWebGL, makeVisible: boolean) {\r\n            this.sceneHierarchy.addChild(sceneItem);\r\n            this.setDirty();\r\n        }\r\n\r\n        public getSceneItem(sceneItemID: string) {\r\n            return this.sceneHierarchy.getChild(sceneItemID);\r\n        }\r\n\r\n        public removeSceneItem(sceneItemID: string) {\r\n            this.sceneHierarchy.removeChild(sceneItemID);\r\n\r\n            this.setDirty();\r\n        }\r\n\r\n        public insertSceneItem(sceneItem: SceneItemWebGL, index: number, makeVisible: boolean) {\r\n            this.sceneHierarchy.insertChild(sceneItem, index);\r\n\r\n            this.setDirty();\r\n        }\r\n\r\n        protected getSceneCategory() {\r\n            return '';\r\n        }\r\n\r\n        public getIntersectionCandidates(ray: psgeometry.Line3D, candidates: Array<IntersectionCandidate>) {\r\n            this.sceneHierarchy.addIntersectionCandidates(ray, candidates);\r\n            candidates.sort((a, b) => { return a.compare(b); })\r\n        }\r\n\r\n        public beginFrame() {}\r\n\r\n        /** Update is called periodically (once per frame) to allow updating the state of the scene.\r\n          */\r\n        public update() {}\r\n\r\n        public endFrame() {}\r\n\r\n    }\r\n\r\n    export class Camera {\r\n        protected projectionMatrix: psgeometry.Matrix4;\r\n\r\n        protected inverseProjectionMatrix: psgeometry.Matrix4;\r\n\r\n        protected viewMatrix: psgeometry.Matrix4;\r\n\r\n        protected inverseViewMatrix: psgeometry.Matrix4;\r\n\r\n        private dirty = true;\r\n\r\n        public get ProjectionMatrix() { return this.projectionMatrix; }\r\n\r\n        public get ViewMatrix() { return this.viewMatrix; }\r\n\r\n        protected setDirty() {\r\n            this.dirty = true;\r\n        }\r\n\r\n        public isDirty() {\r\n            if (this.dirty) {\r\n                this.dirty = false;\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        public createViewMatrix(eye: psgeometry.Vec3, center: psgeometry.Vec3, up: psgeometry.Vec3): psgeometry.Matrix4 {\r\n            let z = eye.sub(center).normalize();\r\n            let x = up.cross(z).normalize();\r\n            let y = z.cross(x).normalize();\r\n\r\n            let m = new psgeometry.Matrix4([x.x, x.y, x.z, 0,\r\n            y.x, y.y, y.z, 0,\r\n            z.x, z.y, z.z, 0,\r\n                0, 0, 0, 1]);\r\n\r\n            let t = new psgeometry.Matrix4([1, 0, 0, -eye.x,\r\n                0, 1, 0, -eye.y,\r\n                0, 0, 1, -eye.z,\r\n                0, 0, 0, 1]);\r\n            return <psgeometry.Matrix4>t.multiply(m);\r\n        }\r\n\r\n        public createPerspectiveMatrix(fovy, aspect, znear, zfar): psgeometry.Matrix4 {\r\n            let ymax = znear * Math.tan(fovy * Math.PI / 360.0);\r\n            let ymin = -ymax;\r\n            let xmin = ymin * aspect;\r\n            let xmax = ymax * aspect;\r\n\r\n            return this.makeFrustum(xmin, xmax, ymin, ymax, znear, zfar);\r\n        }\r\n\r\n        public createOrthographicMatrix(left, right, bottom, top, near, far): psgeometry.Matrix4 {\r\n            return new psgeometry.Matrix4([\r\n                2 / (right - left), 0, 0, 0,\r\n                0, 2 / (top - bottom), 0, 0,\r\n                0, 0, 2 / (near - far), 0,\r\n\r\n                (left + right) / (left - right),\r\n                (bottom + top) / (bottom - top),\r\n                (near + far) / (near - far),\r\n                1,\r\n            ]);\r\n        }\r\n\r\n        public makeFrustum(left, right, bottom, top, znear, zfar): psgeometry.Matrix4 {\r\n            let X: number = 2 * znear / (right - left);\r\n            let Y: number = 2 * znear / (top - bottom);\r\n            let A: number = (right + left) / (right - left);\r\n            let B: number = (top + bottom) / (top - bottom);\r\n            let C: number = -(zfar + znear) / (zfar - znear);\r\n            let D: number = -2 * zfar * znear / (zfar - znear);\r\n\r\n            return new psgeometry.Matrix4([\r\n                X, 0, A, 0,\r\n                0, Y, B, 0,\r\n                0, 0, C, D,\r\n                0, 0, -1, 0]);\r\n        }\r\n\r\n    }\r\n\r\n    export class ShadowCameraWebGL extends Camera {\r\n\r\n        private shadowMapWidth = 1024;\r\n\r\n        private shadowMapHeight = 1024;\r\n\r\n        private shadowFramebuffer;\r\n\r\n        private shadowDepthTexture; \r\n\r\n        private renderBuffer;\r\n\r\n\r\n        public resize(stage: StageWebGL) {\r\n\r\n            this.projectionMatrix = this.createOrthographicMatrix(-5, 5, -5, 5, -30, 30);\r\n            this.update(new psgeometry.Vec3(0, 10, 0), new psgeometry.Vec3(0, 0, 0), new psgeometry.Vec3(0, 0, -1));\r\n\r\n            this.shadowFramebuffer = stage.gl.createFramebuffer();\r\n            this.shadowDepthTexture = stage.gl.createTexture();\r\n            this.renderBuffer = stage.gl.createRenderbuffer();\r\n\r\n            let shadowTexture = new TextureAssetWebGL(stage, this.shadowDepthTexture);\r\n            stage.AssetStore.addTextureAsset('Shadow', shadowTexture);\r\n\r\n            stage.gl.bindFramebuffer(stage.gl.FRAMEBUFFER, this.shadowFramebuffer);\r\n            stage.gl.bindTexture(stage.gl.TEXTURE_2D, this.shadowDepthTexture);\r\n            stage.gl.texParameteri(stage.gl.TEXTURE_2D, stage.gl.TEXTURE_MAG_FILTER, stage.gl.LINEAR);\r\n            stage.gl.texParameteri(stage.gl.TEXTURE_2D, stage.gl.TEXTURE_MIN_FILTER, stage.gl.LINEAR);\r\n            stage.gl.texImage2D(stage.gl.TEXTURE_2D, 0, stage.gl.RGBA, this.shadowMapWidth, this.shadowMapHeight, 0, stage.gl.RGBA, stage.gl.UNSIGNED_BYTE, null);\r\n\r\n            stage.gl.bindRenderbuffer(stage.gl.RENDERBUFFER, this.renderBuffer);\r\n            stage.gl.renderbufferStorage(stage.gl.RENDERBUFFER, stage.gl.DEPTH_COMPONENT16, this.shadowMapWidth, this.shadowMapHeight);\r\n\r\n            stage.gl.framebufferTexture2D(stage.gl.FRAMEBUFFER, stage.gl.COLOR_ATTACHMENT0, stage.gl.TEXTURE_2D, this.shadowDepthTexture, 0);\r\n            stage.gl.framebufferRenderbuffer(stage.gl.FRAMEBUFFER, stage.gl.DEPTH_ATTACHMENT, stage.gl.RENDERBUFFER, this.renderBuffer);\r\n\r\n            stage.gl.bindTexture(stage.gl.TEXTURE_2D, null);\r\n            stage.gl.bindRenderbuffer(stage.gl.RENDERBUFFER, null); \r\n        }\r\n\r\n        public updateShadowArea(bbox: psgeometry.AABB2D) {\r\n            var center = bbox.center();\r\n            var extents = bbox.extents();\r\n            this.projectionMatrix = this.createOrthographicMatrix(-extents.x / 2, extents.x / 2, -extents.y / 2, extents.y / 2, -30, 30);\r\n            this.update(new psgeometry.Vec3(center.x, 10, center.y), new psgeometry.Vec3(center.x, 0, center.y), new psgeometry.Vec3(0, 0, -1));\r\n            this.setDirty();\r\n        }\r\n\r\n        public update(pos: psgeometry.Vec3, lookAt: psgeometry.Vec3, up: psgeometry.Vec3) {\r\n            this.viewMatrix = this.createViewMatrix(pos, lookAt, up);\r\n\r\n            this.setDirty();\r\n        }\r\n\r\n        public beginRender(stage: StageWebGL) {\r\n            stage.gl.bindFramebuffer(stage.gl.FRAMEBUFFER, this.shadowFramebuffer);\r\n\r\n            // Set the viewport to match\r\n            stage.gl.viewport(0, 0, this.shadowMapWidth, this.shadowMapHeight);\r\n\r\n            stage.gl.clearColor(0.2, 0.2, 0.2, 0.0);\r\n            stage.gl.clearDepth(0.0);\r\n            stage.gl.clear(stage.gl.COLOR_BUFFER_BIT | stage.gl.DEPTH_BUFFER_BIT);\r\n\r\n            stage.gl.enable(stage.gl.DEPTH_TEST);\r\n            stage.gl.enable(stage.gl.CULL_FACE);\r\n            stage.gl.frontFace(stage.gl.CCW);\r\n            stage.gl.cullFace(stage.gl.BACK);\r\n            stage.gl.depthFunc(stage.gl.GEQUAL);\r\n        }\r\n\r\n        public endRender(stage: StageWebGL) {\r\n        }\r\n\r\n    }\r\n\r\n    export class CameraWebGL extends Camera {\r\n\r\n        private currentCameraPos: psgeometry.Vec3;\r\n\r\n        private clientWidth: number = 1.0;\r\n\r\n        private clientHeight: number = 1.0;\r\n\r\n\r\n        public get ProjectionMatrix() {\r\n            return this.projectionMatrix;\r\n        }\r\n\r\n        public get ViewMatrix() {\r\n            return this.viewMatrix;\r\n        }\r\n\r\n        public resize(stage: StageWebGL) {\r\n            let realToCSSPixels = window.devicePixelRatio || 1;\r\n\r\n            this.clientWidth = stage.gl.canvas.clientWidth;\r\n            this.clientHeight = stage.gl.canvas.clientHeight;\r\n\r\n            // Lookup the size the browser is displaying the canvas in CSS pixels\r\n            // and compute a size needed to make our drawingbuffer match it in\r\n            // device pixels.\r\n            let displayWidth = Math.floor(stage.gl.canvas.clientWidth * realToCSSPixels);\r\n            let displayHeight = Math.floor(stage.gl.canvas.clientHeight * realToCSSPixels);\r\n\r\n            // Make the canvas the same size\r\n            stage.gl.canvas.width = displayWidth / realToCSSPixels;\r\n            stage.gl.canvas.height = displayHeight / realToCSSPixels;\r\n\r\n            this.projectionMatrix = this.createPerspectiveMatrix(45.0, stage.gl.canvas.clientWidth / stage.gl.canvas.clientHeight, 0.1, 200.0);\r\n            //this.projectionMatrix = this.createOrthographicMatrix(-5, 5, -5, 5, -30, 30);\r\n            this.inverseProjectionMatrix = this.projectionMatrix.inverse();\r\n            //this.viewMatrix = this.createViewMatrix(new psgeometry.Vec3(0.0, 1.8, 15.0), new psgeometry.Vec3(0.0, 0.0, 0.0), new psgeometry.Vec3(0.0, 1.0, 0.0));\r\n\r\n            this.setDirty();\r\n        }\r\n\r\n        public update(pos: psgeometry.Vec3, lookAt: psgeometry.Vec3, up: psgeometry.Vec3) {\r\n            this.currentCameraPos = pos;\r\n            this.viewMatrix = this.createViewMatrix(pos, lookAt, up);\r\n            this.inverseViewMatrix = this.viewMatrix.inverse();\r\n\r\n            this.setDirty();\r\n        }\r\n\r\n        public beginRender(stage: StageWebGL) {\r\n\r\n            // Set the viewport to match\r\n            stage.gl.viewport(0, 0, stage.gl.canvas.clientWidth, stage.gl.canvas.clientHeight);\r\n\r\n            stage.gl.bindFramebuffer(stage.gl.FRAMEBUFFER, null);\r\n\r\n            stage.gl.clearColor(0.3, 0.3, 0.3, 1.0);\r\n            stage.gl.clearDepth(1.0);\r\n            stage.gl.clear(stage.gl.DEPTH_BUFFER_BIT); // stage.gl.COLOR_BUFFER_BIT | \r\n\r\n            stage.gl.enable(stage.gl.DEPTH_TEST);\r\n            stage.gl.enable(stage.gl.CULL_FACE);\r\n            stage.gl.frontFace(stage.gl.CCW);\r\n            stage.gl.cullFace(stage.gl.BACK);\r\n            stage.gl.depthFunc(stage.gl.LEQUAL);       \r\n        }\r\n\r\n        public endRender(stage: StageWebGL) {\r\n        }\r\n\r\n        public getViewRay(clientX: number, clientY: number): psgeometry.Line3D {\r\n            let cursor = new psgeometry.Vec4(clientX / this.clientWidth * 2.0 - 1.0, 1.0 - clientY / this.clientHeight * 2.0, -1.0, 1.0);\r\n            let direction = <psgeometry.Vec4>this.inverseProjectionMatrix.multiply(cursor);\r\n            direction.w = 1.0;\r\n            let forward = this.inverseViewMatrix.multiply(direction);\r\n            return new psgeometry.Line3D(this.currentCameraPos, forward);\r\n        }\r\n\r\n    }\r\n\r\n    export class ShaderProgramWebGL {\r\n\r\n        protected isInitialized = false;\r\n\r\n        protected vertexShader: WebGLShader;\r\n\r\n        protected fragmentShader: WebGLShader;\r\n\r\n        protected program: WebGLProgram;\r\n\r\n        public get Program() {\r\n            return this.program;\r\n        }\r\n\r\n        public render(context: RenderContextWebGL, shaderInstance: ShaderInstance) {\r\n            if (this.isInitialized && this.beginRender(context, shaderInstance)) {\r\n                context.Stage.applyState(context);\r\n                this.internalRender(context, shaderInstance);\r\n                this.endRender(context, shaderInstance);\r\n            }\r\n        }\r\n\r\n        protected getAttribLocation(stage: StageWebGL, attribName: string): number {\r\n            return stage.gl.getAttribLocation(this.program, attribName);\r\n        }\r\n\r\n        protected beginRender(context: RenderContextWebGL, shaderInstance: ShaderInstance): boolean {\r\n            context.Stage.gl.useProgram(this.program);\r\n            return true;\r\n        }\r\n\r\n        protected SIZE_OF_FLOAT = 4;\r\n\r\n        protected internalRender(context: RenderContextWebGL, shaderInstance: ShaderInstance) {\r\n        }\r\n\r\n        protected endRender(context: RenderContextWebGL, shaderInstance: ShaderInstance) {\r\n        }\r\n\r\n        public initialize(stage: StageWebGL) {\r\n            this.vertexShader = stage.Tools.createShader(stage.gl.VERTEX_SHADER, this.getVertexShaderSrc());\r\n            this.fragmentShader = stage.Tools.createShader(stage.gl.FRAGMENT_SHADER, this.getFragmentShaderSrc());\r\n\r\n            this.program = stage.gl.createProgram();\r\n\r\n            stage.gl.attachShader(this.program, this.vertexShader);\r\n            stage.gl.attachShader(this.program, this.fragmentShader);\r\n\r\n            stage.gl.linkProgram(this.program);\r\n\r\n            stage.gl.detachShader(this.program, this.vertexShader);\r\n            stage.gl.detachShader(this.program, this.fragmentShader);\r\n\r\n            console.log(stage.gl.getProgramInfoLog(this.program));\r\n\r\n            this.isInitialized = true;\r\n        }\r\n\r\n        public getVertexShaderSrc(): string {\r\n            return '';\r\n        }\r\n\r\n        public getFragmentShaderSrc(): string {\r\n            return '';\r\n        }\r\n\r\n    }\r\n\r\n    export class OpaqueMeshShaderProgramWebGL extends ShaderProgramWebGL {\r\n\r\n        protected getStride() {\r\n            return this.SIZE_OF_FLOAT * 9;\r\n        }\r\n\r\n        protected internalRender(context: RenderContextWebGL, shaderInstance: ShaderInstance) {\r\n            let stage = context.Stage;\r\n\r\n            let bufferKey = shaderInstance.getReference('IndexBuffer');\r\n            if (bufferKey) {\r\n                let bufferAsset = stage.AssetStore.getBufferAsset(bufferKey);\r\n                bufferAsset.bind(stage);\r\n\r\n                bufferKey = shaderInstance.getReference('VertexBuffer');\r\n                bufferAsset = stage.AssetStore.getBufferAsset(bufferKey);\r\n\r\n                bufferAsset.bindInterleaved(stage, this.getAttribLocation(stage, 'aPosition'), 3, this.getStride(), 0);\r\n                bufferAsset.bindInterleaved(stage, this.getAttribLocation(stage, 'aNormal'), 3, this.getStride(), 3 * this.SIZE_OF_FLOAT);\r\n                bufferAsset.bindInterleaved(stage, this.getAttribLocation(stage, 'aColor'), 3, this.getStride(), 6 * this.SIZE_OF_FLOAT);\r\n\r\n                // draw triangles\r\n                let triangleCount = bufferAsset.BufferSize / this.getStride();\r\n                stage.gl.drawElements(stage.gl.TRIANGLES, triangleCount, stage.gl.UNSIGNED_INT, 0);\r\n\r\n                // bind with 0, so, switch back to normal pointer operation\r\n                //stage.gl.bindBuffer(stage.gl.ELEMENT_ARRAY_BUFFER, 0);\r\n                //stage.gl.bindBuffer(stage.gl.ARRAY_BUFFER, 0);\r\n            }\r\n        }\r\n\r\n\r\n        public getVertexShaderSrc(): string {\r\n            return `uniform mat4 uMMatrix;\r\n                uniform mat4 uVMatrix;\r\n                uniform mat4 uPMatrix;\r\n\r\n                attribute vec3 aPosition;\r\n                attribute vec3 aNormal;\r\n                attribute vec3 aColor;\r\n\r\n                varying mediump vec4 vColor;\r\n\r\n                void main()\r\n                {\r\n                   gl_Position = uPMatrix * uVMatrix * uMMatrix * vec4(aPosition, 1.0);\r\n                   vec3 normal = aNormal;\r\n                   vec4 diffuseColor = vec4(aColor, 1.0);\r\n                   vec4 ambientColor = vec4(1.0, 1.0, 1.0, 1.0);\r\n\r\n                   vec3 lightDir = vec3(0.9, 0.7, 1.0);\r\n                   mediump float lightIntensity = clamp(dot(normalize(normal), normalize(lightDir)), 0.0, 1.0);\r\n\r\n                   vColor = vec4((aColor * 0.65 + ambientColor.rgb * 0.35)*(0.7 + lightIntensity * 0.3), 1.0);\r\n                }`;\r\n        }\r\n\r\n        public getFragmentShaderSrc(): string {\r\n            return `varying mediump vec4 vColor;\r\n\r\n                void main()\r\n                {\r\n                   gl_FragColor = vColor;\r\n                }`;\r\n        }\r\n\r\n    }\r\n\r\n    export class TransparentMeshShaderProgramWebGL extends ShaderProgramWebGL {\r\n\r\n        protected getStride() {\r\n            return this.SIZE_OF_FLOAT * 10;\r\n        }\r\n\r\n        protected internalRender(context: RenderContextWebGL, shaderInstance: ShaderInstance) {\r\n            let stage = context.Stage;\r\n\r\n            let bufferKey = shaderInstance.getReference('IndexBuffer');\r\n            if (bufferKey) {\r\n                let bufferAsset = stage.AssetStore.getBufferAsset(bufferKey);\r\n                bufferAsset.bind(stage);\r\n\r\n                bufferKey = shaderInstance.getReference('VertexBuffer');\r\n                bufferAsset = stage.AssetStore.getBufferAsset(bufferKey);\r\n\r\n                bufferAsset.bindInterleaved(stage, this.getAttribLocation(stage, 'aPosition'), 3, this.getStride(), 0);\r\n                bufferAsset.bindInterleaved(stage, this.getAttribLocation(stage, 'aNormal'), 3, this.getStride(), 3 * this.SIZE_OF_FLOAT);\r\n                bufferAsset.bindInterleaved(stage, this.getAttribLocation(stage, 'aColor'), 4, this.getStride(), 6 * this.SIZE_OF_FLOAT);\r\n\r\n                stage.gl.enable(stage.gl.BLEND);\r\n                stage.gl.blendFunc(stage.gl.SRC_ALPHA, stage.gl.ONE_MINUS_SRC_ALPHA);\r\n                stage.gl.depthMask(false);\r\n\r\n                // draw triangles\r\n                let triangleCount = bufferAsset.BufferSize / this.getStride();\r\n                stage.gl.drawElements(stage.gl.TRIANGLES, triangleCount, stage.gl.UNSIGNED_INT, 0);\r\n\r\n                stage.gl.depthMask(true);\r\n                stage.gl.disable(stage.gl.BLEND);\r\n\r\n                // bind with 0, so, switch back to normal pointer operation\r\n                //stage.gl.bindBuffer(stage.gl.ELEMENT_ARRAY_BUFFER, 0);\r\n                //stage.gl.bindBuffer(stage.gl.ARRAY_BUFFER, 0);\r\n            }\r\n        }\r\n\r\n\r\n        public getVertexShaderSrc(): string {\r\n            return `uniform mat4 uMMatrix;\r\n                uniform mat4 uVMatrix;\r\n                uniform mat4 uPMatrix;\r\n\r\n                attribute vec3 aPosition;\r\n                attribute vec3 aNormal;\r\n                attribute vec4 aColor;\r\n\r\n                varying mediump vec4 vColor;\r\n\r\n                void main()\r\n                {\r\n                   gl_Position = uPMatrix * uVMatrix * uMMatrix * vec4(aPosition, 1.0);\r\n                   vec3 normal = aNormal;\r\n                   vec4 diffuseColor = aColor;\r\n                   vec4 ambientColor = vec4(1.0, 1.0, 1.0, 1.0);\r\n\r\n                   vec3 lightDir = vec3(0.9, 0.7, 1.0);\r\n                   mediump float lightIntensity = clamp(dot(normalize(normal), normalize(lightDir)), 0.0, 1.0);\r\n\r\n                   vColor = vec4((aColor.rgb * 0.65 + ambientColor.rgb * 0.35)*(0.7 + lightIntensity * 0.3), aColor.a);\r\n                }`;\r\n        }\r\n\r\n        public getFragmentShaderSrc(): string {\r\n            return `varying mediump vec4 vColor;\r\n\r\n                void main()\r\n                {\r\n                   gl_FragColor = vColor;\r\n                }`;\r\n        }\r\n\r\n    }\r\n\r\n    export enum TexturedMeshShaderProgramVariants {\r\n        Diffuse,\r\n        Matcap\r\n    }\r\n\r\n    export class TexturedMeshShaderProgramWebGL extends ShaderProgramWebGL {\r\n\r\n        public constructor(private variant: TexturedMeshShaderProgramVariants = TexturedMeshShaderProgramVariants.Diffuse) {\r\n            super();\r\n        }\r\n\r\n        protected getStride() {\r\n            return this.SIZE_OF_FLOAT * 11;\r\n        }\r\n\r\n        protected internalRender(context: RenderContextWebGL, shaderInstance: ShaderInstance) {\r\n            let stage = context.Stage;\r\n\r\n            let bufferKey = shaderInstance.getReference('IndexBuffer');\r\n            if (bufferKey) {\r\n                let bufferAsset = stage.AssetStore.getBufferAsset(bufferKey);\r\n                bufferAsset.bind(stage);\r\n\r\n                bufferKey = shaderInstance.getReference('VertexBuffer');\r\n                bufferAsset = stage.AssetStore.getBufferAsset(bufferKey);\r\n\r\n                bufferAsset.bindInterleaved(stage, this.getAttribLocation(stage, 'aPosition'), 3, this.getStride(), 0);\r\n                bufferAsset.bindInterleaved(stage, this.getAttribLocation(stage, 'aNormal'), 3, this.getStride(), 3 * this.SIZE_OF_FLOAT);\r\n                bufferAsset.bindInterleaved(stage, this.getAttribLocation(stage, 'aColor'), 3, this.getStride(), 6 * this.SIZE_OF_FLOAT);\r\n                bufferAsset.bindInterleaved(stage, this.getAttribLocation(stage, 'aTextureCoords'), 2, this.getStride(), 9 * this.SIZE_OF_FLOAT);\r\n\r\n                let textureKey = shaderInstance.getReference('TextureBuffer');\r\n                let textureAsset = stage.AssetStore.getTextureAsset(textureKey);\r\n                if (textureAsset) {\r\n                    textureAsset.bind(stage, this, 'uTexture0');\r\n\r\n                    // draw triangles\r\n                    let triangleCount = bufferAsset.BufferSize / this.getStride();\r\n                    stage.gl.drawElements(stage.gl.TRIANGLES, triangleCount, stage.gl.UNSIGNED_INT, 0);\r\n                }\r\n\r\n                // bind with 0, so, switch back to normal pointer operation\r\n                //stage.gl.bindBuffer(stage.gl.ELEMENT_ARRAY_BUFFER, 0);\r\n                //stage.gl.bindBuffer(stage.gl.ARRAY_BUFFER, 0);\r\n            }\r\n        }\r\n\r\n        public getVertexShaderSrc(): string {\r\n            let result = `uniform mat4 uMMatrix;\r\n                uniform mat4 uVMatrix;\r\n                uniform mat4 uPMatrix;\r\n\r\n                attribute vec3 aPosition;\r\n                attribute vec3 aNormal;\r\n                attribute vec3 aColor;\r\n                attribute vec2 aTextureCoords;\r\n\r\n                varying mediump vec4 vColor;\r\n                varying mediump vec2 vTextureCoords;\r\n                varying mediump float vLightIntensity;\r\n\r\n                void main()\r\n                {\r\n                   vec4 pos = uMMatrix * vec4(aPosition, 1.0);\r\n                   gl_Position = uPMatrix * uVMatrix * pos;\r\n                   vec3 normal = normalize(uMMatrix * vec4(aNormal, 0.0)).xyz;\r\n\r\n                   vec3 lightDir = vec3(0.9, 0.7, 1.0);\r\n                   vLightIntensity = clamp(dot(normalize(normal), normalize(lightDir)), 0.0, 1.0);\r\n\r\n                   vColor = vec4(aColor, 1.0);\r\n`;\r\n\r\n            switch (this.variant) {\r\n                case TexturedMeshShaderProgramVariants.Diffuse: result +=\r\n                    `vTextureCoords = aTextureCoords;\r\n`;\r\n                    break;\r\n                case TexturedMeshShaderProgramVariants.Matcap: result +=\r\n                    `vec3 e = normalize(pos.xyz);\r\n\t                 vec3 r = reflect(e, (uVMatrix * vec4(normal, 0.0)).xyz);\r\n\t                 mediump float m = 2. * length(vec3(r.x, r.y, r.z + 1.));\r\n\t                 vTextureCoords = r.xy / m + .5;\r\n`;\r\n                    break;\r\n            }\r\n            \r\n            result += `}`;\r\n\r\n            return result;\r\n        }\r\n\r\n        public getFragmentShaderSrc(): string {\r\n            let result = `uniform sampler2D uTexture0;\r\n\r\n                varying mediump vec4 vColor;\r\n                varying mediump vec2 vTextureCoords;\r\n                varying mediump float vLightIntensity;\r\n\r\n                void main()\r\n                {\r\n            \t    mediump vec4 texColor = texture2D(uTexture0, vec2(vTextureCoords.x, 1.0 - vTextureCoords.y));\r\n`;\r\n            switch (this.variant) {\r\n                case TexturedMeshShaderProgramVariants.Diffuse: result +=\r\n                    `gl_FragColor = vec4(clamp(texColor.xyz * (1.0 + .15 * vLightIntensity), 0.0, 1.0), texColor.a); \r\n            `;\r\n                    break;\r\n                case TexturedMeshShaderProgramVariants.Matcap: result += \r\n                    `gl_FragColor = texColor.a;   \r\n`;\r\n                    break;\r\n            }\r\n\r\n            result += `}`;\r\n\r\n            return result;\r\n        }\r\n        \r\n    }\r\n\r\n    export class ShadowTexturedMeshShaderProgramWebGL extends TexturedMeshShaderProgramWebGL {\r\n\r\n        public getVertexShaderSrc(): string {\r\n            return `uniform mat4 uMMatrix;\r\n                uniform mat4 uVMatrix;\r\n                uniform mat4 uPMatrix;\r\n\r\n                attribute vec3 aPosition;\r\n                attribute vec3 aNormal;\r\n                attribute vec3 aColor;\r\n                attribute vec2 aTextureCoords;\r\n\r\n                varying mediump float height;\r\n\r\n                void main()\r\n                {\r\n                   gl_Position = uPMatrix * uVMatrix * uMMatrix * vec4(aPosition, 1.0);\r\n                   height = (uMMatrix * vec4(aPosition, 1.0)).y;\r\n                }`;\r\n        }\r\n\r\n        public getFragmentShaderSrc(): string {\r\n            return `uniform sampler2D uTexture0;\r\n                varying mediump float height;\r\n\r\n\r\n                void main()\r\n                {\r\n                    gl_FragColor = vec4(.2, .2, .2, clamp(1.0 - (height / 3.0), 0.0, 1.0)); \r\n                }`;\r\n        }\r\n\r\n    }\r\n\r\n    export class MatCapShaderProgramWebGL extends ShaderProgramWebGL {\r\n\r\n        protected getStride() {\r\n            return this.SIZE_OF_FLOAT * 11;\r\n        }\r\n\r\n        protected internalRender(context: RenderContextWebGL, shaderInstance: ShaderInstance) {\r\n            let stage = context.Stage;\r\n\r\n            let bufferKey = shaderInstance.getReference('IndexBuffer');\r\n            if (bufferKey) {\r\n                let bufferAsset = stage.AssetStore.getBufferAsset(bufferKey);\r\n                bufferAsset.bind(stage);\r\n\r\n                bufferKey = shaderInstance.getReference('VertexBuffer');\r\n                bufferAsset = stage.AssetStore.getBufferAsset(bufferKey);\r\n\r\n                bufferAsset.bindInterleaved(stage, this.getAttribLocation(stage, 'aPosition'), 3, this.getStride(), 0);\r\n                bufferAsset.bindInterleaved(stage, this.getAttribLocation(stage, 'aNormal'), 3, this.getStride(), 3 * this.SIZE_OF_FLOAT);\r\n                bufferAsset.bindInterleaved(stage, this.getAttribLocation(stage, 'aColor'), 3, this.getStride(), 6 * this.SIZE_OF_FLOAT);\r\n                bufferAsset.bindInterleaved(stage, this.getAttribLocation(stage, 'aTextureCoords'), 2, this.getStride(), 9 * this.SIZE_OF_FLOAT);\r\n\r\n                let textureKey = shaderInstance.getReference('TextureBuffer');\r\n                let textureAsset = stage.AssetStore.getTextureAsset(textureKey);\r\n                if (textureAsset) {\r\n                    textureAsset.bind(stage, this, 'uTexture0');\r\n\r\n                    let color = context.State.get('Color', psgeometry.Vec4.One);\r\n                    let uColorLoc = stage.gl.getUniformLocation(this.program, 'uColor');\r\n                    stage.gl.uniform4fv(uColorLoc, color.elements()); \r\n\r\n                    // draw triangles\r\n                    let triangleCount = bufferAsset.BufferSize / this.getStride();\r\n                    stage.gl.drawElements(stage.gl.TRIANGLES, triangleCount, stage.gl.UNSIGNED_INT, 0);\r\n                }\r\n            }\r\n        }\r\n\r\n        public getVertexShaderSrc(): string {\r\n            let result = `uniform mat4 uMMatrix;\r\n                uniform mat4 uVMatrix;\r\n                uniform mat4 uPMatrix;\r\n\r\n                attribute vec3 aPosition;\r\n                attribute vec3 aNormal;\r\n                attribute vec3 aColor;\r\n                attribute vec2 aTextureCoords;\r\n\r\n                varying mediump vec4 vColor;\r\n                varying mediump vec2 vTextureCoords;\r\n\r\n                void main()\r\n                {\r\n                   vec4 pos = uMMatrix * vec4(aPosition, 1.0);\r\n                   gl_Position = uPMatrix * uVMatrix * pos;\r\n                   vec3 normal = normalize(uMMatrix * vec4(aNormal, 0.0)).xyz;\r\n\r\n                   vec3 e = normalize(pos.xyz);\r\n\t               vec3 r = reflect(e, (uVMatrix * vec4(normal, 0.0)).xyz);\r\n\t               mediump float m = 2. * length(vec3(r.x, r.y, r.z + 1.));\r\n\t               vTextureCoords = r.xy / m + .5;\r\n                }`;\r\n\r\n            return result;\r\n        }\r\n\r\n        public getFragmentShaderSrc(): string {\r\n            let result = `uniform sampler2D uTexture0;\r\n                uniform mediump vec4 uColor;\r\n\r\n                varying mediump vec4 vColor;\r\n                varying mediump vec2 vTextureCoords;\r\n\r\n                void main()\r\n                {\r\n            \t    mediump vec4 texColor = texture2D(uTexture0, vec2(vTextureCoords.x, 1.0 - vTextureCoords.y));\r\n                    //mediump vec3 green = vec3(0, 0.44, 0.09);\r\n                    //mediump vec3 green = vec3(0.69, 0.34, 0.00);  //or\r\n                    //mediump vec3 green = vec3(0.02, 0.31, 0.06);  // g\r\n                    //mediump vec3 green = vec3(0.31, 0.02, 0.06);  // r\r\n                    //mediump vec3 green = vec3(0.02, 0.17, 0.31);  // b\r\n                    mediump float colorFac = (texColor.x - texColor.y) / 0.65;\r\n                    mediump float whiteFac = (1.0 - colorFac) * 0.75;\r\n                    mediump vec3 color = vec3(whiteFac, whiteFac, whiteFac) + colorFac * uColor.rgb;\r\n\r\n                    gl_FragColor = vec4(color, texColor.a * uColor.a);   \r\n            }`;\r\n\r\n            return result;\r\n        }\r\n    }\r\n\r\n    class RenderStateStack {\r\n        private modelTransform: Array<psgeometry.Matrix4> = [psgeometry.Matrix4.Identity];\r\n\r\n        private stack: Array<RenderState> = [];\r\n\r\n        /** Top of the state stack.\r\n          */\r\n        public get Top() {\r\n            return this.stack[this.stack.length - 1];\r\n        }\r\n\r\n        /** Determines the current model transformation.\r\n          */\r\n        public get CurrentModelTransform() {\r\n            return this.modelTransform[this.modelTransform.length - 1];\r\n        }\r\n\r\n        /** Pushes the specified state on the state stack.\r\n          */\r\n        public pushState(state: RenderState) {\r\n            state.Parent = this.stack.length == 0 ? null : this.Top;\r\n            this.stack.push(state);\r\n            if (state.contains('ModelTransform')) {\r\n                let modelTransform = state.get('ModelTransform', psgeometry.Matrix4.Identity);\r\n                this.modelTransform.push(<psgeometry.Matrix4>this.CurrentModelTransform.multiply(modelTransform));\r\n            }\r\n            else {\r\n                this.modelTransform.push(this.CurrentModelTransform);\r\n            }\r\n        }\r\n\r\n        /** Removes the top element from the state stack.\r\n          */\r\n        public popState() {\r\n            this.Top.Parent = null;\r\n            this.stack.pop();\r\n            this.modelTransform.pop();\r\n        }\r\n    }\r\n\r\n    /** A RenderContext instance is used to pass environment data to SceneItems during the rendition process.\r\n\t  *\r\n\t  * Besides the Stage that the SceneItems are being rendered to, the render context is the owner of a state stack\r\n\t  * that may be updated by SceneItems and that is consequently used by ShaderPrograms to set shader data and resources (like model transformation\r\n\t  * and auxiliary data). As SceneItems are organized in a hierarchical way, the current state may be defined by the current SceneItem, but\r\n\t  * also by previously traversed SceneItems in the scene hierarchy.\r\n\t  */\r\n    export class RenderContextWebGL {\r\n        private stage: StageWebGL;\r\n\r\n        private camera: Camera;\r\n\r\n        private shaderProgram: ShaderProgramWebGL;\r\n\r\n        private sceneCategory: string = '';\r\n\r\n        private stateStack: RenderStateStack = new RenderStateStack();\r\n\r\n        private modelTransform: psgeometry.Matrix4 = null;\r\n\r\n        private nodeTransform: psgeometry.Matrix4 = null;\r\n\r\n        private phase: string = '';\r\n\r\n        public get Phase() { return this.phase; }\r\n\r\n        public set Phase(value: string) { this.phase = value; }\r\n\r\n        /** Returns the current state that is composed of previously set state values.\r\n          */\r\n        public get State() {\r\n            return this.stateStack.Top;\r\n        }\r\n\r\n        /** Pushes the specified state on the state stack.\r\n          */\r\n        public pushState(state: RenderState) {\r\n            this.stateStack.pushState(state);\r\n        }\r\n\r\n        /** Removes the top element from the state stack.\r\n          */\r\n        public popState() {\r\n            this.stateStack.popState();\r\n        }\r\n\r\n        public get ModelTransform() {\r\n            return this.stateStack.CurrentModelTransform;\r\n        }\r\n\r\n        /** The current scene's category.\r\n          */\r\n        public get SceneCategory() {\r\n            return this.sceneCategory;\r\n        }\r\n\r\n        /** The current scene's category.\r\n          */\r\n        public set SceneCategory(value: string) {\r\n            this.sceneCategory = value;\r\n        }\r\n\r\n        /** The stage the SceneItems are being rendered to.\r\n          */\r\n        public get Stage() {\r\n            return this.stage;\r\n        }\r\n\r\n        /** The stage the SceneItems are being rendered to.\r\n          */\r\n        public set Stage(value: StageWebGL) {\r\n            this.stage = value;\r\n        }\r\n\r\n        public get Camera() {\r\n            return this.camera;\r\n        }\r\n\r\n        public set Camera(value: Camera) {\r\n            this.camera = value;\r\n        }\r\n\r\n        /** The current shader program.\r\n          */\r\n        public get ShaderProgram() {\r\n            return this.shaderProgram;\r\n        }\r\n\r\n        /** The current shader program.\r\n          */\r\n        public set ShaderProgram(value: ShaderProgramWebGL) {\r\n            this.shaderProgram = value;\r\n        }\r\n\r\n        public get NodeTransform() {\r\n            return this.nodeTransform;\r\n        }\r\n\r\n        public set NodeTransform(value: psgeometry.Matrix4) {\r\n            this.nodeTransform = value;\r\n        }\r\n    }\r\n\r\n    export class StageWebGL {\r\n\r\n        public gl: WebGLRenderingContext;\r\n\r\n        private canvas: HTMLCanvasElement;\r\n\r\n        private camera: CameraWebGL;\r\n\r\n        private shadowCamera: ShadowCameraWebGL;\r\n\r\n        private context: RenderContextWebGL;\r\n\r\n        private assetFactory: AssetFactoryWebGL;\r\n\r\n        private assetStore: AssetStoreWebGL;\r\n\r\n        private phaseSpecificShaderPrograms: { [index: string]: { [index: string]: ShaderProgramWebGL } } = {};\r\n\r\n        private shaderPrograms: { [index: string]: ShaderProgramWebGL } = {};\r\n\r\n        private tools: ToolsWebGL = new ToolsWebGL(this);\r\n\r\n        public get Canvas() {\r\n            return this.canvas;\r\n        }\r\n\r\n        public get Camera() {\r\n            return this.camera;\r\n        }\r\n\r\n        public get Tools() {\r\n            return this.tools;\r\n        }\r\n\r\n        public get AssetFactory() {\r\n            return this.assetFactory;\r\n        }\r\n\r\n        public get AssetStore() {\r\n            return this.assetStore;\r\n        }\r\n\r\n        constructor(canvasElementId: string) {\r\n            try {\r\n                this.context = new RenderContextWebGL();\r\n                this.context.Stage = this;\r\n\r\n                this.assetStore = new AssetStoreWebGL();\r\n                this.assetFactory = new AssetFactoryWebGL(this);\r\n\r\n                this.canvas = <HTMLCanvasElement>document.getElementById(canvasElementId);\r\n\r\n                if (this.canvas) {\r\n                    this.gl = <WebGLRenderingContext>(this.canvas.getContext('webgl') || (this.canvas.getContext('experimental-webgl')));\r\n                    let ext = this.gl.getExtension('OES_element_index_uint');\r\n\r\n                    window.addEventListener('resize', () => {\r\n                        this.resize();\r\n                    });\r\n                }\r\n\r\n                if (!this.gl) {\r\n                    alert('Unable to initialize WebGL. Your browser may not support it.');\r\n                }\r\n            }\r\n            catch (e) {\r\n                alert('Unable to initialize WebGL. Your browser may not support it. Error: ' + e);\r\n            }\r\n        }\r\n\r\n        public initialize() {\r\n            this.shadowCamera = new ShadowCameraWebGL();\r\n            this.shadowCamera.resize(this);\r\n            this.camera = new CameraWebGL();\r\n            this.camera.resize(this);\r\n            this.resize();\r\n        }\r\n\r\n        public updateShadowArea(box: psgeometry.AABB2D) {\r\n            this.shadowCamera.updateShadowArea(box);\r\n        }\r\n\r\n        public applyState(context: RenderContextWebGL) {\r\n            let program = context.ShaderProgram.Program;\r\n\r\n            let resultingModelTransformation = psgeometry.Matrix4.Identity;\r\n            if (context.ModelTransform && context.NodeTransform) {\r\n                resultingModelTransformation = <psgeometry.Matrix4>context.NodeTransform.multiply(context.ModelTransform);\r\n            } else if (context.ModelTransform) {\r\n                resultingModelTransformation = context.ModelTransform;\r\n            } else if (context.NodeTransform) {\r\n                resultingModelTransformation = context.NodeTransform;\r\n            }\r\n\r\n            let mMatrixLoc = this.gl.getUniformLocation(program, 'uMMatrix');\r\n            this.gl.uniformMatrix4fv(mMatrixLoc, false, resultingModelTransformation.transpose().elements);\r\n            let vMatrixLoc = this.gl.getUniformLocation(program, 'uVMatrix');\r\n            this.gl.uniformMatrix4fv(vMatrixLoc, false, context.Camera.ViewMatrix.transpose().elements);\r\n            let pMatrixLoc = this.gl.getUniformLocation(program, 'uPMatrix');\r\n            this.gl.uniformMatrix4fv(pMatrixLoc, false, context.Camera.ProjectionMatrix.transpose().elements); \r\n        }\r\n\r\n        public render(scene: SceneWebGL) {\r\n            if (scene.isDirty() || this.camera.isDirty() || this.shadowCamera.isDirty()) {\r\n\r\n                this.context.Phase = 'Shadow';\r\n                this.context.Camera = this.shadowCamera;\r\n                this.shadowCamera.beginRender(this);\r\n                scene.render(this.context);\r\n                this.shadowCamera.endRender(this);\r\n\r\n                this.context.Phase = '';\r\n                this.context.Camera = this.camera;\r\n                this.camera.beginRender(this);\r\n                scene.render(this.context);\r\n                this.camera.endRender(this);\r\n            }\r\n        }\r\n\r\n        public registerShaderProgram(shaderProgramKey: string, shaderProgram: ShaderProgramWebGL) {\r\n            this.shaderPrograms[shaderProgramKey] = shaderProgram;\r\n        }\r\n\r\n        public registerPhaseSpecificShaderProgram(phaseKey: string, shaderProgramKey: string, shaderProgram: ShaderProgramWebGL) {\r\n            let phase = this.phaseSpecificShaderPrograms[phaseKey];\r\n            if (!phase) {\r\n                phase = {};\r\n                this.phaseSpecificShaderPrograms[phaseKey] = phase;\r\n            }\r\n\r\n            phase[shaderProgramKey] = shaderProgram;\r\n        }\r\n\r\n        public getShaderProgram(context, shaderProgramKey: string) {\r\n            let result;\r\n\r\n            if (context.phase) {\r\n                let phase = this.phaseSpecificShaderPrograms[context.phase];\r\n                if (phase) {\r\n                    result = phase[shaderProgramKey];\r\n                }\r\n            } \r\n\r\n            return result || this.shaderPrograms[shaderProgramKey];\r\n        }\r\n\r\n        private resize() {\r\n            this.canvas.width = this.canvas.parentElement.offsetWidth;\r\n            this.canvas.height = this.canvas.parentElement.offsetHeight;\r\n            this.camera.resize(this);\r\n        }\r\n\r\n    }\r\n\r\n    export enum ConnectionState {\r\n        Ready,\r\n        Connecting,\r\n        Connected,\r\n        Error\r\n    };\r\n\r\n    export abstract class ServerConnection {\r\n\r\n        protected state: ConnectionState;\r\n\r\n        protected handleConnected: (event: Event) => void;\r\n\r\n        protected handleMessage: (Event: MessageEvent) => void;\r\n\r\n        public get IsConnected() {\r\n            return this.state == ConnectionState.Connected;\r\n        }\r\n\r\n        public constructor() {\r\n            this.state = ConnectionState.Ready;\r\n        }\r\n\r\n        public abstract connect();\r\n\r\n        public abstract disconnect();\r\n\r\n        public abstract send(data: any);\r\n\r\n        public onMessage(callback: (event: MessageEvent) => void) {\r\n            this.handleMessage = callback;\r\n        }\r\n\r\n        public onConnected(callback: (event: Event) => void) {\r\n            this.handleConnected = callback;\r\n        }\r\n\r\n    }\r\n\r\n    export class SignalRServerConnection extends ServerConnection {\r\n\r\n        private connection: HubConnection;\r\n\r\n        public constructor() {\r\n            super();\r\n\r\n            this.connection = new HubConnectionBuilder()\r\n                .withUrl('/api/state')\r\n                .configureLogging(LogLevel.Trace)\r\n                //.withHubProtocol(<any>(new MessagePackHubProtocol()))\r\n                .build();\r\n\r\n            this.connection.on('msg', (data) => {\r\n                if (this.handleMessage) {\r\n                    let msg = new MessageEvent('binary', { data: data });\r\n                    this.handleMessage(msg);\r\n                }\r\n            });\r\n        }\r\n\r\n        public connect() {\r\n            this.state = ConnectionState.Connecting;\r\n            this.connection.start()\r\n                .then(() => {\r\n                    if (this.handleConnected) {\r\n                        this.state = ConnectionState.Connected;\r\n                        this.handleConnected(new Event('connected'));\r\n                    }\r\n                })\r\n                .catch((e) => {\r\n                    this.state = ConnectionState.Error;\r\n                });\r\n        }\r\n\r\n        public disconnect() {\r\n            this.connection.stop()\r\n                .then(() => {\r\n                    this.state = ConnectionState.Ready;\r\n                })\r\n                .catch(() => {\r\n                    this.state = ConnectionState.Error;\r\n                });\r\n        }\r\n\r\n        public send(data: any) {\r\n            this.connection.invoke('Msg', data);\r\n        }\r\n\r\n    }\r\n\r\n    export class WebSocketServerConnection extends ServerConnection {\r\n        \r\n        private websocket: WebSocket;\r\n\r\n        public connect(url?: string) {\r\n            if (this.state == ConnectionState.Ready || this.state == ConnectionState.Error) {\r\n                let uri = url ? url : 'ws://' + window.location.host + '/api/scene';\r\n                this.state = ConnectionState.Connecting;\r\n                this.websocket = new WebSocket(uri);\r\n                this.websocket.binaryType = 'arraybuffer';\r\n                this.websocket.onopen = (event: Event) => {\r\n                    this.state = ConnectionState.Connected;\r\n                    console.log('websocket connected.')\r\n                    if (this.handleConnected) {\r\n                        this.handleConnected(event);\r\n                    }\r\n                };\r\n                this.websocket.onclose = (event) => {\r\n                    console.log('websocket closed.');\r\n                    this.state = ConnectionState.Ready;\r\n                };\r\n                this.websocket.onerror = (event) => {\r\n                    this.state = ConnectionState.Error;\r\n                    console.log('websocket error.')\r\n                };\r\n                this.websocket.onmessage = (event) => {\r\n                    if (this.handleMessage) {\r\n                        this.handleMessage(event);\r\n                    }\r\n                };\r\n            } else {\r\n            }\r\n        }\r\n\r\n        public disconnect() {\r\n            this.websocket.close();\r\n        }\r\n\r\n        public send(data: any) {\r\n            this.websocket.send(data);\r\n        }\r\n    }\r\n\r\n    export class Tool {\r\n\r\n        protected interfaceController: InterfaceController;\r\n\r\n        public enter(interfaceController: InterfaceController) {\r\n            this.interfaceController = interfaceController;\r\n        }\r\n\r\n        public leave() { }\r\n\r\n        public handleKeyUp(e: JQuery.Event): boolean { return false; }\r\n\r\n        public handleMouseMove(e: JQuery.Event, x: number, y: number) { }\r\n\r\n        public handleMouseDown(e: JQuery.Event) { }\r\n\r\n        public handleMouseUp(e: JQuery.Event) { }\r\n\r\n        public handleDrag(e: JQuery.Event, startX: number, startY: number, dX: number, dY: number) { }\r\n\r\n        public handleMouseWheel(e: JQuery.Event) { }\r\n\r\n        public handleClick(e: JQuery.Event, x: number, y: number) { }\r\n\r\n    }\r\n\r\n    export class InterfaceController {\r\n\r\n        private tools: Array<Tool> = [];\r\n\r\n        private hasTool() {\r\n            return this.tools.length > 0;\r\n        }\r\n\r\n        public get CurrentTool(): Tool {\r\n            return this.hasTool() ? this.tools[this.tools.length - 1] : null;\r\n        }\r\n\r\n        private leftButton = 0;\r\n\r\n        private leftButtonDown: boolean = false;\r\n\r\n        private startX: number = NaN;\r\n\r\n        private startY: number = NaN;\r\n\r\n        private lastX: number = NaN;\r\n\r\n        private lastY: number = NaN;\r\n\r\n        private target: JQuery;\r\n\r\n        public onMove: (e: JQuery.Event, x: number, y: number) => void = null;\r\n\r\n        public onDrag: (e: JQuery.Event, dX: number, dY: number) => void = null;\r\n\r\n        public onMouseWheel: (e: JQuery.Event) => void = null;\r\n\r\n        constructor() {\r\n        }\r\n\r\n        public bindEvents(target: JQuery) {\r\n            this.target = target;\r\n\r\n            $(target).on('mousewheel', (e) => {\r\n                this.mouseWheel(e);\r\n            });\r\n\r\n            $(target).on('mousedown touchstart', (e) => {\r\n                this.mouseDown(e);\r\n                e.preventDefault();\r\n            });\r\n\r\n            if (!(<any>target).setCapture) {\r\n                $(document).on('mousemove touchmove', (e) => {\r\n                    this.mouseMove(e);\r\n                });\r\n            } else {\r\n                $(target).on('mousemove touchmove', (e) => {\r\n                    this.mouseMove(e);\r\n                });\r\n            }\r\n\r\n            $(document).on('mouseup touchend touchcancel', (e) => {\r\n                this.mouseUp(e);\r\n                e.preventDefault();\r\n            });\r\n\r\n            $(target).on('losecapture', (e) => {\r\n                this.mouseUp(e);\r\n                e.preventDefault();\r\n            });\r\n\r\n            $(document).on('keyup', (e) => {\r\n                if (this.keyUp(e)) {\r\n                    e.preventDefault();\r\n                }\r\n            });\r\n        }\r\n\r\n        private updateLastPosition(e: JQuery.Event) {\r\n            this.lastX = e.clientX;\r\n            this.lastY = e.clientY;\r\n        }\r\n\r\n        public pushTool(tool: Tool) {\r\n            if (this.CurrentTool) {\r\n                this.CurrentTool.leave();\r\n            }\r\n\r\n            this.tools.push(tool);\r\n\r\n            tool.enter(this);\r\n        }\r\n\r\n        public popTool() {\r\n            if (this.tools.length > 0) {\r\n                this.tools[this.tools.length - 1].leave();\r\n                this.tools.pop();\r\n            }\r\n            if (this.tools.length > 0) {\r\n                this.tools[this.tools.length - 1].enter(this);\r\n            }\r\n        }\r\n\r\n        private keyUp(e: JQuery.Event): boolean {\r\n            if (this.hasTool()) {\r\n                return this.CurrentTool.handleKeyUp(e);\r\n            } else {\r\n                return false;\r\n            }\r\n\r\n        }\r\n\r\n        private mouseDown(e: JQuery.TriggeredEvent) {\r\n            if (e.button == this.leftButton) {\r\n                this.leftButtonDown = true;\r\n                this.startX = e.clientX;\r\n                this.startY = e.clientY;\r\n                this.updateLastPosition(e);\r\n                if (e.target.setCapture) e.target.setCapture();\r\n            }\r\n\r\n            if (this.hasTool() && !e.ctrlKey) {\r\n                this.CurrentTool.handleMouseDown(e);\r\n            } \r\n        }\r\n\r\n        private mouseMove(e: JQuery.Event) {\r\n            if (this.hasTool() && !e.ctrlKey) {\r\n                if (this.leftButtonDown) {\r\n                    this.CurrentTool.handleDrag(e, this.startX, this.startY, e.clientX - this.lastX, e.clientY - this.lastY);\r\n                } \r\n                this.CurrentTool.handleMouseMove(e, e.clientX, e.clientY);\r\n                \r\n            } else {\r\n                if (this.leftButtonDown) {\r\n                    this.drag(e, e.clientX - this.lastX, e.clientY - this.lastY);\r\n                } else {\r\n                    this.onMove(e, e.clientX, e.clientY);\r\n                }\r\n            }\r\n\r\n            if (this.leftButtonDown) {\r\n                this.updateLastPosition(e);\r\n            }\r\n        }\r\n\r\n        private mouseUp(e: JQuery.TriggeredEvent) {\r\n            let updatePosition = false;\r\n            if (e.button == this.leftButton) {\r\n                this.leftButtonDown = false;\r\n                updatePosition = true;\r\n\r\n                if (e.target.releaseCapture) e.target.releaseCapture();\r\n            }\r\n\r\n            if (this.hasTool() && !e.ctrlKey) {\r\n                this.CurrentTool.handleMouseUp(e);\r\n            } else {\r\n                if (updatePosition) {\r\n                    this.updateLastPosition(e);\r\n                }\r\n            }\r\n        }\r\n\r\n        private drag(e: JQuery.Event, dX: number, dY: number) {\r\n            if (this.onDrag) {\r\n                this.onDrag(e, dX, dY);\r\n            }\r\n        }\r\n\r\n        private mouseWheel(e: JQuery.Event) {\r\n            if (this.hasTool() && !e.ctrlKey) {\r\n                this.CurrentTool.handleMouseWheel(e);\r\n            } else {\r\n                if (this.onMouseWheel) {\r\n                    this.onMouseWheel(e);\r\n                }\r\n                e.preventDefault();\r\n            }\r\n        }\r\n    }\r\n\r\n    export class CameraController {\r\n        private stage: StageWebGL;\r\n        private camera: CameraWebGL;\r\n        private connection: ServerConnection;\r\n        private radius: number = 20.0;\r\n        private yaw: number = 0.0;\r\n        private pitch: number = 0.0;\r\n        private center: psgeometry.Vec3;\r\n\r\n        private dragDivisor = 100.0;\r\n        private rotateDivisor = 200.0;\r\n\r\n        public get Yaw() {\r\n            return this.yaw;\r\n        }\r\n\r\n        public set Yaw(value: number) {\r\n            this.yaw = value;\r\n            this.updateCamera();\r\n        }\r\n\r\n        constructor(stage: StageWebGL, camera: CameraWebGL, interfaceController: InterfaceController, connection: ServerConnection) {\r\n            this.stage = stage;\r\n            this.camera = camera;\r\n            this.connection = connection;\r\n\r\n            interfaceController.bindEvents($(stage.Canvas));\r\n            interfaceController.onDrag = (e, dX, dY) => {\r\n                this.drag(e, dX, dY);\r\n            };\r\n\r\n            interfaceController.onMouseWheel = (e) => {\r\n                this.mouseWheel(e);\r\n            };\r\n\r\n            interfaceController.onMove = (e, x, y) => {\r\n                this.move(e, x, y);\r\n            };\r\n\r\n            this.center = new psgeometry.Vec3(0.0, 0.0, 0.0);\r\n\r\n            this.updateCamera();\r\n        }\r\n\r\n        public construct(radius: number, pitch: number, yaw: number) {\r\n            this.radius = radius;\r\n            this.pitch = pitch;\r\n            this.yaw = yaw;\r\n\r\n            this.updateCamera();\r\n        }\r\n\r\n        private mouseWheel(e: JQuery.Event) {\r\n            if (e.shiftKey) {\r\n                let d = this.getViewDir().multiply((<any>e).deltaY || (<any>e).deltaX);\r\n                this.center = this.center.sub(d);\r\n            } else {\r\n                this.radius += (<any>e).deltaY * Math.log(this.radius + 1) / 2;\r\n                this.radius = Math.max(0.01, this.radius);\r\n            }\r\n            this.updateCamera();\r\n        }\r\n\r\n        private move(e: JQuery.Event, x: number, y: number) {\r\n        }\r\n\r\n        private drag(e: JQuery.Event, dX: number, dY: number) {\r\n\r\n            if (e.shiftKey) {\r\n                let x = this.getViewPlaneX();\r\n                let y = this.getViewPlaneY();\r\n                this.center = this.center\r\n                    .add(x.multiply(dX / this.dragDivisor))\r\n                    .add(y.multiply(dY / this.dragDivisor));\r\n            } else {\r\n                this.yaw -= dX / this.rotateDivisor;\r\n                this.pitch = Math.max(-Math.PI / 2, Math.min(Math.PI / 2, this.pitch - dY / this.rotateDivisor));\r\n            }\r\n\r\n            this.updateCamera();\r\n        }\r\n\r\n        private getViewPlaneX() {\r\n            let q, r, v;\r\n\r\n            v = new psgeometry.Vec3(-1.0, 0.0, 0.0);\r\n            q = new psgeometry.Quaternion();\r\n            r = new psgeometry.Quaternion();\r\n            q.setFromAxisAngle(new psgeometry.Vec3(0.0, 1.0, 0.0), this.yaw);\r\n            r.setFromAxisAngle(new psgeometry.Vec3(1.0, 0.0, 0.0), this.pitch);\r\n            v = v.applyQuaternion(r);\r\n            v = v.applyQuaternion(q);\r\n\r\n            return v; //.add(this.center);\r\n        }\r\n\r\n        private getViewPlaneY() {\r\n            let q, r, v;\r\n\r\n            v = new psgeometry.Vec3(0.0, 1.0, 0.0);\r\n            q = new psgeometry.Quaternion();\r\n            r = new psgeometry.Quaternion();\r\n            q.setFromAxisAngle(new psgeometry.Vec3(0.0, 1.0, 0.0), this.yaw);\r\n            r.setFromAxisAngle(new psgeometry.Vec3(1.0, 0.0, 0.0), this.pitch);\r\n            v = v.applyQuaternion(r);\r\n            v = v.applyQuaternion(q);\r\n\r\n            return v; //.add(this.center);\r\n        }\r\n\r\n        private getViewDir(): psgeometry.Vec3 {\r\n            let q, r, v;\r\n\r\n            v = new psgeometry.Vec3(0.0, 0.0, -1.0);\r\n            q = new psgeometry.Quaternion();\r\n            r = new psgeometry.Quaternion();\r\n            q.setFromAxisAngle(new psgeometry.Vec3(0.0, 1.0, 0.0), this.yaw);\r\n            r.setFromAxisAngle(new psgeometry.Vec3(1.0, 0.0, 0.0), this.pitch);\r\n            v = v.applyQuaternion(r);\r\n            v = v.applyQuaternion(q);\r\n\r\n            return v; //.add(this.center);\r\n        }\r\n\r\n        private getCameraPos() {\r\n            let q, r, v;\r\n\r\n            v = new psgeometry.Vec3(0.0, 0.0, this.radius);\r\n            q = new psgeometry.Quaternion();\r\n            r = new psgeometry.Quaternion();\r\n            q.setFromAxisAngle(new psgeometry.Vec3(0.0, 1.0, 0.0), this.yaw);\r\n            r.setFromAxisAngle(new psgeometry.Vec3(1.0, 0.0, 0.0), this.pitch);\r\n            v = v.applyQuaternion(r);\r\n            v = v.applyQuaternion(q);\r\n\r\n            return v.add(this.center);\r\n        }\r\n\r\n        private updateCamera() {\r\n            this.camera.update(this.getCameraPos(), this.center, new psgeometry.Vec3(0.0, 1.0, 0.0));\r\n        }\r\n    }\r\n\r\n    export class CommonMessageTypes {\r\n        public static AppStateDelta = 0x0100;\r\n        public static ServerHandshake = 0x0101;\r\n        public static ClientHandshake = 0x0102;\r\n        public static ClientConfirmation = 0x0103;\r\n        public static AppStateInitialization = 0x104;\r\n        public static AnchorRequest = 0x01fe;\r\n        public static SharedAnchor = 0x01ff;\r\n    }\r\n\r\n    export class NetworkChannelMessage {\r\n\r\n        public static HeaderSize = 8;\r\n\r\n        private messageType: number = CommonMessageTypes.AppStateDelta;\r\n\r\n        private content: Uint8Array;\r\n\r\n        public get Content() {\r\n            return this.content;\r\n        }\r\n\r\n        public get MessageType() {\r\n            return this.messageType;\r\n        }\r\n\r\n        public static FromBuffer(buffer: Uint8Array) {\r\n            let result = new NetworkChannelMessage();\r\n            result.content = buffer;\r\n            return result;\r\n        }\r\n\r\n        public get HasPayload() {\r\n            return this.content.byteLength > NetworkChannelMessage.HeaderSize;\r\n        }\r\n\r\n        public get PayloadSize() {\r\n            return this.content.byteLength - NetworkChannelMessage.HeaderSize;\r\n        }\r\n    \r\n    }\r\n\r\n}\r\n","/// ModelStage Â© 2018 Plansysteme GmbH, Hamburg, Germany. All rights reserved.\r\n\r\nimport { psgeometry } from './ps-geometry';\r\nimport { modelstageweb } from './mx-common';\r\n\r\nexport module modelstageappstate {\r\n\r\n    /** The base class for local app state storage.\r\n      *\r\n      * App state data is organized in clusters. Each cluster has a distinct data layout comparable to a struct data type.\r\n      * A cluster can store and manage multiple values (AppStateEntry). Depending on the nature of the data, it can be global\r\n      * (shared among all peers) or local (each peer has its own copy of the cluster and is aware of the remote peer's instances).\r\n      * Besides that, global as well as local clusters can be single-instance or multi-instance. Global, single-instance data exists\r\n      * only once. Global, multi-instance data is shared among all peers, but can consist of multiple instances of the same \r\n      * \"record\". Each instance has a peer ID and an instance ID both ID fields together build a \"globally\" unique ID. For\r\n      * local, single-instance clusters, each peer may or may not have a single instance of the cluster, for local, multi-instance\r\n      * clusters, each peer may have zero or more instances of the cluster, again identified by a combination of a peer ID and an\r\n      * instance ID.\r\n      */\r\n    export class AppStateBase {\r\n        private clusterManagers: { [key: string]: AppStateClusterManagerBase } = {};\r\n\r\n        private localPeerID: string;\r\n\r\n        public get LocalPeerID(): string {\r\n            return this.localPeerID;\r\n        }\r\n\r\n        public set LocalPeerID(value: string) {\r\n            this.localPeerID = value;\r\n        }\r\n\r\n        public getClusterManager(key: string) {\r\n            return this.clusterManagers[key];\r\n        }\r\n\r\n        /** Adds a certain cluster type (global/local, single/multi) to the app state.\r\n          */\r\n        public addCluster(key: string, cluster: AppStateClusterManagerBase) {\r\n            this.clusterManagers[key] = cluster;\r\n\r\n        }\r\n\r\n        /** Starts the transactional phase of the app state. Changes to entries and their values may only be carried out\r\n          * during the transactional phase of the app state.\r\n          */\r\n        public beginTransaction() {\r\n            for (let clusterManagerKey in this.clusterManagers) {\r\n                this.clusterManagers[clusterManagerKey].beginTransaction();\r\n            }\r\n        }\r\n\r\n        /** Ends the transactional phase of the app state. Afterwards, the synchronisation takes place. To ensure that local state\r\n          * changes aren't missed, an exception is thrown if the state is not transactional when entries or their values are being changed.\r\n          */\r\n        public endTransaction() {\r\n            for (let clusterManagerKey in this.clusterManagers) {\r\n                this.clusterManagers[clusterManagerKey].endTransaction();\r\n            }\r\n        }\r\n\r\n        /** Applies app state changes to the view state of the application. This method is being called after all local changes have\r\n          * been carried out (the \"transactional phase\") and after the synchronisation took place. Therefore, all changes for the current\r\n          * update cycle have been carried out and will be reflected in the view state. This method will be used in client-type applications that\r\n          * need to maintain a view state. For server-type applications, where this is not the case, use \\ref ProcessChanges() instead.\r\n          */\r\n        public applyChanges(scene: modelstageweb.SceneWebGL) {\r\n            for (let clusterManagerKey in this.clusterManagers) {\r\n                this.clusterManagers[clusterManagerKey].applyChanges(scene);\r\n            }\r\n        }\r\n\r\n        /** Writes all local operations that have been carried out during the transactional phase of this update cycle (\"Delta\"). \r\n          */\r\n        public serializeTransaction(deltaWriter: AppStateDeltaWriter) {\r\n            for (let clusterManagerKey in this.clusterManagers) {\r\n                this.clusterManagers[clusterManagerKey].serializeTransaction(deltaWriter, clusterManagerKey, this);\r\n            }\r\n        }\r\n\r\n        /** Retrieves all remote operations that have been received from remote peers.\r\n          */\r\n        public deserializeTransaction(deltaReader: AppStateDeltaReader, scene: modelstageweb.SceneWebGL) {\r\n            let success = true;\r\n\r\n            while (!deltaReader.isAtEnd() && success) {\r\n                let clusterID = deltaReader.readClusterID();\r\n\r\n                if (clusterID) {\r\n                    let clusterManager = this.clusterManagers[clusterID];\r\n                    if (clusterManager) {\r\n                        success = clusterManager.deserializeTransaction(deltaReader, this, scene);\r\n                    }\r\n                    else {\r\n                        success = false;\r\n                    }\r\n                }\r\n                else {\r\n                    success = false;\r\n                }\r\n            }\r\n\r\n            return success;\r\n        }\r\n    }\r\n\r\n    export class AppState extends AppStateBase {\r\n        private static Instance = null;\r\n        public static GetInstance(): AppState {\r\n            if (!AppState.Instance) {\r\n                AppState.Instance = new AppState();\r\n            }\r\n            return AppState.Instance;\r\n        }\r\n    }\r\n\r\n    export class BinaryWriter {\r\n        private buf: Array<number> = [];\r\n\r\n        public flush(): Uint8Array {\r\n            let result = new Uint8Array(this.buf.length);\r\n            result.set(this.buf);\r\n            return result;\r\n        }\r\n\r\n        public writeByte(val: number) {\r\n            this.buf.push(val);\r\n        }\r\n\r\n        public writeInt16(val: number) {\r\n            this.buf.push(val & 0xff,\r\n                (val >> 8) & 0xff);\r\n        }\r\n\r\n        public writeUInt16(val: number) {\r\n            this.buf.push(val & 0xff,\r\n                (val >> 8) & 0xff);\r\n        }\r\n\r\n        public writeInt32(val: number) {\r\n            this.buf.push(val & 0xff,\r\n                (val >> 8) & 0xff,\r\n                (val >> 16) & 0xff,\r\n                (val >> 24) & 0xff);\r\n        }\r\n\r\n        public writeInt64(val: number) {\r\n            this.buf.push(val & 0xff,\r\n                (val >> 8) & 0xff,\r\n                (val >> 16) & 0xff,\r\n                (val >> 24) & 0xff,\r\n                (val >> 32) & 0xff,\r\n                (val >> 40) & 0xff,\r\n                (val >> 48) & 0xff,\r\n                (val >> 56) & 0xff);\r\n        }\r\n\r\n        public writeTimestamp(val: number) {\r\n            this.writeInt64(val);\r\n        }\r\n\r\n        public writeFloat32(val: number) {\r\n            let buf = new ArrayBuffer(4);\r\n            let view = new DataView(buf);\r\n            view.setFloat32(0, val, true);\r\n            let byteBuf = new Int8Array(buf);\r\n            this.buf.push.apply(byteBuf);\r\n        }\r\n\r\n        public writeString(val: string) {\r\n            this.writeInt32(val.length);\r\n            this.writeCharArray(val, val.length);\r\n        }\r\n\r\n        public writeCharArray(val: string, arrayLength: number) {\r\n            for (let idx = 0; idx < arrayLength; ++idx) {\r\n                this.buf.push(idx < val.length ? val.charCodeAt(idx) : 0x00);\r\n            }\r\n        }\r\n\r\n        public writeWideCharArray(val: string, arrayLength: number) {\r\n            for (let idx = 0; idx < arrayLength; ++idx) {\r\n                this.buf.push(idx < val.length ? val.charCodeAt(idx) & 0xff : 0x00,\r\n                    idx < val.length ? (val.charCodeAt(idx) >> 8) & 0xff : 0x00);\r\n            }\r\n        }\r\n\r\n        public writeVec3(val: psgeometry.Vec4) {\r\n            let buf = new ArrayBuffer(12);\r\n            let view = new DataView(buf);\r\n            view.setFloat32(0, val.x, true);\r\n            view.setFloat32(4, val.y, true);\r\n            view.setFloat32(8, val.z, true);\r\n            let byteBuf = new Uint8Array(buf);\r\n            this.buf.push.apply(byteBuf);\r\n        }\r\n\r\n        public writeVec4(val: psgeometry.Vec4) {\r\n            let buf = new ArrayBuffer(16);\r\n            let view = new DataView(buf);\r\n            view.setFloat32(0, val.x, true);\r\n            view.setFloat32(4, val.y, true);\r\n            view.setFloat32(8, val.z, true);\r\n            view.setFloat32(12, val.w, true);\r\n            let byteBuf = new Uint8Array(buf);\r\n            this.buf.push(byteBuf[0], byteBuf[1], byteBuf[2], byteBuf[3],\r\n                byteBuf[4], byteBuf[5], byteBuf[6], byteBuf[7],\r\n                byteBuf[8], byteBuf[9], byteBuf[10], byteBuf[11],\r\n                byteBuf[12], byteBuf[13], byteBuf[14], byteBuf[15]\r\n            );\r\n        }\r\n    }\r\n\r\n    export class BinaryReader {\r\n        private buf: Uint8Array;\r\n\r\n        private currentPos: number = 8;\r\n\r\n        private error: boolean = false;\r\n\r\n        public get Error() {\r\n            return this.error;\r\n        }\r\n\r\n        public get AtEnd() {\r\n            return this.currentPos >= this.buf.byteLength;\r\n        }\r\n\r\n        constructor(buf: Uint8Array) {\r\n            this.buf = buf;\r\n        }\r\n\r\n        public assureRemainingBytes(count: number): boolean {\r\n            return this.currentPos + count <= this.buf.byteLength;\r\n        }\r\n\r\n        public readByte(): number {\r\n            if (this.assureRemainingBytes(1)) {\r\n                return this.buf[this.currentPos++];\r\n            } else {\r\n                this.error = true;\r\n                return NaN;\r\n            }\r\n        }\r\n\r\n        public readUInt16(): number {\r\n            if (this.assureRemainingBytes(2)) {\r\n                return this.buf[this.currentPos++] +\r\n                    this.buf[this.currentPos++] * 256;\r\n            } else {\r\n                this.error = true;\r\n                return NaN;\r\n            }\r\n        }\r\n\r\n        public readUInt64(): number {\r\n            if (this.assureRemainingBytes(8)) {\r\n                return this.buf[this.currentPos++] +\r\n                    this.buf[this.currentPos++] * 256 +\r\n                    this.buf[this.currentPos++] * 65536 +\r\n                    this.buf[this.currentPos++] * 16777216 +\r\n                    this.buf[this.currentPos++] * 4294967296 +\r\n                    this.buf[this.currentPos++] * 1099511627776 +\r\n                    this.buf[this.currentPos++] * 281474976710656 +\r\n                    this.buf[this.currentPos++] * 72057594037927936;\r\n            } else {\r\n                this.error = true;\r\n                return NaN;\r\n            }\r\n        }\r\n\r\n        public readUInt32(): number {\r\n            if (this.assureRemainingBytes(4)) {\r\n                return this.buf[this.currentPos++] +\r\n                    this.buf[this.currentPos++] * 256 +\r\n                    this.buf[this.currentPos++] * 65536 +\r\n                    this.buf[this.currentPos++] * 16777216;\r\n            } else {\r\n                this.error = true;\r\n                return NaN;\r\n            }\r\n        }\r\n\r\n        public readString(): string {\r\n            let result = null;\r\n            let length = this.readUInt32();\r\n            if (!this.error) {\r\n                if (this.assureRemainingBytes(length)) {\r\n                    result = this.readCharArray(length);\r\n                } else {\r\n                    this.error = true;\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n\r\n        public readTimestamp(): number {\r\n            return this.readUInt64();\r\n        }\r\n\r\n        public readCharArray(arrayLength: number): string {\r\n            let result = [];\r\n            let idx = 0;\r\n            while (idx < arrayLength && this.buf[this.currentPos + idx] != 0x00 && !this.error) {\r\n                if (this.currentPos < this.buf.byteLength) {\r\n                    result.push(this.buf[this.currentPos + idx++]);\r\n                } else {\r\n                    this.error = true;\r\n                }\r\n            }\r\n            this.currentPos += arrayLength;\r\n            return String.fromCharCode.apply(null, result);\r\n        }\r\n\r\n        public readFloat32(): number {\r\n            let result = NaN;\r\n\r\n            if (this.assureRemainingBytes(4)) {\r\n                let buf = new ArrayBuffer(4);\r\n                let view = new DataView(buf);\r\n                view.setUint8(0, this.buf[this.currentPos++]);\r\n                view.setUint8(1, this.buf[this.currentPos++]);\r\n                view.setUint8(2, this.buf[this.currentPos++]);\r\n                view.setUint8(3, this.buf[this.currentPos++]);\r\n\r\n                result = view.getFloat32(0, true);\r\n            } else {\r\n                this.error = true;\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n        public readVec3(): psgeometry.Vec3 {\r\n            let result = null;\r\n\r\n            if (this.assureRemainingBytes(12)) {\r\n                let buf = new ArrayBuffer(12);\r\n                let view = new DataView(buf);\r\n                for (let i = 0; i < 12; ++i) {\r\n                    view.setUint8(i, this.buf[this.currentPos++]);\r\n                }\r\n                result = new psgeometry.Vec3(view.getFloat32(0, true), view.getFloat32(4, true), view.getFloat32(8, true));\r\n            } else {\r\n                this.error = true;\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n        public readVec4(): psgeometry.Vec4 {\r\n            let result = null;\r\n\r\n            if (this.assureRemainingBytes(16)) {\r\n                let buf = new ArrayBuffer(16);\r\n                let view = new DataView(buf);\r\n                for (let i = 0; i < 16; ++i) {\r\n                    view.setUint8(i, this.buf[this.currentPos++]);\r\n                }\r\n                result = new psgeometry.Vec4(view.getFloat32(0, true), view.getFloat32(4, true), view.getFloat32(8, true), view.getFloat32(12, true));\r\n            } else {\r\n                this.error = true;\r\n            }\r\n\r\n            return result;\r\n        }\r\n    }\r\n\r\n    export class AppStateDeltaReader {\r\n        private reader: BinaryReader;\r\n\r\n        private isInitializing: boolean = false;\r\n\r\n        public get Reader() {\r\n            return this.reader;\r\n        }\r\n\r\n        constructor(reader: BinaryReader) {\r\n            this.reader = reader;\r\n        }\r\n\r\n        /** Indicates if there is data left to process.\r\n          */\r\n        public isAtEnd() { return this.reader.AtEnd; }\r\n\r\n        /** Reads the cluster ID from the data.\r\n          */\r\n        public readClusterID(): string {\r\n            return this.reader.readString();\r\n        }\r\n\r\n        /** Indicates if the message is an initialization message rather than a \"normal\" delta package. \r\n          * This can be evaluated by the cluster to handle initialization different from updating.\r\n          */\r\n        public get IsInitializing() {\r\n            return this.isInitializing;\r\n        }\r\n    }\r\n\r\n    export class AppStateDeltaWriter {\r\n        private writer: BinaryWriter;\r\n\r\n        public get Writer() {\r\n            return this.writer;\r\n        }\r\n\r\n        constructor(writer: BinaryWriter) {\r\n            this.writer = writer;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    export abstract class AppStateEntry {\r\n        private key: string;\r\n\r\n        private appState: AppState;\r\n\r\n        private transactional: boolean = false;\r\n\r\n        protected cluster: AppStateCluster;\r\n\r\n        public get AppState() {\r\n            return this.appState;\r\n        }\r\n\r\n        public set AppState(val: AppState) {\r\n            this.appState = val;\r\n        }\r\n\r\n        public register(key: string, cluster: AppStateCluster) {\r\n            this.key = key;\r\n            this.cluster = cluster;\r\n        }\r\n\r\n        public abstract deserializeDelta(reader: AppStateDeltaReader, key: string): boolean;\r\n\r\n        public abstract serializeDelta(writer: AppStateDeltaWriter, key: string);\r\n\r\n        public reconcile() {\r\n        }\r\n\r\n        public abstract isDirty();\r\n\r\n        public setDirty() {\r\n            this.cluster.setDirty();\r\n        }\r\n\r\n        public beginTransaction() {\r\n            //assert(!m_isTransactional);\r\n            this.transactional = true;\r\n        }\r\n\r\n        public endTransaction() {\r\n            //assert(m_isTransactional);\r\n            this.transactional = false;\r\n        }\r\n\r\n        public isTransactional(): boolean {\r\n            return this.transactional;\r\n        }\r\n\r\n        public isLocked(): boolean {\r\n            return this.cluster.IsLocked;\r\n        }\r\n\r\n    }\r\n\r\n    export abstract class CommonAppStateEntry extends AppStateEntry {\r\n        protected changedAt: number = 0;\r\n\r\n        public beginChanging() {\r\n            this.changedAt = Date.now();\r\n            this.setDirty();\r\n        }\r\n\r\n\r\n    }\r\n\r\n    export class AppStateStringValue extends CommonAppStateEntry {\r\n        private dirty: boolean = false;\r\n\r\n        private value: string;\r\n\r\n        private previousValue: string;\r\n\r\n        public set(value: string) {\r\n            if (value != this.value) {\r\n                this.changing();\r\n                this.value = value;\r\n            }\r\n        }\r\n\r\n        public get(): string {\r\n            return this.value;\r\n        }\r\n\r\n        public getPreviousValue(): string {\r\n            return this.previousValue;\r\n        }\r\n\r\n        public changing() {\r\n            //assert(IsTransactional());\r\n            if (!this.dirty && !this.isLocked()) {\r\n                this.beginChanging();\r\n                this.previousValue = this.value;\r\n                this.dirty = true;\r\n            }\r\n        }\r\n\r\n        public isDirty() {\r\n            return this.dirty;\r\n        }\r\n\r\n        public beginTransaction() {\r\n            super.beginTransaction();\r\n            this.dirty = false;\r\n        }\r\n\r\n        public deserializeDelta(reader: AppStateDeltaReader, key: string) {\r\n            let result = false;\r\n\r\n            // key was read by cluster\r\n            let changedAt = reader.Reader.readTimestamp();\r\n            if (changedAt != null) {\r\n                let prevValue = reader.Reader.readString();\r\n                if (prevValue != null) {\r\n                    this.value = reader.Reader.readString();\r\n                    this.dirty = true;\r\n                    this.setDirty();\r\n                    result = true;\r\n                }\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n        public serializeDelta(writer: AppStateDeltaWriter, key: string) {\r\n            writer.Writer.writeString(key);\r\n            writer.Writer.writeTimestamp(this.changedAt);\r\n            writer.Writer.writeString(this.previousValue);\r\n            writer.Writer.writeString(this.value);\r\n        }\r\n\r\n    }\r\n\r\n    export abstract class AppStateValue<T> extends CommonAppStateEntry {\r\n        private dirty: boolean = false;\r\n\r\n        private value: T;\r\n\r\n        private previousValue: T;\r\n\r\n        public set(value: T) {\r\n            this.value = value;\r\n        }\r\n\r\n        public get(): T {\r\n            return this.value;\r\n        }\r\n\r\n        public isDirty() {\r\n            return this.dirty;\r\n        }\r\n\r\n        public beginTransaction() {\r\n            super.beginTransaction();\r\n            this.dirty = false;\r\n        }\r\n\r\n        protected abstract readValue(reader: AppStateDeltaReader): T;\r\n\r\n        protected abstract writeValue(writer: AppStateDeltaWriter, value: T);\r\n\r\n        public deserializeDelta(reader: AppStateDeltaReader, key: string) {\r\n            let result = false;\r\n\r\n            // key was read by cluster\r\n            let changedAt = reader.Reader.readTimestamp();\r\n            if (changedAt != null) {\r\n                let prevValue = this.readValue(reader);\r\n                if (prevValue != null) {\r\n                    this.value = this.readValue(reader);\r\n                    this.dirty = true;\r\n                    this.setDirty();\r\n                    result = true;\r\n                }\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n        public serializeDelta(writer: AppStateDeltaWriter, key: string) {\r\n            writer.Writer.writeString(key);\r\n            writer.Writer.writeTimestamp(this.changedAt);\r\n            this.writeValue(writer, this.previousValue);\r\n            this.writeValue(writer, this.value);\r\n        }\r\n    }\r\n\r\n    export class AppStateBoolValue extends AppStateValue<boolean> {\r\n        protected readValue(reader: AppStateDeltaReader): boolean {\r\n            let result: boolean = false;\r\n\r\n            if (reader.Reader.assureRemainingBytes(1)) {\r\n                result = reader.Reader.readByte() != 0;\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n        protected writeValue(writer: AppStateDeltaWriter, value: boolean) {\r\n            writer.Writer.writeByte(value ? 0xff : 0);\r\n        }\r\n\r\n    }\r\n\r\n    export class AppStateVector4Value extends AppStateValue<psgeometry.Vec4> {\r\n        protected readValue(reader: AppStateDeltaReader): psgeometry.Vec4 {\r\n            let result: psgeometry.Vec4 = null;\r\n\r\n            // sizeof(float) * (x,y,z,w)\r\n            if (reader.Reader.assureRemainingBytes(4 * 4)) {\r\n                result = new psgeometry.Vec4();\r\n                result.x = reader.Reader.readFloat32();\r\n                result.y = reader.Reader.readFloat32();\r\n                result.z = reader.Reader.readFloat32();\r\n                result.w = reader.Reader.readFloat32();\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n        protected writeValue(writer: AppStateDeltaWriter, value: psgeometry.Vec4) {\r\n            writer.Writer.writeFloat32(value.x);\r\n            writer.Writer.writeFloat32(value.y);\r\n            writer.Writer.writeFloat32(value.z);\r\n            writer.Writer.writeFloat32(value.w);\r\n        }\r\n\r\n    }\r\n\r\n    export class AppStateFloatValue extends AppStateValue<number> {\r\n        protected readValue(reader: AppStateDeltaReader): number {\r\n            let result = NaN;\r\n\r\n            if (reader.Reader.assureRemainingBytes(4)) {\r\n                result = reader.Reader.readFloat32();\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n        protected writeValue(writer: AppStateDeltaWriter, value: number) {\r\n            writer.Writer.writeFloat32(value);\r\n        }\r\n\r\n    }\r\n\r\n    export class AppStateOperation {\r\n        protected changedAt: number;\r\n\r\n        protected isLocal: boolean;\r\n\r\n        public get ChangedAt() {\r\n            return this.changedAt;\r\n        }\r\n\r\n        public get IsLocal() {\r\n            return this.isLocal;\r\n        }\r\n\r\n        constructor(changedAt: number, isLocal: boolean = true) {\r\n            this.changedAt = changedAt;\r\n            this.isLocal = isLocal;\r\n        }\r\n    }\r\n\r\n    export class AppStateValueOperation<T> extends AppStateOperation {\r\n\r\n        protected isNewValueDefined = false;\r\n\r\n        protected isPreviousValueDefined = false;\r\n\r\n        protected newValue: T;\r\n\r\n        protected previousValue: T;\r\n\r\n        public get IsNewValueDefined() {\r\n            return this.isNewValueDefined;\r\n        }\r\n\r\n        public get IsPreviousValueDefined() {\r\n            return this.isPreviousValueDefined;\r\n        }\r\n\r\n        public get NewValue() {\r\n            return this.newValue;\r\n        }\r\n\r\n        public get PreviousValue() {\r\n            return this.previousValue;\r\n        }\r\n\r\n        constructor(changedAt: number, newValue: T = null, previousValue: T = null, isLocal: boolean = true) {\r\n            super(changedAt, isLocal);\r\n            if (newValue != null) {\r\n                this.isNewValueDefined = true;\r\n                this.newValue = newValue;\r\n            }\r\n            if (previousValue) {\r\n                this.isPreviousValueDefined = true;\r\n                this.previousValue = previousValue;\r\n            }\r\n        }\r\n    }\r\n\r\n    export enum OperationType {\r\n        Clear,\r\n        Append,\r\n        Insert,\r\n        Remove,\r\n        Replace\r\n    }\r\n\r\n    enum StorageFlags {\r\n        HasPreviousValue = 0x80,\r\n        HasNewValue = 0x40,\r\n        HasChangedDate = 0x20,\r\n        ItemIndex16Bit = 0x10,\r\n\r\n        None = 0x00,\r\n\r\n        Mask = 0xf0\r\n    };\r\n\r\n    export class AppStateCollectionOperation<T> extends AppStateValueOperation<T> {\r\n\r\n        protected operation: OperationType;\r\n\r\n        protected itemIndex: number;\r\n\r\n        protected reconciledItemIndex: number;\r\n\r\n        public get Operation() {\r\n            return this.operation;\r\n        }\r\n\r\n        public get ItemIndex() {\r\n            return this.itemIndex;\r\n        }\r\n\r\n        public get ReconciledItemIndex() {\r\n            return this.reconciledItemIndex;\r\n        }\r\n\r\n        public set ReconciledItemIndex(value: number) {\r\n            this.reconciledItemIndex = value;\r\n        }\r\n\r\n        constructor(changedAt: number, operation: OperationType, itemIndex: number = 0, newValue: T = null, previousValue: T = null, isLocal: boolean = true) {\r\n            super(changedAt, newValue, previousValue, isLocal);\r\n            this.operation = operation;\r\n            this.itemIndex = itemIndex;\r\n            this.reconciledItemIndex = itemIndex;\r\n        }\r\n\r\n    }\r\n\r\n    export class AppStateCollection<T> extends CommonAppStateEntry {\r\n        protected container: Array<T> = [];\r\n\r\n        protected serializeOperationChangedAt: boolean;\r\n\r\n        protected serializePreviousValues: boolean;\r\n\r\n        protected operations: Array<AppStateCollectionOperation<T>> = [];\r\n\r\n        public get Operations() {\r\n            return this.operations;\r\n        }\r\n\r\n        public constructor(private appStateCollectionOperationType: new (changedAt: number, operation: OperationType, itemIndex?: number, newValue?: T, previousValue?: T, isLocal?: boolean) => AppStateCollectionOperation<T>, serializeOperationChangedAt: boolean = true, serializePreviousValues: boolean = true) {\r\n            super();\r\n            this.serializeOperationChangedAt = serializeOperationChangedAt;\r\n            this.serializePreviousValues = serializePreviousValues;\r\n        }\r\n\r\n        protected addOperation(op: AppStateCollectionOperation<T>) {\r\n            if (this.isTransactional()) {\r\n                if (this.operations.length == 0) {\r\n                    this.beginChanging();\r\n                }\r\n                this.operations.push(op);\r\n            } else {\r\n                console.error('AppState not transactional while adding operation to AppStateCollection');\r\n            }\r\n        }\r\n\r\n        public clear() {\r\n            if (!this.isLocked()) {\r\n                this.addOperation(new this.appStateCollectionOperationType(this.changedAt, OperationType.Clear));\r\n            }\r\n            this.container.length = 0;\r\n        }\r\n\r\n        public append(item: T) {\r\n            if (!this.isLocked()) {\r\n                this.addOperation(new this.appStateCollectionOperationType(this.changedAt, OperationType.Append, this.container.length, item));\r\n            }\r\n            this.container.push(item);\r\n        }\r\n\r\n        public insert(item: T, beforeIndex: number) {\r\n            if (beforeIndex <= this.container.length) {\r\n                if (!this.isLocked()) {\r\n                    this.addOperation(new this.appStateCollectionOperationType(this.changedAt, OperationType.Insert, beforeIndex, item));\r\n                }\r\n                this.container.splice(beforeIndex, 0, item);\r\n            } else {\r\n                console.error('Index out of range while inserting into AppStateCollection');\r\n            }\r\n        }\r\n\r\n        public remove(index: number) {\r\n            if (index < this.container.length) {\r\n                if (!this.isLocked()) {\r\n                    this.addOperation(new this.appStateCollectionOperationType(this.changedAt, OperationType.Remove, index, null, this.container[index]));\r\n                }\r\n                this.container.splice(index, 1);\r\n            } else {\r\n                console.error('Index out of range while removing from AppStateCollection');\r\n            }\r\n        }\r\n\r\n        public replace(item: T, index: number) {\r\n            if (index < this.container.length) {\r\n                if (!this.isLocked()) {\r\n                    this.addOperation(new this.appStateCollectionOperationType(this.changedAt, OperationType.Replace, index, item, this.container[index]));\r\n                }\r\n                this.container[index] = item;\r\n            } else {\r\n                console.error('Index out of range while replacing item in AppStateCollection');\r\n            }\r\n        }\r\n\r\n        public GetItemAt(index: number) {\r\n            return this.container[index];\r\n        }\r\n\r\n        public get Count() {\r\n            return this.container.length;\r\n        }\r\n\r\n        public isDirty() {\r\n            return this.operations.length > 0;\r\n        }\r\n\r\n        public deserializeDelta(reader: AppStateDeltaReader, key: string) {\r\n            // key was read by cluster\r\n            let changedAt = reader.Reader.readTimestamp();\r\n            let operationCount = reader.Reader.readUInt32();\r\n            let success = !reader.Reader.Error;\r\n\r\n            if (success) {\r\n\r\n                if (operationCount > 0) {\r\n                    this.setDirty();\r\n                }\r\n\r\n                for (let i = 0; i < operationCount; ++i) {\r\n                    let flags = reader.Reader.readByte();\r\n                    if (!reader.Reader.Error) {\r\n                        let storageFlags: StorageFlags = flags & StorageFlags.Mask;\r\n                        let opType: OperationType = flags & ~StorageFlags.Mask;\r\n\r\n                        let opChangedAt = changedAt;\r\n                        let itemIndex = 0;\r\n                        let newValue: T;\r\n                        let prevValue: T;\r\n\r\n                        if (storageFlags & StorageFlags.HasChangedDate) {\r\n                            opChangedAt = reader.Reader.readTimestamp();\r\n                            success = success && !reader.Reader.Error;\r\n                        }\r\n                        if (storageFlags & StorageFlags.ItemIndex16Bit) {\r\n                            itemIndex = reader.Reader.readUInt16();\r\n                            success = success && !reader.Reader.Error;\r\n                        }\r\n                        else {\r\n                            itemIndex = reader.Reader.readUInt32();\r\n                            success = success && !reader.Reader.Error;\r\n                        }\r\n                        if (storageFlags & StorageFlags.HasNewValue) {\r\n                            newValue = <T>this.cluster.readValue(key, reader);\r\n                            success = success && !reader.Reader.Error;\r\n                        }\r\n                        if (storageFlags & StorageFlags.HasPreviousValue) {\r\n                            prevValue = <T>this.cluster.readValue(key, reader);\r\n                            success = success && !reader.Reader.Error;\r\n                        }\r\n\r\n                        this.operations.push(new this.appStateCollectionOperationType(opChangedAt, opType, itemIndex, newValue, prevValue, false /* IsLocal */));\r\n\r\n                    }\r\n                    else {\r\n                        success = false;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return success;\r\n\r\n        }\r\n\r\n        public serializeDelta(writer: AppStateDeltaWriter, key: string) {\r\n            writer.Writer.writeString(key);\r\n            writer.Writer.writeTimestamp(this.changedAt);\r\n\r\n            writer.Writer.writeInt32(this.operations.length);\r\n\r\n            this.operations.forEach((op) => {\r\n\r\n                let storageFlags: StorageFlags =\r\n                    (op.ItemIndex < 0x10000 ? StorageFlags.ItemIndex16Bit : StorageFlags.None) |\r\n                    (op.IsNewValueDefined ? StorageFlags.HasNewValue : StorageFlags.None) |\r\n                    (op.IsPreviousValueDefined && this.serializePreviousValues ? StorageFlags.HasPreviousValue : StorageFlags.None) |\r\n                    (this.serializeOperationChangedAt ? StorageFlags.HasChangedDate : StorageFlags.None);\r\n\r\n                writer.Writer.writeByte(op.Operation | storageFlags);\r\n\r\n                if (storageFlags & StorageFlags.HasChangedDate) {\r\n                    writer.Writer.writeTimestamp(op.ChangedAt);\r\n                }\r\n\r\n                if (storageFlags & StorageFlags.ItemIndex16Bit) {\r\n                    writer.Writer.writeUInt16(op.ItemIndex);\r\n                }\r\n                else {\r\n                    writer.Writer.writeInt32(op.ItemIndex);\r\n                }\r\n\r\n                if (storageFlags & StorageFlags.HasNewValue) {\r\n                    this.cluster.writeValue(key, writer, op.NewValue);\r\n                }\r\n\r\n                if (storageFlags & StorageFlags.HasPreviousValue) {\r\n                    this.cluster.writeValue(key, writer, op.PreviousValue);\r\n                }\r\n            });\r\n        }\r\n\r\n        public reconcile() {\r\n            this.operations.forEach((operation) => {\r\n                if (!operation.IsLocal) {\r\n                    switch (operation.Operation) {\r\n                        case OperationType.Clear:\r\n                            this.container.length = 0;\r\n                            operation.ReconciledItemIndex = -1;\r\n                            break;\r\n                        case OperationType.Append:\r\n                            if (operation.IsNewValueDefined) {\r\n                                this.container.push(operation.NewValue);\r\n                                operation.ReconciledItemIndex = this.container.length - 1;\r\n                            } else {\r\n                                console.error('Expected new value during AppStateCollection.Append reconciliation');\r\n                            }\r\n                            break;\r\n                        case OperationType.Insert:\r\n                            if (operation.IsNewValueDefined) {\r\n                                if (operation.ItemIndex < this.container.length) {\r\n                                    this.container.splice(operation.ItemIndex, 0, operation.NewValue);\r\n                                    operation.ReconciledItemIndex = operation.ItemIndex;\r\n                                }\r\n                                else {\r\n                                    this.container.push(operation.NewValue);\r\n                                    operation.ReconciledItemIndex = this.container.length - 1;\r\n                                }\r\n                            } else {\r\n                                console.error('Expected new value during AppStateCollection.Insert reconciliation');\r\n                            }\r\n                            break;\r\n                        case OperationType.Remove:\r\n                            if (operation.IsPreviousValueDefined) {\r\n                                if (operation.ItemIndex < this.container.length) { // && operation.PreviousValue == this.container[operation.ItemIndex]) {\r\n                                    this.container.splice(operation.ItemIndex, 1);\r\n                                    operation.ReconciledItemIndex = operation.ItemIndex;\r\n                                }\r\n                                else {\r\n                                    operation.ReconciledItemIndex = -1;\r\n                                    /// \\todo: @UB: Locate entry and remove it depending on previous value or fail reconcile if not found.\r\n                                }\r\n                            } else {\r\n                                console.error('Expected previous value during AppStateCollection.Remove reconciliation');\r\n                            }\r\n                            break;\r\n                        case OperationType.Replace:\r\n                            if (operation.IsNewValueDefined) {\r\n                                if (operation.ItemIndex < this.container.length) {\r\n                                    this.container[operation.ItemIndex] = operation.NewValue;\r\n                                    operation.ReconciledItemIndex = operation.ItemIndex;\r\n                                }\r\n                                else {\r\n                                    operation.ReconciledItemIndex = -1;\r\n                                    /// \\todo: @UB: Locate entry and replace it depending on previous value or fail reconcile if not found.\r\n                                }\r\n                            } else {\r\n                                console.error('Expected new value during AppStateCollection.Replace reconciliation');\r\n                            }\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        public beginTransaction() {\r\n            super.beginTransaction();\r\n            this.operations.length = 0;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    export class AppStateClusterManagerBase {\r\n        /** A vector managing pointers to all instances of the corresponding cluster type.\r\n          */\r\n        protected allInstances: Array<AppStateCluster> = [];\r\n\r\n        /** Adds a new instance of the corresponding cluster type to this.\r\n          */\r\n        protected addInstance(instance: AppStateCluster) {\r\n            instance.registerEntries();\r\n            this.allInstances.push(instance);\r\n        }\r\n\r\n        /** Starts the transactional phase. Changes to entries and their values may only be carried out\r\n          * during the transactional phase.\r\n          */\r\n        public beginTransaction() {\r\n            for (let clusterKey in this.allInstances) {\r\n                this.allInstances[clusterKey].beginTransaction();\r\n            }\r\n        }\r\n\r\n        /** Ends the transactional phase. Afterwards, the synchronisation takes place. To ensure that local state\r\n          * changes aren't missed, an exception is thrown if the state is not transactional when entries or their values are being changed.\r\n          */\r\n        public endTransaction() {\r\n            for (let clusterKey in this.allInstances) {\r\n                this.allInstances[clusterKey].endTransaction();\r\n            }\r\n        }\r\n\r\n        /** Applies app state changes to the view state of the application. This method is being called after all local changes have\r\n          * been carried out (the \"transactional phase\") and after the synchronisation took place. Therefore, all changes for the current\r\n          * update cycle have been carried out and will be reflected in the view state.\r\n          */\r\n        public applyChanges(scene: modelstageweb.SceneWebGL) {\r\n            for (let clusterKey in this.allInstances) {\r\n                let cluster = this.allInstances[clusterKey];\r\n                if (cluster.isDirty()) {\r\n                    cluster.applyChanges(scene, cluster.PeerID, cluster.InstanceID);\r\n                    scene.setDirty();\r\n                }\r\n            }\r\n        }\r\n\r\n        /** Serializes peer ID and/or instance ID based on the nature of the concrete cluster type. Must\r\n          * be overriden by concrete subclasses of AppStateClusterManagerBase.\r\n          */\r\n        public serializeClusterInstanceData(cluster: AppStateCluster, deltaWriter: AppStateDeltaWriter, appState: AppStateBase) {\r\n        }\r\n\r\n        /** Serializes all changes that have been carried out on clusters of the corresponding type.\r\n          */\r\n        public serializeTransaction(deltaWriter: AppStateDeltaWriter, clusterID: string, appState: AppStateBase) {\r\n            let dirtyClusters: Array<AppStateCluster> = [];\r\n\r\n            for (let clusterKey in this.allInstances) {\r\n                let cluster = this.allInstances[clusterKey];\r\n                if (cluster.isDirty()) {\r\n                    dirtyClusters.push(cluster);\r\n                }\r\n            }\r\n\r\n            if (dirtyClusters.length > 0) {\r\n                deltaWriter.Writer.writeString(clusterID);\r\n                deltaWriter.Writer.writeUInt16(dirtyClusters.length);\r\n\r\n                dirtyClusters.forEach((cluster) => {\r\n                    this.serializeClusterInstanceData(cluster, deltaWriter, appState);\r\n\r\n                    cluster.serializeTransaction(deltaWriter, appState);\r\n                });\r\n            }\r\n        }\r\n\r\n        /** Deserializes remote changes that have been carried out on clusters of the corresponding type. Must\r\n          * be overriden by concrete subclasses of AppStateClusterManagerBase.\r\n          */\r\n        public deserializeTransaction(deltaReader: AppStateDeltaReader, appState: AppStateBase, scene: modelstageweb.SceneWebGL): boolean {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /** Concrete subclass of AppStateClusterManagerBase that provides a single, global instance of the specified cluster type.\r\n      */\r\n    export class GlobalAppStateClusterManager<TAppStateCluster extends AppStateCluster> extends AppStateClusterManagerBase {\r\n\r\n        private onlyInstance: TAppStateCluster;\r\n\r\n        constructor(clusterTypeID: string, private clusterType: new () => TAppStateCluster) {\r\n            super();\r\n            this.onlyInstance = new clusterType();\r\n\r\n            AppState.GetInstance().addCluster(clusterTypeID, this);\r\n            this.addInstance(this.onlyInstance);\r\n        }\r\n\r\n        /** Gets the only instance of this cluster type.\r\n          */\r\n        public getGlobalCluster(): TAppStateCluster {\r\n            return this.onlyInstance;\r\n        }\r\n\r\n        /** As global clusters don't need a peer ID or instance ID to identify, this implementation doesn't write anything.\r\n          */\r\n        public serializeClusterInstanceData(cluster: AppStateCluster, deltaWriter: AppStateDeltaWriter, appState: AppStateBase) {\r\n        }\r\n\r\n        /** As global clusters don't need a peer ID or instance ID to identify, this implementation doesn't retreive\r\n          * additional data from the reader.\r\n          */\r\n        public deserializeTransaction(deltaReader: AppStateDeltaReader, appState: AppStateBase, scene: modelstageweb.SceneWebGL): boolean {\r\n            let success = false;\r\n            let instanceCount = deltaReader.Reader.readUInt16();\r\n            if (!deltaReader.Reader.Error) {\r\n                for (let i = 0; i < instanceCount; ++i) {\r\n                    let cluster = this.getGlobalCluster();\r\n                    success = cluster.deserializeTransaction(deltaReader, appState, scene);\r\n                }\r\n            }\r\n\r\n            return success;\r\n        }\r\n    }\r\n\r\n    /** Concrete subclass of AppStateClusterManagerBase that distinguishes local and remote instances of the \r\n      * corresponding cluster type (derived from AppStateCluster). Each peer may have zero or one instances of the cluster type.\r\n      */\r\n    export class LocalAppStateClusterManager<TAppStateCluster extends AppStateCluster> extends AppStateClusterManagerBase {\r\n\r\n        /** The map of cluster per peer.\r\n          */\r\n        private peerClusters: { [key: string]: AppStateCluster } = {};\r\n\r\n        constructor(clusterTypeID: string, private clusterType: new () => TAppStateCluster) {\r\n            super();\r\n            this.peerClusters[''] = new clusterType();\r\n\r\n            AppState.GetInstance().addCluster(clusterTypeID, this);\r\n            this.addInstance(this.peerClusters['']);\r\n        }\r\n\r\n        /** Gets the local peer's instance of this cluster type.\r\n          */\r\n        public getLocalCluster(): TAppStateCluster {\r\n            return <TAppStateCluster>this.allInstances[''];\r\n        }\r\n\r\n        /** \\brief Gets the instance of this cluster type that belongs to the peer with the specified ID. If it doesn't exist,\r\n          * it's created.\r\n          */\r\n        public getCluster(peerID: string): TAppStateCluster {\r\n            let result: TAppStateCluster = null;\r\n\r\n            if (!this.containsCluster(peerID)) {\r\n                result = new this.clusterType();\r\n                this.peerClusters[peerID] = result;\r\n                result.PeerID = peerID;\r\n                this.addInstance(result);\r\n            }\r\n            else {\r\n                result = <TAppStateCluster>this.peerClusters[peerID];\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n        /** Determines if the peer with the specified ID already has an instance of the corresponding cluster type.\r\n          */\r\n        public containsCluster(peerID: string) {\r\n            return this.peerClusters[peerID] != null;\r\n        }\r\n\r\n        /** As local clusters with a single instance only need a peer ID to identify, this implementation only writes the peerID.\r\n          * For the local peer's instance, an empty peer ID will be replaced by the actual ID of the peer.\r\n          */\r\n        public serializeClusterInstanceData(cluster: AppStateCluster, deltaWriter: AppStateDeltaWriter, appState: AppStateBase) {\r\n            let peerID = cluster.PeerID;\r\n            // Use local peerID if the cluster's peer ID is empty.\r\n            deltaWriter.Writer.writeString(peerID.length == 0 ? appState.LocalPeerID : peerID);\r\n        }\r\n\r\n        /** As local clusters with a single instance only need a peer ID to identify, this implementation retrieves a peer ID,\r\n          * but no instanceID from the delta. If the peerID is identical to the local peer's ID, it is replaced by the internal\r\n          * key (empty string) that is used to identify local peer data.\r\n          */\r\n        public deserializeTransaction(deltaReader: AppStateDeltaReader, appState: AppStateBase, scene: modelstageweb.SceneWebGL) {\r\n            let success = false;\r\n\r\n            let instanceCount = deltaReader.Reader.readUInt16();\r\n            if (!deltaReader.Reader.Error) {\r\n                for (let i = 0; i < instanceCount; ++i) {\r\n                    let peerID = deltaReader.Reader.readString();\r\n                    if (!deltaReader.Reader.Error) {\r\n\r\n                        if (peerID == appState.LocalPeerID) {\r\n                            peerID = '';\r\n                        }\r\n\r\n                        let cluster = this.getCluster(peerID);\r\n                        success = cluster.deserializeTransaction(deltaReader, appState, scene);\r\n                    }\r\n                }\r\n            }\r\n\r\n            return success;\r\n        }\r\n    }\r\n\r\n    /** AppStateCluster instances store information about the application state. Based on application state, changes\r\n\t  * to the view state are carried out. In order to be able to synchronize application state, operations on the entries that\r\n\t  * are aggregated by AppStateCluster,  are stored during a \"transactional phase\". Immediately afterwards, all changes are\r\n\t  * collected and sync'ed with remote peers. Similarly, when remote changes are received, they are processed after the local \r\n\t  * collection took place, causing app state changes. Finally, all cluster's entry's changes are processed to update the\r\n\t  * application's view state.\r\n\t  */\r\n    export abstract class AppStateCluster {\r\n        private peerID: string;\r\n\r\n        private instanceID: string;\r\n\r\n        private appState: AppStateBase;\r\n\r\n        private entries: { [index: string]: AppStateEntry } = {};\r\n\r\n        private dirty: boolean = false;\r\n\r\n        private lockCount: number = 0;\r\n\r\n        public get PeerID() {\r\n            return this.peerID;\r\n        }\r\n\r\n        public set PeerID(value: string) {\r\n            this.peerID = value;\r\n        }\r\n\r\n        public get InstanceID() {\r\n            return this.instanceID;\r\n        }\r\n\r\n        /** Constructor\r\n          * @param peerID\t\tThe peer ID this cluster instance belongs to. If it's left empty, the local peer's ID will be used.\r\n          * @param instanceID\tThe peer-unique instance ID. This ID is only necessary, if multi-instances are used (per peer). This depends on the AppStateClusterManager used to manage instances.\r\n          * @param appState\t\tThe app state container this cluster belongs to.\r\n          */\r\n        constructor(peerID?: string, instanceID?: string, appState?: AppStateBase) {\r\n            this.peerID = peerID || '';\r\n            this.instanceID = instanceID || '';\r\n            this.appState = appState || AppState.GetInstance();\r\n        }\r\n\r\n        /** Registers all entries on creation of a new cluster instance. Must be overriden by concrete clusters.\r\n          */\r\n        public abstract registerEntries();\r\n\r\n        public beginTransaction() {\r\n            this.dirty = false;\r\n            for (let entryIdx in this.entries) {\r\n                this.entries[entryIdx].beginTransaction();\r\n            }\r\n        }\r\n\r\n        public endTransaction() {\r\n            for (let entryIdx in this.entries) {\r\n                this.entries[entryIdx].endTransaction();\r\n            }\r\n        }\r\n\r\n        private reconcile(scene: modelstageweb.SceneWebGL) {\r\n            for (let entryIdx in this.entries) {\r\n                this.entries[entryIdx].reconcile();\r\n            }\r\n        }\r\n\r\n        public setDirty() {\r\n            this.dirty = true;\r\n        }\r\n\r\n        public isDirty() {\r\n            return this.dirty;\r\n        }\r\n\r\n        public registerEntry(key: string, entry: AppStateEntry) {\r\n            this.entries[key] = entry;\r\n            entry.register(key, this);\r\n        }\r\n\r\n        /** ApplyChanges is being called in each update cycle with local or remote changes. Concrete clusters should\r\n          * override ApplyChanges to update the view state based on the app state changes that occured.\r\n          */\r\n        public applyChanges(scene: modelstageweb.SceneWebGL, peerID: string, instanceID: string) {\r\n        }\r\n\r\n        /** Writes all local operations that have been carried out during the transactional phase of this update cycle (\"Delta\").\r\n          */\r\n        public serializeTransaction(deltaWriter: AppStateDeltaWriter, appState: AppStateBase) {\r\n            // setIsInitializing(deltaWriter.IsInitialization());\r\n\r\n            let dirtyEntries: Array<{ key: string, entry: AppStateEntry }> = [];\r\n\r\n            for (let idx in this.entries) {\r\n                if (this.entries[idx].isDirty()) {\r\n                    dirtyEntries.push({ key: idx, entry: this.entries[idx] });\r\n                }\r\n            }\r\n\r\n            deltaWriter.Writer.writeUInt16(dirtyEntries.length);\r\n\r\n            dirtyEntries.forEach((e) => {\r\n                e.entry.serializeDelta(deltaWriter, e.key);\r\n            });\r\n        }\r\n\r\n        /** Retrieves all remote operations that have been received from remote peers.\r\n          */\r\n        public deserializeTransaction(deltaReader: AppStateDeltaReader, appState: AppStateBase, scene: modelstageweb.SceneWebGL) {\r\n            let success = true;\r\n\r\n            let entryCount = deltaReader.Reader.readUInt16();\r\n\r\n            // setIsInitializing(deltaReader.IsInitializing());\r\n            if (!deltaReader.Reader.Error) {\r\n                for (let i = 0; i < entryCount && success; ++i) {\r\n                    let entryKey: string = deltaReader.Reader.readString();\r\n                    if (!deltaReader.Reader.Error) {\r\n                        let entry = this.entries[entryKey];\r\n                        if (entry) {\r\n                            success = entry.deserializeDelta(deltaReader, entryKey);\r\n                        }\r\n                        else {\r\n                            success = false;\r\n                        }\r\n                    }\r\n                    else {\r\n                        success = false;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                success = false;\r\n            }\r\n\r\n            if (success) {\r\n                this.reconcile(scene);\r\n            }\r\n\r\n            return success;\r\n        }\r\n\r\n        public lock() {\r\n            ++this.lockCount;\r\n        }\r\n\r\n        public unlock() {\r\n            --this.lockCount;\r\n        }\r\n\r\n        public get IsLocked(): boolean {\r\n            return this.lockCount > 0;\r\n        }\r\n\r\n        public readValue(key: string, reader: AppStateDeltaReader): any {\r\n            console.error('readValue not implemented for ' + key);\r\n        }\r\n\r\n        public writeValue(key: string, writer: AppStateDeltaWriter, value: any) {\r\n            console.error('writeValue not implemented for ' + key);\r\n        }\r\n    }\r\n\r\n    export class Director {\r\n        protected scene: modelstageweb.SceneWebGL;\r\n\r\n        protected appState: AppStateBase;\r\n\r\n        private pendingUpdates: (() => void)[] = [];\r\n\r\n        private pendingMessages: modelstageweb.NetworkChannelMessage[] = [];\r\n\r\n        public set Scene(scene: DirectedSceneWebGL) {\r\n            this.scene = scene;\r\n        } \r\n\r\n        constructor(appState: AppStateBase) {\r\n            this.appState = appState;\r\n        }\r\n\r\n        /** Initializes an AppState transaction. Any changes applied to the AppState will be monitored.\r\n          * BeginUpdate is called at the very beginning of each render cycle.\r\n          */\r\n        public beginFrame() {\r\n            this.appState.beginTransaction();\r\n        }\r\n\r\n        public commit() {\r\n            this.acquirePendingUpdates().forEach((updFunc) => {\r\n                updFunc();\r\n            });\r\n            this.appState.endTransaction();\r\n        }\r\n\r\n        /** Determines and submits local AppState transitions. Creates a local AppState delta that is transferred to upstream peers.\r\n          * SubmitLocalUpdates is called after the scene has been rendered and all interactions with the view are processed.\r\n          */\r\n        public submitLocalUpdates(connection: modelstageweb.ServerConnection) {\r\n            const AppStateDelta = 0x0100;\r\n\r\n            let writer = new AppStateDeltaWriter(new BinaryWriter());\r\n            writer.Writer.writeInt32(1);\r\n            writer.Writer.writeInt32(AppStateDelta); \r\n            this.appState.serializeTransaction(writer);\r\n            let buf = writer.Writer.flush();\r\n            let msg = modelstageweb.NetworkChannelMessage.FromBuffer(buf);\r\n            if (msg.HasPayload && connection.IsConnected) {\r\n                connection.send(msg.Content);\r\n            }\r\n        }\r\n\r\n        /** Applies remote AppState transitions received from upstream peers. ApplyRemoteUpdates is called after \r\n          * SubmitLocalUpdates. After applying remote updates, all AppState transitions for this render cycle have been applied.\r\n          */\r\n        public applyRemoteUpdates() {\r\n            let pendingMessages = this.acquirePendingMessages();\r\n            pendingMessages.forEach((msg) => {\r\n                this.appState.deserializeTransaction(new AppStateDeltaReader(new BinaryReader(msg.Content)), this.scene);\r\n            });\r\n        }\r\n\r\n        private acquirePendingUpdates(): Array<() => void> {\r\n            let result = this.pendingUpdates;\r\n            this.pendingUpdates = [];\r\n            return result;\r\n        }\r\n\r\n        private acquirePendingMessages() {\r\n            let result = this.pendingMessages;\r\n            this.pendingMessages = [];\r\n            return result;\r\n        }\r\n\r\n        /** Updates ViewState according to resulting AppState. AppState transition is committed by clearing AppState delta.\r\n          */\r\n        public endFrame() {\r\n            this.appState.applyChanges(this.scene);\r\n        }\r\n\r\n        public receivedMessage(message: modelstageweb.NetworkChannelMessage) {\r\n            this.pendingMessages.push(message);\r\n        }\r\n\r\n        public synchronizeStateUpdate(func: () => void) {\r\n            this.pendingUpdates.push(func);\r\n        }\r\n    }\r\n\r\n    export class DirectedSceneWebGL extends modelstageweb.SceneWebGL {\r\n\r\n        protected director: Director;\r\n\r\n        private connection: modelstageweb.ServerConnection;\r\n\r\n        public constructor(director: Director, connection: modelstageweb.ServerConnection) {\r\n            super();\r\n            this.director = director;\r\n            this.connection = connection;\r\n        }\r\n\r\n        public beginFrame() {\r\n            this.director.beginFrame();\r\n        }\r\n\r\n        public update() {\r\n            this.director.commit();\r\n\r\n            if (this.connection && this.connection.IsConnected) {\r\n                this.director.submitLocalUpdates(this.connection);\r\n                this.director.applyRemoteUpdates();\r\n            }\r\n        }\r\n\r\n        public endFrame() {\r\n            this.director.endFrame();\r\n        }\r\n\r\n        public receivedMessage(message: modelstageweb.NetworkChannelMessage) {\r\n            if (message.MessageType == modelstageweb.CommonMessageTypes.AppStateDelta || message.MessageType == modelstageweb.CommonMessageTypes.AppStateInitialization) {\r\n                this.director.receivedMessage(message);\r\n            }\r\n        }\r\n\r\n        public synchronizeStateUpdate(func: () => void) {\r\n            this.director.synchronizeStateUpdate(func);\r\n        }\r\n\r\n    }\r\n\r\n}","/// ModelStage Â© 2018 Plansysteme GmbH, Hamburg, Germany. All rights reserved.\r\n\r\nimport { modelstageweb } from './mx-common';\r\nimport { modelstageappstate } from './mx-appstate';\r\nimport { psgeometry } from './ps-geometry';\r\n\r\nexport module modelstage {\r\n\r\n    class Timer {\r\n        public animationFrame(callback: FrameRequestCallback): number {\r\n            return window.requestAnimationFrame(callback);\r\n        }\r\n\r\n        constructor() {\r\n        }\r\n    }\r\n\r\n    export class SpaceModel {\r\n \r\n        private vertices: Array<psgeometry.Vec2> = [];\r\n\r\n        private floorLevel: number = 0;\r\n\r\n        public get FloorLevel() { return this.floorLevel; }\r\n\r\n        public set FloorLevel(floorLevel) { this.floorLevel = floorLevel; }\r\n\r\n        constructor(private scene: DemoSceneWebGL, private stage: modelstageweb.StageWebGL, private actor: modelstageweb.ActorWebGL) {\r\n        }\r\n\r\n        private initializeSquareRoom(transparentMeshBuilder: modelstageweb.TransparentMeshBuilder, texturedMeshBuilder: modelstageweb.TexturedMeshBuilder) {\r\n            texturedMeshBuilder.addQuad(\r\n                -5.0, 0.0, -5.0, 0, 0,\r\n                5.0, 0.0, -5.0, 1, 0,\r\n                5.0, 0.0, 5.0, 1, 1,\r\n                -5.0, 0.0, 5.0, 0, 1,\r\n                0.3, 0.3, 0.3, true);\r\n\r\n            transparentMeshBuilder.addQuad(\r\n                -5.0, 0.0, -5.0,\r\n                5.0, 0.0, -5.0,\r\n                5.0, 2.6, -5.0,\r\n                -5.0, 2.6, -5.0,\r\n                0.1, 0.1, 0.1, .4, true);\r\n\r\n            transparentMeshBuilder.addQuad(\r\n                -5.0, 0.0, 5.0,\r\n                -5.0, 2.6, 5.0,\r\n                5.0, 2.6, 5.0,\r\n                5.0, 0.0, 5.0,\r\n                0.1, 0.1, 0.1, .4, true);\r\n\r\n            transparentMeshBuilder.addQuad(\r\n                -5.0, 0.0, -5.0,\r\n                -5.0, 2.6, -5.0,\r\n                -5.0, 2.6, 5.0,\r\n                -5.0, 0.0, 5.0,\r\n                0.15, 0.15, 0.15, .4, true);\r\n\r\n            transparentMeshBuilder.addQuad(\r\n                5.0, 0.0, -5.0,\r\n                5.0, 0.0, 5.0,\r\n                5.0, 2.6, 5.0,\r\n                5.0, 2.6, -5.0,\r\n                0.15, 0.15, 0.15, .4, true);\r\n        }\r\n\r\n        private initializeArbitraryRoom(transparentMeshBuilder: modelstageweb.TransparentMeshBuilder, texturedMeshBuilder: modelstageweb.TexturedMeshBuilder) {\r\n\r\n            let toggle = false;\r\n\r\n            let poly = new psgeometry.Polygon2D();\r\n\r\n            for (let i = 0; i < this.vertices.length; i++) {\r\n                poly.addVector(this.vertices[i]);\r\n            }\r\n            var bbox = new psgeometry.AABB2D();\r\n            poly.addToAABB(bbox);\r\n            var extents = bbox.extents();\r\n            this.stage.updateShadowArea(bbox);\r\n\r\n            poly = poly.triangulate();\r\n            for (let i = 0; i < poly.Vertices.length; i += 3) {\r\n                texturedMeshBuilder.addTri(\r\n                    poly.Vertices[i].x, 0, poly.Vertices[i].y, (poly.Vertices[i].x - bbox.minX) / extents.x, (poly.Vertices[i].y - bbox.minY) / extents.y,\r\n                    poly.Vertices[i + 1].x, 0, poly.Vertices[i + 1].y, (poly.Vertices[i + 1].x - bbox.minX) / extents.x, (poly.Vertices[i + 1].y - bbox.minY) / extents.y,\r\n                    poly.Vertices[i + 2].x, 0, poly.Vertices[i + 2].y, (poly.Vertices[i + 2].x - bbox.minX) / extents.x, (poly.Vertices[i + 2].y - bbox.minY) / extents.y,\r\n                    0.2, 0.2, 0.2, true);\r\n            }\r\n\r\n            for (let i = 0; i < this.vertices.length; i++) {\r\n                let start = this.vertices[i];\r\n                let end = this.vertices[(i + 1) % this.vertices.length];\r\n\r\n                transparentMeshBuilder.addQuad(\r\n                    start.x, 0.0, start.y,\r\n                    end.x, 0.0, end.y,\r\n                    end.x, 2.6, end.y,\r\n                    start.x, 2.6, start.y,\r\n                    toggle ? 0.1 : 0.15, toggle ? 0.1 : 0.15, toggle ? 0.1 : 0.15, .4, true);\r\n\r\n                toggle = !toggle;\r\n            }\r\n\r\n        }\r\n\r\n        public updateSpace() {\r\n\r\n            let spaceIndices = new modelstageweb.BufferAssetWebGL(undefined, 'space_indices', true);\r\n            let spaceVertices = new modelstageweb.BufferAssetWebGL(undefined, 'space_vertices', false);\r\n            let transparentMeshBuilder = new modelstageweb.TransparentMeshBuilder(spaceVertices, spaceIndices);\r\n            let floorIndices = new modelstageweb.BufferAssetWebGL(undefined, 'floor_indices', true);\r\n            let floorVertices = new modelstageweb.BufferAssetWebGL(undefined, 'floor_vertices', false);\r\n            let texturedMeshBuilder = new modelstageweb.TexturedMeshBuilder(floorVertices, floorIndices);\r\n\r\n            if (this.vertices.length < 3) {\r\n                this.initializeSquareRoom(transparentMeshBuilder, texturedMeshBuilder);\r\n            } else {\r\n                this.initializeArbitraryRoom(transparentMeshBuilder, texturedMeshBuilder);\r\n            }\r\n\r\n            let figure = new modelstageweb.FigureWebGL('Space');\r\n\r\n            texturedMeshBuilder.initialize(this.stage);\r\n            this.stage.AssetStore.addBufferAsset('floor_indices', floorIndices);\r\n            this.stage.AssetStore.addBufferAsset('floor_vertices', floorVertices);\r\n            let floorShaderInstance = new modelstageweb.MeshShaderInstance('TexturedMeshShader');\r\n            floorShaderInstance.addReference('IndexBuffer', 'floor_indices');\r\n            floorShaderInstance.addReference('VertexBuffer', 'floor_vertices');\r\n            floorShaderInstance.addReference('TextureBuffer', 'Shadow');\r\n            figure.addShaderInstance(floorShaderInstance);\r\n            \r\n            transparentMeshBuilder.initialize(this.stage);\r\n            this.stage.AssetStore.addBufferAsset('space_indices', spaceIndices);\r\n            this.stage.AssetStore.addBufferAsset('space_vertices', spaceVertices);\r\n            let shaderInstance = new modelstageweb.MeshShaderInstance('TransparentMeshShader');\r\n            shaderInstance.addReference('IndexBuffer', 'space_indices');\r\n            shaderInstance.addReference('VertexBuffer', 'space_vertices');\r\n            figure.addShaderInstance(shaderInstance);\r\n\r\n            this.actor.Figures[0] = figure;\r\n            this.actor.Filter = new modelstageweb.GenericSceneItemFilterWebGL();\r\n\r\n            this.actor.Scene.setDirty();\r\n\r\n        }\r\n\r\n        public clearVertices() {\r\n            this.vertices.length = 0;\r\n        }\r\n\r\n        public addVertex(x: number, y: number) {\r\n            this.vertices.push(new psgeometry.Vec2(x, y));\r\n        }\r\n    }\r\n\r\n    export class TheaterWebGL {\r\n\r\n        protected scene: modelstageweb.SceneWebGL;\r\n\r\n        protected stage: modelstageweb.StageWebGL;\r\n\r\n        private timer: Timer;\r\n\r\n        get Stage(): modelstageweb.StageWebGL {\r\n            return this.stage;\r\n        }\r\n\r\n        get Scene(): modelstageweb.SceneWebGL {\r\n            return this.scene;\r\n        }\r\n\r\n        constructor(canvasElementID: string) {\r\n            this.stage = new modelstageweb.StageWebGL(canvasElementID);\r\n            this.stage.initialize();\r\n\r\n            //this.scene = new modelstageweb.SceneWebGL();\r\n\r\n            this.timer = new Timer();\r\n            this.timer.animationFrame(() => { this.processFrame() });\r\n\r\n            document.addEventListener('visibilitychange', () => { this.onVisibilityChange(); }, false);\r\n\r\n            this.initialize();\r\n        }\r\n\r\n        protected initialize() {\r\n        }\r\n\r\n        /** Main render cycle for a frame.\r\n          */\r\n        protected processFrame() {\r\n            if (this.scene && this.scene.IsInitialized) {\r\n                if (!document.hidden) {\r\n                    // Render scene.\r\n                    this.render();\r\n                }\r\n\r\n                // Process available interaction data and remote messages to update application state and/or view state for the next frame.\r\n                this.scene.update();\r\n\r\n                // Finalize frame.\r\n                this.scene.endFrame();\r\n\r\n                this.scene.beginFrame();\r\n            }\r\n\r\n            this.timer.animationFrame(() => { this.processFrame() });\r\n        }\r\n\r\n        protected render() {\r\n            if (this.scene.IsInitialized) {\r\n                this.stage.render(this.scene);\r\n            }\r\n        }\r\n\r\n        private onVisibilityChange() {\r\n            if (!document.hidden) {\r\n                this.timer.animationFrame(() => { this.render() });\r\n            }\r\n        }\r\n    }\r\n\r\n    export class ActorManipulationTool extends modelstageweb.Tool {\r\n\r\n        constructor(protected connection: modelstageweb.ServerConnection) {\r\n            super();\r\n        }\r\n\r\n        protected getSceneObj(objID: string) {\r\n            let sceneObjIdx = 0;\r\n            let sceneObj = null;\r\n            while (sceneObjIdx < SceneAppState.GlobalInstance.SceneObjects.Count && !sceneObj) {\r\n                if (SceneAppState.GlobalInstance.SceneObjects.GetItemAt(sceneObjIdx).SceneObjectID == objID) {\r\n                    sceneObj = SceneAppState.GlobalInstance.SceneObjects.GetItemAt(sceneObjIdx);\r\n                } else {\r\n                    ++sceneObjIdx;\r\n                }\r\n            }\r\n            return [sceneObj, sceneObjIdx];\r\n        }\r\n\r\n        private updateModelTransform(actor: modelstageweb.ActorWebGL) {\r\n            let translationVec = actor.Data['translate'] || psgeometry.Vec4.Zero;\r\n            let rotationVec = actor.Data['rotate'] || psgeometry.Vec4.Zero;\r\n\r\n            this.connection.send('Scene|Transform|' + actor.SceneItemID + '|' + translationVec.x + ',' + translationVec.y + ',' + translationVec.z + '|' + rotationVec.y + ',' + rotationVec.x + ',' + rotationVec.z);\r\n\r\n            let translation = psgeometry.Matrix4.FromTranslation(translationVec.x, translationVec.y, translationVec.z);\r\n            let rotation = psgeometry.Matrix4.FromRotationY(rotationVec.y);\r\n\r\n            actor.State.set('ModelTransform', <psgeometry.Matrix4>rotation.multiply(translation));\r\n            actor.Scene.setDirty();\r\n        }\r\n\r\n        protected updateActorTranslation(actor: modelstageweb.ActorWebGL, x: number, y: number, z: number) {\r\n            actor.Data['translate'] = new psgeometry.Vec4(x, y, z);\r\n            this.updateModelTransform(actor);\r\n        }\r\n\r\n        protected updateActorRotation(actor: modelstageweb.ActorWebGL, x: number, y: number, z: number) {\r\n            actor.Data['rotate'] = new psgeometry.Vec4(x, y, z);\r\n            this.updateModelTransform(actor);\r\n        }\r\n    }\r\n\r\n    export class SelectionTool extends ActorManipulationTool {\r\n        private static readonly SelectionObjectID = 'SEL_MARKER';\r\n\r\n        private selectedActor: modelstageweb.ActorWebGL;\r\n\r\n        constructor(private scene: modelstageweb.SceneWebGL, private stage: modelstageweb.StageWebGL, connection: modelstageweb.ServerConnection) {\r\n            super(connection);\r\n        }\r\n\r\n        public enter(interfaceController: modelstageweb.InterfaceController) {\r\n            super.enter(interfaceController);\r\n\r\n            this.updateSelectionMarker();\r\n        }\r\n\r\n        public leave() {\r\n            this.removeSelectionMarker();\r\n        }\r\n\r\n        public handleKeyUp(e: JQuery.Event) {\r\n            if (e.keyCode == 46 && this.selectedActor) { // delete key\r\n\r\n                let [sceneObj, sceneObjIdx] = this.getSceneObj(this.selectedActor.Data['SceneObjID']);\r\n                if (sceneObj) {\r\n                    SceneAppState.GlobalInstance.SceneObjects.remove(sceneObjIdx);\r\n                    this.removeSelectionMarker();\r\n                    this.selectedActor = null;\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n        private removeSelectionMarker() {\r\n            this.scene.removeSceneItem(SelectionTool.SelectionObjectID);\r\n        }\r\n\r\n        private updateSelectionMarker() {\r\n            this.scene.removeSceneItem(SelectionTool.SelectionObjectID);\r\n\r\n            if (this.selectedActor) {\r\n                let box = new psgeometry.AABB3D;\r\n                this.selectedActor.Figures.forEach((fig) => {\r\n                    box.addAABB(fig.getBoundingBox());\r\n                });\r\n\r\n                let bottomCenterPoint = new psgeometry.Vec3(box.center().x, box.minY, box.center().z);\r\n                let selectionMarker = new modelstageweb.ActorWebGL(this.scene, SelectionTool.SelectionObjectID);\r\n\r\n                let [r, g, b] = [.16, .34, .6];\r\n\r\n                let meshBuilder = new modelstageweb.OpaqueMeshBuilder();\r\n\r\n                // top lid\r\n                meshBuilder.addStroke(box.minX, box.maxY, box.minZ, box.maxX, box.maxY, box.minZ, r, g, b);\r\n                meshBuilder.addStroke(box.maxX, box.maxY, box.minZ, box.maxX, box.maxY, box.maxZ, r, g, b);\r\n                meshBuilder.addStroke(box.maxX, box.maxY, box.maxZ, box.minX, box.maxY, box.maxZ, r, g, b);\r\n                meshBuilder.addStroke(box.minX, box.maxY, box.maxZ, box.minX, box.maxY, box.minZ, r, g, b);\r\n\r\n                // bottom lid\r\n                meshBuilder.addStroke(box.minX, box.minY, box.minZ, box.maxX, box.minY, box.minZ, r, g, b);\r\n                meshBuilder.addStroke(box.maxX, box.minY, box.minZ, box.maxX, box.minY, box.maxZ, r, g, b);\r\n                meshBuilder.addStroke(box.maxX, box.minY, box.maxZ, box.minX, box.minY, box.maxZ, r, g, b);\r\n                meshBuilder.addStroke(box.minX, box.minY, box.maxZ, box.minX, box.minY, box.minZ, r, g, b);\r\n                \r\n                // vertical lines\r\n                meshBuilder.addStroke(box.minX, box.minY, box.minZ, box.minX, box.maxY, box.minZ, r, g, b);\r\n                meshBuilder.addStroke(box.minX, box.minY, box.maxZ, box.minX, box.maxY, box.maxZ, r, g, b);\r\n                meshBuilder.addStroke(box.maxX, box.minY, box.minZ, box.maxX, box.maxY, box.minZ, r, g, b);\r\n                meshBuilder.addStroke(box.maxX, box.minY, box.maxZ, box.maxX, box.maxY, box.maxZ, r, g, b);\r\n\r\n                selectionMarker.addFigure(meshBuilder.createFigure(this.stage, 'SEL_MARKER'));\r\n\r\n                let figureBoundingBox = new psgeometry.AABB3D();\r\n\r\n                [r, g, b] = [.6, .1, .1];\r\n                let meshBuilder1 = new modelstageweb.OpaqueMeshBuilder();\r\n                const segmentCount = 24;\r\n                const radius0 = 1;\r\n                const radius1 = 1.1;\r\n                for (let i = 0; i < segmentCount; ++i) {\r\n                    let angle0 = 2 * Math.PI / segmentCount * i;\r\n                    let angle1 = 2 * Math.PI / segmentCount * (i + 1);\r\n                    let inner0 = new psgeometry.Vec3(Math.sin(angle0) * radius0, 0, Math.cos(angle0) * radius0).add(bottomCenterPoint);\r\n                    let inner1 = new psgeometry.Vec3(Math.sin(angle1) * radius0, 0, Math.cos(angle1) * radius0).add(bottomCenterPoint);\r\n                    let outer0 = new psgeometry.Vec3(Math.sin(angle0) * radius1, 0, Math.cos(angle0) * radius1).add(bottomCenterPoint);\r\n                    let outer1 = new psgeometry.Vec3(Math.sin(angle1) * radius1, 0, Math.cos(angle1) * radius1).add(bottomCenterPoint);\r\n                    meshBuilder1.addQuad(outer0.x, outer0.y + 0.02, outer0.z,\r\n                        outer1.x, outer1.y + 0.02, outer1.z,\r\n                        inner1.x, inner1.y + 0.02, inner1.z,\r\n                        inner0.x, inner0.y + 0.02, inner0.z,\r\n                        r, g, b);\r\n\r\n                    meshBuilder1.addQuad(outer0.x, outer1.y - 0.02, outer0.z,\r\n                        outer1.x, outer1.y - 0.02, outer1.z,\r\n                        outer1.x, outer1.y + 0.02, outer1.z,\r\n                        outer0.x, outer0.y + 0.02, outer0.z,\r\n                        r, g, b);\r\n\r\n                    meshBuilder1.addQuad(inner0.x, inner0.y - 0.02, inner0.z,\r\n                        inner1.x, inner1.y - 0.02, inner1.z,\r\n                        outer1.x, outer1.y - 0.02, outer1.z,\r\n                        outer0.x, outer0.y - 0.02, outer0.z,\r\n                        r, g, b);\r\n\r\n                    figureBoundingBox.addVector(outer0);\r\n                }\r\n                let figure = meshBuilder1.createFigure(this.stage, 'ROT_MARKER');\r\n                figure.setIntersector(new modelstageweb.BoundingBoxIntersector(figureBoundingBox));\r\n                selectionMarker.addFigure(figure);\r\n\r\n                let sceneObjTranslation = this.scene.State.get('SceneObjectPos' + this.selectedActor.Data['SceneObjID'], psgeometry.Vec4.Zero);\r\n                let sceneObjRotation = this.scene.State.get('SceneObjectRot' + this.selectedActor.Data['SceneObjID'], psgeometry.Vec4.Zero);\r\n                selectionMarker.State.set('ModelTransform', psgeometry.Matrix4.FromRotation(sceneObjRotation.x, sceneObjRotation.y, sceneObjRotation.z).multiply(psgeometry.Matrix4.FromTranslation(sceneObjTranslation.x, sceneObjTranslation.y, sceneObjTranslation.z)));\r\n\r\n                selectionMarker.Filter = new modelstageweb.GenericSceneItemFilterWebGL();\r\n                this.scene.addSceneItem(selectionMarker, true);\r\n            }\r\n        }\r\n\r\n        public handleMouseDown(e: JQuery.Event) {\r\n            let viewRay = this.stage.Camera.getViewRay(e.clientX, e.clientY);\r\n            let candidates: Array<modelstageweb.IntersectionCandidate> = [];\r\n            this.scene.getIntersectionCandidates(viewRay, candidates);\r\n\r\n            let pickedObject = false;\r\n            let currentIdx = 0;\r\n\r\n            while (!pickedObject && currentIdx < candidates.length) {\r\n\r\n                if (candidates[currentIdx].sceneItem instanceof modelstageweb.ActorWebGL) {\r\n\r\n                    let pickedActor = <modelstageweb.ActorWebGL>(candidates[currentIdx].sceneItem);\r\n                    if (pickedActor.SceneItemID != SelectionTool.SelectionObjectID) {\r\n                        if (pickedActor == this.selectedActor) {\r\n                            this.interfaceController.pushTool(new MoveActorTool(pickedActor, this.stage.Camera, this.connection));\r\n                        } else {\r\n                            this.selectedActor = pickedActor;\r\n                            this.updateSelectionMarker();\r\n                        }\r\n\r\n                        pickedObject = true;\r\n                    } else {\r\n                        this.interfaceController.pushTool(new RotateActorTool(this.selectedActor, this.stage.Camera, this.connection));\r\n\r\n                        pickedObject = true;\r\n                    }\r\n                }\r\n                currentIdx++;\r\n            }\r\n\r\n            if (!pickedObject) {\r\n                this.scene.removeSceneItem(SelectionTool.SelectionObjectID);\r\n\r\n                this.selectedActor = null;\r\n            }\r\n        }\r\n\r\n        public handleMouseMove(e: JQuery.Event, x: number, y: number) {\r\n        }\r\n\r\n        public handleMouseUp(e: JQuery.Event) {\r\n        }\r\n    }\r\n\r\n    export class PlaceActorTool extends ActorManipulationTool {\r\n        private sceneObj: SceneObject;\r\n\r\n        private sceneObjIdx: number;\r\n\r\n        constructor(figureID: string, private camera: modelstageweb.CameraWebGL, connection: modelstageweb.ServerConnection) {\r\n            super(connection);\r\n\r\n            this.sceneObj = new SceneObject();\r\n            this.sceneObj.AssetID = figureID;\r\n            this.sceneObj.SceneObjectID = modelstageweb.uuidv4();\r\n            this.sceneObj.Location = new psgeometry.Vec4(); \r\n            this.sceneObj.Rotation = new psgeometry.Vec4();\r\n            this.sceneObj.Scale = new psgeometry.Vec4(1, 1, 1, 1);\r\n            SceneAppState.GlobalInstance.SceneObjects.append(this.sceneObj);\r\n\r\n            this.sceneObjIdx = SceneAppState.GlobalInstance.SceneObjects.Count - 1;\r\n        }\r\n\r\n        public handleMouseMove(e: JQuery.TriggeredEvent, x: number, y: number) {\r\n            let viewRay = this.camera.getViewRay(x, y);\r\n            let p = viewRay.intersectRayWithPlane(new psgeometry.Vec3(), new psgeometry.Vec3(0, 1, 0));\r\n            if (p) {\r\n                this.sceneObj = { ...this.sceneObj };\r\n                this.sceneObj.Location = new psgeometry.Vec4(p.x, 0, p.z);\r\n                SceneAppState.GlobalInstance.SceneObjects.replace(this.sceneObj, this.sceneObjIdx);\r\n                //this.updateActorTranslation(this.actor, p.x, 0, p.z);\r\n            }\r\n        }\r\n\r\n        public handleMouseUp(e: JQuery.Event) {\r\n            this.interfaceController.popTool();\r\n        }\r\n\r\n    }\r\n\r\n    let UserNames = {\r\n        'Administrator': 'Administrator',\r\n        'Arne': 'Arne Thurm',\r\n        'Ulrich': 'Ulrich BÃ¶nkemeyer',\r\n        'Tom': 'Tom Jachmann',\r\n        'Zacharias': 'Zacharias Reinhardt'\r\n    };\r\n\r\n    let PeerColors = [\r\n        [0.31, 0.02, 0.06, 1.00],  // red\r\n        [0.02, 0.17, 0.31, 1.00],  // blue\r\n        [0.02, 0.31, 0.06, 1.00],  // green\r\n        [0.69, 0.34, 0.00, 1.00],  // orange\r\n        [0.33, 0.00, 0.53, 1.00],  // purple\r\n//        [, 1.00],\r\n//        [, 1.00],\r\n//        [, 1.00],\r\n    ];\r\n\r\n    export class MoveActorTool extends ActorManipulationTool {\r\n        private isInitialized = false;\r\n        private lastX: number;\r\n        private lastZ: number;\r\n\r\n        constructor(private actor: modelstageweb.ActorWebGL, private camera: modelstageweb.CameraWebGL, connection: modelstageweb.ServerConnection) {\r\n            super(connection);\r\n        }\r\n\r\n        public handleMouseMove(e: JQuery.TriggeredEvent, x: number, y: number) {\r\n            let viewRay = this.camera.getViewRay(x, y);\r\n            let p = viewRay.intersectRayWithPlane(new psgeometry.Vec3(), new psgeometry.Vec3(0, 1, 0));\r\n            if (p) {\r\n                if (this.isInitialized) {\r\n                    let [sceneObj, sceneObjIdx] = this.getSceneObj(this.actor.Data['SceneObjID']);\r\n                    if (sceneObj) {\r\n                        let translatedSceneObj: SceneObject = { ...sceneObj };\r\n                        let translation = translatedSceneObj.Location;\r\n                        translatedSceneObj.Location = translatedSceneObj.Location.add(new psgeometry.Vec4(p.x - this.lastX, 0, p.z - this.lastZ));\r\n                        SceneAppState.GlobalInstance.SceneObjects.replace(translatedSceneObj, sceneObjIdx);\r\n                    }\r\n                }\r\n                this.lastX = p.x;\r\n                this.lastZ = p.z;\r\n                this.isInitialized = true;\r\n            }\r\n        }\r\n\r\n        public handleMouseUp(e: JQuery.Event) {\r\n            this.interfaceController.popTool();\r\n        }\r\n\r\n    }\r\n\r\n    export class RotateActorTool extends ActorManipulationTool {\r\n        constructor(private actor: modelstageweb.ActorWebGL, private camera: modelstageweb.CameraWebGL, connection: modelstageweb.ServerConnection) {\r\n            super(connection);\r\n        }\r\n\r\n        public handleDrag(e: JQuery.Event, startX: number, startY: number, dX: number, dY: number) {\r\n\r\n            let fac = 1;\r\n            if (Math.abs(e.clientY - startY) > 300) {\r\n                fac = 6\r\n            } else if (Math.abs(e.clientY - startY) > 200) {\r\n                fac = 3\r\n            } else if (Math.abs(e.clientY - startY) > 100) {\r\n                fac = 2\r\n            }\r\n\r\n            let [sceneObj, sceneObjIdx] = this.getSceneObj(this.actor.Data['SceneObjID']);\r\n            if (sceneObj) {\r\n                let rotatedSceneObj: SceneObject = { ...sceneObj };\r\n                let rotation = rotatedSceneObj.Rotation;\r\n                rotatedSceneObj.Rotation = rotatedSceneObj.Rotation.add(new psgeometry.Vec4(dX / (fac * 100) * Math.PI, 0, 0));\r\n                SceneAppState.GlobalInstance.SceneObjects.replace(rotatedSceneObj, sceneObjIdx);\r\n            }\r\n        }\r\n\r\n        public handleMouseUp(e: JQuery.Event) {\r\n            this.interfaceController.popTool();\r\n        }\r\n\r\n    }\r\n\r\n    export class DemoSceneWebGL extends modelstageappstate.DirectedSceneWebGL {\r\n\r\n        private stage: modelstageweb.StageWebGL;\r\n\r\n        private spaceActor: modelstageweb.ActorWebGL = new modelstageweb.ActorWebGL(this, 'Space');\r\n\r\n        private spaceModel: SpaceModel;\r\n\r\n        public get SpaceModel() { return this.spaceModel; }\r\n\r\n        constructor(stage: modelstageweb.StageWebGL, connection: modelstageweb.ServerConnection) {\r\n            super(new modelstageappstate.Director(modelstageappstate.AppState.GetInstance()), connection);\r\n            this.director.Scene = this;\r\n            this.stage = stage;\r\n\r\n            this.spaceModel = new SpaceModel(this, this.stage, this.spaceActor);\r\n\r\n            let shaderProgram: modelstageweb.ShaderProgramWebGL = new modelstageweb.OpaqueMeshShaderProgramWebGL();\r\n            shaderProgram.initialize(stage);\r\n            stage.registerShaderProgram('OpaqueMeshShader', shaderProgram);\r\n\r\n            shaderProgram = new modelstageweb.TransparentMeshShaderProgramWebGL();\r\n            shaderProgram.initialize(stage);\r\n            stage.registerShaderProgram('TransparentMeshShader', shaderProgram);\r\n\r\n            shaderProgram = new modelstageweb.TexturedMeshShaderProgramWebGL();\r\n            shaderProgram.initialize(stage);\r\n            stage.registerShaderProgram('TexturedMeshShader', shaderProgram);\r\n\r\n            shaderProgram = new modelstageweb.MatCapShaderProgramWebGL();\r\n            shaderProgram.initialize(stage);\r\n            stage.registerShaderProgram('MatCapMeshShader', shaderProgram);\r\n\r\n            // Shadow shaders\r\n\r\n            shaderProgram = new modelstageweb.ShadowTexturedMeshShaderProgramWebGL();\r\n            shaderProgram.initialize(stage);\r\n            stage.registerPhaseSpecificShaderProgram('Shadow', 'TexturedMeshShader', shaderProgram);\r\n\r\n            shaderProgram = new modelstageweb.ShadowTexturedMeshShaderProgramWebGL();\r\n            shaderProgram.initialize(stage);\r\n            stage.registerPhaseSpecificShaderProgram('Shadow', 'MatCapMeshShader', shaderProgram);\r\n        }\r\n\r\n        public initialize() {\r\n            this.addSceneItem(this.spaceActor, true);\r\n            this.spaceModel.updateSpace();\r\n\r\n            $.when(\r\n//                this.stage.AssetFactory.getFromUrl('/data/commonassets.psmesh'),\r\n                this.stage.AssetFactory.getFromUrl('/data/hologem.psmesh'),\r\n//                this.stage.AssetFactory.getFromUrl('/data/office_assets.psmesh'),\r\n                this.stage.AssetFactory.getFromUrl('/data/office_assets_bake.psmesh')\r\n            ).done(() => {\r\n                this.IsInitialized = true;\r\n            });\r\n\r\n            /*        this.stage.AssetFactory.getFromUrl('/data/if5-office-1.psmesh')\r\n                        .then((success) => {\r\n                            let actor = new modelstageweb.ActorWebGL(this, 'actor');\r\n                            for (let x in this.stage.AssetStore.Figures) {\r\n                                actor.addFigure(this.stage.AssetStore.Figures[x]);\r\n                            }\r\n                            this.addSceneItem(actor, true);\r\n            \r\n                            this.stage.AssetFactory.getFromUrl('/data/assets.psmesh').then(() => {\r\n                                this.IsInitialized = true;\r\n                            });\r\n                        })\r\n                        .fail((req) => {\r\n                        })\r\n                        .progress((percentage) => {\r\n                            document.title = percentage;\r\n                        });\r\n                    */\r\n\r\n        }\r\n\r\n        public updateSpace() {\r\n            this.spaceModel.clearVertices();\r\n            for (let i = 0; i < RoomAppState.GlobalInstance.Vertices.Count; ++i) {\r\n                let vert = RoomAppState.GlobalInstance.Vertices.GetItemAt(i);\r\n                this.spaceModel.addVertex(vert.x, vert.z);\r\n            }\r\n            this.spaceModel.updateSpace();\r\n        }\r\n\r\n        public updatePeerInfo(peerID: string, peerColorIndex: number, userName: string) {\r\n            if (peerID != '-1') {\r\n                let peerInfoID = 'peer-info-' + peerID;\r\n\r\n                let peerInfoElement = $('#' + peerInfoID);\r\n\r\n                if (peerInfoElement.length > 0) {\r\n                    peerInfoElement.find('span').text(userName);\r\n                } else {\r\n                    $('#participants-view').append('<li id=\"' + peerInfoID + '\"><img src=\"images/info/Lens' + peerColorIndex + '.png\" /><span>' + userName + '</span></li>');\r\n                }\r\n            }\r\n        }\r\n\r\n        public removePeer(peerID: string) {\r\n            this.removeSceneItem('Peer' + peerID);\r\n\r\n            let peerInfoID = 'peer-info-' + peerID;\r\n            let peerInfoElement = $('#' + peerInfoID);\r\n            peerInfoElement.addClass('removing');\r\n            setTimeout(() => {\r\n                peerInfoElement.remove();\r\n            }, 2000);\r\n        }\r\n\r\n        public getColorIndexFromPeerID(peerID: string) {\r\n            return (parseInt(peerID) - 1) % PeerColors.length;\r\n        }\r\n\r\n        public createPeer(peerID: string) {\r\n            let obj: modelstageweb.ActorWebGL = new modelstageweb.ActorWebGL(this, 'Peer' + peerID);\r\n            obj.addFigure(this.stage.AssetStore.Figures['hololens.hololens.000']);\r\n            // TODO @UB: do this the right way...\r\n            obj.Figures[0].ShaderInstances[0].ShaderKey = 'MatCapMeshShader';\r\n\r\n            let colorIndex = this.getColorIndexFromPeerID(peerID);\r\n\r\n            obj.State.set('Color', new psgeometry.Vec4(PeerColors[colorIndex][0], PeerColors[colorIndex][1], PeerColors[colorIndex][2], PeerColors[colorIndex][3]));\r\n            obj.State.set('ModelTransform', (state: modelstageweb.RenderState) => {\r\n                let pos: psgeometry.Vec4 = state.get('HeadPos' + peerID, psgeometry.Vec4.Zero);\r\n                let cursor: psgeometry.Vec4 = state.get('CursPos' + peerID, psgeometry.Vec4.Zero);\r\n                let dir = cursor.sub(pos);\r\n\r\n                let spherical = psgeometry.Spherical.FromCartesianVector(dir);\r\n\r\n                return (<psgeometry.Matrix4>psgeometry.Matrix4.FromRotationX(-spherical.azimuth).multiply(\r\n                    psgeometry.Matrix4.FromRotationY(-spherical.polar))).multiply(\r\n                    psgeometry.Matrix4.FromTranslation(pos.x, pos.y, pos.z));\r\n            });\r\n\r\n            this.addSceneItem(obj, true /* makeVisible */);\r\n            obj.TestIntersection = false;\r\n            obj.TestChildrenIntersection = false;\r\n            return obj;\r\n        }\r\n\r\n        public createSceneObject(objectID: string, assetID: string) {\r\n            let suffix = objectID;\r\n\r\n            let obj = new modelstageweb.ActorWebGL(this, 'SceneObject' + suffix);\r\n            obj.State.set('ModelTransform', (state: modelstageweb.RenderState) => {\r\n                let pos = state.get('SceneObjectPos' + suffix, psgeometry.Vec4.Zero);\r\n                let rot = state.get('SceneObjectRot' + suffix, psgeometry.Vec4.Zero);\r\n                let scale = state.get('SceneObjectScale' + suffix, psgeometry.Vec4.One);\r\n\r\n                return <psgeometry.Matrix4>psgeometry.Matrix4.FromRotation(rot.x, rot.y, rot.z).multiply(\r\n                    psgeometry.Matrix4.FromScaling(scale.x, scale.y, scale.z).multiply(\r\n                        psgeometry.Matrix4.FromTranslation(pos.x, pos.y, pos.z)));\r\n            });\r\n            obj.addFigure(this.stage.AssetStore.getFigure(assetID));\r\n            obj.Data['SceneObjID'] = suffix;\r\n\r\n            return obj;\r\n        }\r\n\r\n    }\r\n\r\n    export class RoomAppState extends modelstageappstate.AppStateCluster {\r\n        static ClusterTypeID = 'Room';\r\n\r\n        static GlobalInstance: RoomAppState;\r\n\r\n        public FloorLevel: modelstageappstate.AppStateFloatValue = new modelstageappstate.AppStateFloatValue();\r\n\r\n        public MasterView: modelstageappstate.AppStateVector4Value = new modelstageappstate.AppStateVector4Value();\r\n\r\n        public Vertices: modelstageappstate.AppStateCollection<psgeometry.Vec4> = new modelstageappstate.AppStateCollection<psgeometry.Vec4>(modelstageappstate.AppStateCollectionOperation);\r\n\r\n        public constructor() {\r\n            super();\r\n            RoomAppState.GlobalInstance = this;\r\n        }\r\n\r\n        public registerEntries() {\r\n            this.registerEntry('FloorLevel', this.FloorLevel);\r\n            this.registerEntry('MasterView', this.MasterView);\r\n            this.registerEntry('Vertices', this.Vertices);\r\n        }\r\n\r\n        public readValue(key: string, reader: modelstageappstate.AppStateDeltaReader): any {\r\n            if (key == 'Vertices') {\r\n                return reader.Reader.readVec4();\r\n            } else {\r\n                return super.readValue(key, reader);\r\n            }\r\n        }\r\n\r\n        public applyChanges(scene: modelstageweb.SceneWebGL, peerID: string, instanceID: string) {\r\n            if (this.FloorLevel.isDirty()) {\r\n                scene.State.set('FloorLevel', this.FloorLevel.get());\r\n                (<DemoSceneWebGL>scene).SpaceModel.FloorLevel = this.FloorLevel.get();\r\n            }\r\n            if (this.MasterView.isDirty()) {\r\n                scene.State.set('MasterViewPos', this.MasterView.get());\r\n            }\r\n            if (this.Vertices.isDirty()) {\r\n                let sc = <DemoSceneWebGL>scene;\r\n                (<DemoSceneWebGL>scene).updateSpace();\r\n            }\r\n        }\r\n    }\r\n\r\n    class SceneObject {\r\n        public SceneObjectID: string; // char[40]\r\n\r\n        public AssetID: string;       // char[20]\r\n\r\n        public Location: psgeometry.Vec4;\r\n\r\n        public Rotation: psgeometry.Vec4;\r\n\r\n        public Scale: psgeometry.Vec4;\r\n    }\r\n\r\n    export class SceneAppState extends modelstageappstate.AppStateCluster {\r\n        static ClusterTypeID = 'Obj';\r\n\r\n        static GlobalInstance: SceneAppState;\r\n\r\n        public SceneObjects: modelstageappstate.AppStateCollection<SceneObject> = new modelstageappstate.AppStateCollection<SceneObject>(modelstageappstate.AppStateCollectionOperation);\r\n\r\n        public constructor() {\r\n            super();\r\n            SceneAppState.GlobalInstance = this;\r\n        }\r\n\r\n        public registerEntries() {\r\n            this.registerEntry('Obj', this.SceneObjects);\r\n        }\r\n\r\n        public readValue(key: string, reader: modelstageappstate.AppStateDeltaReader): any {\r\n            if (key == 'Obj') {\r\n                let value = new SceneObject();\r\n\r\n                value.SceneObjectID = reader.Reader.readCharArray(40);\r\n                value.AssetID = reader.Reader.readCharArray(40);\r\n                value.Location = reader.Reader.readVec4();\r\n                value.Rotation = reader.Reader.readVec4();\r\n                value.Scale = reader.Reader.readVec4();\r\n\r\n                return value;\r\n            } else {\r\n                return super.readValue(key, reader);\r\n            }\r\n        }\r\n\r\n        public writeValue(key: string, writer: modelstageappstate.AppStateDeltaWriter, value: any) {\r\n            if (key == 'Obj') {\r\n                writer.Writer.writeCharArray(value.SceneObjectID, 40);\r\n                writer.Writer.writeCharArray(value.AssetID, 40);\r\n                writer.Writer.writeVec4(value.Location);\r\n                writer.Writer.writeVec4(value.Rotation);\r\n                writer.Writer.writeVec4(psgeometry.Vec4.One);\r\n            } else {\r\n                super.writeValue(key, writer, value);\r\n            }\r\n        }\r\n\r\n        public applyChanges(scene: modelstageweb.SceneWebGL, peerID: string, instanceID: string) {\r\n            if (this.SceneObjects.isDirty()) {\r\n                let sc = <DemoSceneWebGL>(scene);\r\n\r\n                this.SceneObjects.Operations.forEach((operation) => {\r\n                    if (operation.Operation == modelstageappstate.OperationType.Append) {\r\n                        let objID = operation.NewValue.SceneObjectID;\r\n                        let assetID = operation.NewValue.AssetID;\r\n                        sc.addSceneItem(sc.createSceneObject(objID, assetID), true /* makeVisible */);\r\n                        scene.State.set('SceneObjectPos' + objID, operation.NewValue.Location);\r\n                        scene.State.set('SceneObjectRot' + objID, operation.NewValue.Rotation);\r\n                        scene.State.set('SceneObjectScale' + objID, operation.NewValue.Scale);\r\n                        //scene.RunSequence(\"ShowSceneObject\", std::string{ \"ShowSceneObject\" } +noteID, { { \"SceneObjectID\", objID } });\r\n                    }\r\n                    else if (operation.Operation == modelstageappstate.OperationType.Replace) {\r\n                        let objID = operation.NewValue.SceneObjectID;\r\n                        scene.State.set('SceneObjectPos' + objID, operation.NewValue.Location);\r\n                        scene.State.set('SceneObjectRot' + objID, operation.NewValue.Rotation);\r\n                        scene.State.set('SceneObjectScale' + objID, operation.NewValue.Scale);\r\n                    }\r\n                    else if (operation.Operation == modelstageappstate.OperationType.Remove) {\r\n                        let objID = operation.PreviousValue.SceneObjectID;\r\n                        scene.removeSceneItem('SceneObject' + objID);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    export class PeerAppState extends modelstageappstate.AppStateCluster {\r\n        static ClusterTypeID = 'Peer';\r\n\r\n        private headPos: modelstageappstate.AppStateVector4Value = new modelstageappstate.AppStateVector4Value();\r\n\r\n        private cursorPos: modelstageappstate.AppStateVector4Value = new modelstageappstate.AppStateVector4Value();\r\n\r\n        private userID: modelstageappstate.AppStateStringValue = new modelstageappstate.AppStateStringValue();\r\n\r\n        private active: modelstageappstate.AppStateBoolValue = new modelstageappstate.AppStateBoolValue();\r\n\r\n        public providesInitializationData() {\r\n            return true;\r\n        }\r\n\r\n        public registerEntries() {\r\n            this.registerEntry('Head', this.headPos);\r\n            this.registerEntry('Curs', this.cursorPos);\r\n            this.registerEntry('User', this.userID);\r\n            this.registerEntry('Active', this.active);\r\n        }\r\n\r\n        public applyChanges(scene: modelstageweb.SceneWebGL, peerID: string, instanceID: string) {\r\n            let sc = <DemoSceneWebGL>scene;\r\n            if (peerID.length > 0 && (this.headPos.isDirty() || this.cursorPos.isDirty())) {\r\n                if (!sc.getSceneItem('Peer' + peerID)) {\r\n                    sc.createPeer(peerID);\r\n                }\r\n                let levelOfs = new psgeometry.Vec4(0, -sc.SpaceModel.FloorLevel, 0, 0);\r\n                let headPos = this.headPos.get();\r\n                let cursorPos = this.cursorPos.get();\r\n                if (headPos && cursorPos) {\r\n                    scene.State.set('HeadPos' + peerID, headPos.add(levelOfs));\r\n                    scene.State.set('CursPos' + peerID, cursorPos.add(levelOfs));\r\n                }\r\n            }\r\n\r\n            if (this.userID.isDirty()) {\r\n                let userName = UserNames[this.userID.get()] || '';\r\n                sc.updatePeerInfo(peerID, sc.getColorIndexFromPeerID(peerID), userName);\r\n            }\r\n\r\n            if (this.active.isDirty()) {\r\n                if (!this.active.get()) {\r\n                    sc.removePeer(peerID);\r\n                }\r\n            }\r\n         }\r\n    }\r\n\r\n    class Note {\r\n        public NoteID: string; //char[20];\r\n\r\n        public NoteType: number; // int\r\n\r\n        public OwnerID: string; // char[10];\r\n\r\n        public AssignedToID: string; // char[10];\r\n\r\n        public Location: psgeometry.Vec4;\r\n\r\n        public AzimuthalRotation: number; // float\t\t\t\r\n\r\n    };\r\n\r\n    export class NotesAppState extends modelstageappstate.AppStateCluster {\r\n        static ClusterTypeID = 'Notes';\r\n\r\n        static GlobalInstance: NotesAppState;\r\n\r\n        public Notes: modelstageappstate.AppStateCollection<Note> = new modelstageappstate.AppStateCollection<Note>(modelstageappstate.AppStateCollectionOperation);\r\n\r\n        public constructor() {\r\n            super();\r\n            NotesAppState.GlobalInstance = this;\r\n        }\r\n\r\n        public registerEntries() {\r\n            this.registerEntry('Notes', this.Notes);\r\n        }\r\n\r\n        public readValue(key: string, reader: modelstageappstate.AppStateDeltaReader): any {\r\n            if (key == 'Notes') {\r\n                let value = new Note();\r\n\r\n                value.NoteID = reader.Reader.readCharArray(20);\r\n                value.NoteType = reader.Reader.readUInt32();\r\n                value.OwnerID = reader.Reader.readCharArray(10);\r\n                value.Location = reader.Reader.readVec4();\r\n                value.AzimuthalRotation = reader.Reader.readFloat32();\r\n\r\n                return value;\r\n            } else {\r\n                return super.readValue(key, reader);\r\n            }\r\n        }\r\n\r\n        public writeValue(key: string, writer: modelstageappstate.AppStateDeltaWriter, value: any) {\r\n            if (key == 'Notes') {\r\n                writer.Writer.writeCharArray(value.NoteID, 20);\r\n                writer.Writer.writeInt32(value.NoteType);\r\n                writer.Writer.writeCharArray(value.OwnerID, 10);\r\n                writer.Writer.writeVec4(value.Location);\r\n                writer.Writer.writeFloat32(value.AzimuthalRotation);\r\n            } else {\r\n                super.writeValue(key, writer, value);\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n}\r\n","/// ModelStage Â© 2018 Plansysteme GmbH, Hamburg, Germany. All rights reserved.\r\n\r\nimport { modelstage } from './modelstage';\r\nimport { modelstageweb } from './mx-common';\r\nimport { modelstageappstate } from './mx-appstate';\r\nimport 'jquery-ui';\r\n//import 'jquery-ui/ui/widgets/droppable';\r\nimport 'jquery.mousewheel';\r\n\r\nexport class MessageChannel {\r\n\r\n    protected extractPart(message: string): { remainder: string, part: string } {\r\n        let sep = message.indexOf('|');\r\n        if (sep >= 0) {\r\n            return {\r\n                part: message.substring(0, sep),\r\n                remainder: message.substring(sep + 1)\r\n            };\r\n        } else {\r\n            return {\r\n                remainder: '',\r\n                part: message\r\n            };\r\n        }\r\n    }\r\n\r\n    public processMessage(message: string) {\r\n    }\r\n\r\n}\r\n\r\nexport class SampleTheaterWebGL extends modelstage.TheaterWebGL {\r\n\r\n    private peerAppState = new modelstageappstate.LocalAppStateClusterManager(modelstage.PeerAppState.ClusterTypeID, modelstage.PeerAppState);\r\n\r\n    private sceneAppState = new modelstageappstate.GlobalAppStateClusterManager(modelstage.SceneAppState.ClusterTypeID, modelstage.SceneAppState);\r\n\r\n    private roomAppState = new modelstageappstate.GlobalAppStateClusterManager(modelstage.RoomAppState.ClusterTypeID, modelstage.RoomAppState);\r\n\r\n    private notesAppState = new modelstageappstate.GlobalAppStateClusterManager(modelstage.NotesAppState.ClusterTypeID, modelstage.NotesAppState);\r\n\r\n    private actorIndex = 1;\r\n\r\n    private interfaceController: modelstageweb.InterfaceController;\r\n\r\n    private cameraController: modelstageweb.CameraController;\r\n\r\n    private connection: modelstageweb.ServerConnection;\r\n\r\n    private channels: { [index: string]: MessageChannel } = {};\r\n\r\n    constructor(canvasElementID: string) {\r\n        super(canvasElementID);\r\n\r\n        this.connection = new modelstageweb.SignalRServerConnection();\r\n\r\n        this.scene = new modelstage.DemoSceneWebGL(this.stage, this.connection);\r\n        this.scene.initialize();\r\n\r\n        this.connection.onConnected(() => {\r\n        });\r\n        this.connection.onMessage((msg) => {\r\n            if (msg.data instanceof ArrayBuffer || msg.data instanceof Uint8Array) {\r\n                let buf = msg.data instanceof Uint8Array ? msg.data : new Uint8Array(msg.data);\r\n                let networkMessage = modelstageweb.NetworkChannelMessage.FromBuffer(buf);\r\n                (<modelstageappstate.DirectedSceneWebGL>this.scene).receivedMessage(networkMessage);\r\n            } else if (typeof msg.data == 'string') {\r\n                let data = <string>msg.data;\r\n                let sep = data.indexOf('|');\r\n                if (sep >= 0) {\r\n                    let channelKey = data.substring(0, sep);\r\n                    let message = data.substr(sep + 1);\r\n                    let channel = this.channels[channelKey];\r\n                    if (channel) {\r\n                        channel.processMessage(message);\r\n                    }\r\n                }\r\n            } else {\r\n                console.warn('Received invalid message type: ' + typeof msg.data);\r\n            }\r\n        });\r\n\r\n        this.interfaceController = new modelstageweb.InterfaceController();\r\n        this.cameraController = new modelstageweb.CameraController(this.Stage, this.Stage.Camera, this.interfaceController, this.connection);\r\n        this.cameraController.construct(12.0, -0.45, 0.0);\r\n        this.interfaceController.pushTool(new modelstage.SelectionTool(this.scene, this.stage, this.connection));\r\n\r\n        $(() => { \r\n            this.connection.connect();\r\n\r\n            (<any>$('.area-right-sidebar ul li')).draggable({\r\n                containment: 'document',\r\n                cursor: 'crosshair',\r\n                helper: 'clone',\r\n                opacity: 0.5,\r\n                scroll: false\r\n            });\r\n\r\n            (<any>$('#viewCanvas')).droppable({\r\n                over: (event, ui) => {\r\n                    let figureID = $(ui.draggable).attr('data-figure-id');\r\n                    //actor.Data['rotate'] = new psgeometry.Vec4(0, this.cameraController.Yaw, 0);\r\n\r\n                    this.interfaceController.pushTool(new modelstage.PlaceActorTool(figureID, this.stage.Camera, this.connection));\r\n                }\r\n            });\r\n\r\n        });\r\n    }\r\n\r\n    protected initialize() {\r\n    }\r\n\r\n}\r\n"],"names":["tslib_1.__extends"],"mappings":";;;;;;;;;;AAEA,IAAc,UAAU,CAunCvB;AAvnCD,WAAc,UAAU;IAEpB;QA+DA,iBAAY,QAAmB;YAC7B,IAAI,CAAC,QAAQ,GAAG,QAAQ,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SAC9E;;;;;;;QA5DM,uBAAe;;;;;;QAAtB,UAAuB,CAAS,EAAE,CAAS,EAAE,CAAS;;gBAChD,MAAM,GAAG,IAAI,OAAO,EAAE;YAC1B,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YACvB,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YACvB,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;YACxB,OAAO,MAAM,CAAC;SACf;;;;;;;QAEM,mBAAW;;;;;;QAAlB,UAAmB,CAAS,EAAE,CAAS,EAAE,CAAS;;gBAC5C,MAAM,GAAG,IAAI,OAAO,EAAE;YAC1B,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YACvB,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YACvB,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;YACxB,OAAO,MAAM,CAAC;SACf;;;;;QAEM,qBAAa;;;;QAApB,UAAqB,KAAa;;gBAC5B,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;;gBACtB,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;;gBACtB,MAAM,GAAG,IAAI,OAAO,EAAE;YAC1B,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;YAC1B,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC;YAC3B,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;YAC1B,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC;YAC3B,OAAO,MAAM,CAAC;SACf;;;;;QAEM,qBAAa;;;;QAApB,UAAqB,KAAa;;gBAC5B,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;;gBACtB,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;;gBACtB,MAAM,GAAG,IAAI,OAAO,EAAE;YAC1B,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;YAC1B,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;YAC1B,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC;YAC3B,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC;YAC3B,OAAO,MAAM,CAAC;SACf;;;;;QAEM,qBAAa;;;;QAApB,UAAqB,KAAa;;gBAC5B,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;;gBACtB,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;;gBACtB,MAAM,GAAG,IAAI,OAAO,EAAE;YAC1B,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;YAC1B,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC;YAC3B,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;YAC1B,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;YAC1B,OAAO,MAAM,CAAC;SACf;;;;;;;QAEM,oBAAY;;;;;;QAAnB,UAAoB,KAAa,EAAE,GAAW,EAAE,IAAY;YAC1D,OAAO,IAAI,OAAO,CAAC;gBACjB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC;gBACrF,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;gBACzM,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;gBACzM,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;aAAC,CACZ,CAAC,SAAS,EAAE,CAAC;SACf;;;;;;QAMD,mBAAC;;;;;QAAD,UAAE,MAAc,EAAE,MAAc;;gBAC1B,GAAG,GAAG,MAAM,GAAG,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC;YACpC,OAAO,GAAG,IAAI,CAAC,IAAI,GAAG,GAAG,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;SACzD;;;;;QAED,qBAAG;;;;QAAH,UAAI,GAAW;YACb,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,EAAE;gBACvB,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;aAC7H;iBAAM;gBACL,OAAO,IAAI,CAAC;aACb;SACF;;;;;QAED,qBAAG;;;;QAAH,UAAI,GAAW;YACb,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,EAAE;gBACvB,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC;aAC9G;iBAAM;gBACL,OAAO,IAAI,CAAC;aACb;SACF;;;;;QAED,wBAAM;;;;QAAN,UAAO,CAAU;YACf,IAAI,CAAC,EAAE;;oBACD,CAAC,GAAG,IAAI,CAAC,QAAQ;;oBACjB,CAAC,GAAG,CAAC,CAAC,QAAQ;gBAElB,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBACjE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBAC5D,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC;oBAChE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;aACxE;iBAAM;gBACL,OAAO,KAAK,CAAC;aACd;SAEF;;;;;QAED,0BAAQ;;;;QAAR,UAAS,CAA0B;YACjC,IAAI,CAAC,YAAY,OAAO,EAAE;;oBACpB,CAAC,GAAG,IAAI,CAAC,QAAQ;;oBACjB,CAAC,GAAG,CAAC,CAAC,QAAQ;gBAClB,OAAO,IAAI,OAAO,CAAC;oBACjB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;oBACtD,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;oBACtD,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;oBACvD,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;oBAEvD,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;oBACtD,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;oBACtD,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;oBACvD,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;oBAEvD,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;oBACxD,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;oBACxD,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;oBACzD,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;oBAEzD,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;oBAC1D,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;oBAC1D,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;oBAC3D,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,C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AAK,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EACtE,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAC7D,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAC7D,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAC7D,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAEb,IAAI,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EACtE,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAC7D,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAC7D,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAC7D,CAAC,EAAE,CAA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AC,SAAS,CAAC,KAAG,CAAC,IAAI,EAAE,KAAG,CAAC,IAAI,EAAE,KAAG,CAAC,IAAI,EAAE,KAAG,CAAC,IAAI,EAAE,KAAG,CAAC,IAAI,EAAE,KAAG,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;;gBAG3F,WAAW,CAAC,SAAS,CAAC,KAAG,CAAC,IAAI,EAAE,KAAG,CAAC,IAAI,EAAE,KAAG,CAAC,IAAI,EAAE,KAAG,CAAC,IAAI,EAAE,KAAG,CAAC,IAAI,EAAE,KAAG,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC3F,WAAW,CAAC,SAAS,CAAC,KAAG,CAAC,IAAI,EAAE,KAAG,CAAC,IAAI,EAAE,KAAG,CAAC,IAAI,EAAE,KAAG,CAAC,IAAI,EAAE,KAAG,CAAC,IAAI,EAAE,KAAG,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC3F,WAAW,CAAC,SAAS,CAAC,KAAG,CAAC,IAAI,EAAE,KAAG,CAAC,IAAI,EAAE,KAAG,CAAC,IAAI,EAAE,KAAG,CAAC,IAAI,EAAE,KAAG,CAAC,IAAI,EAAE,KAAG,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC3F,WAAW,CAAC,SAAS,CAAC,KAAG,CAAC,IAAI,EAAE,KAAG,CAAC,IAAI,EAAE,KAAG,CAAC,IAAI,EAAE,KAAG,CAAC,IAAI,EAAE,KAAG,CAAC,IAAI,EAAE,KAAG,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;;gBAG3F,WAAW,CAAC,SAAS,CAAC,KAAG,CAAC,IAAI,EAAE,KAAG,CAAC,IAAI,EAAE,KAAG,CAAC,IAAI,EAAE,KAAG,CAAC,IAAI,EAAE,KAAG,CAAC,IAAI,EAAE,KAAG,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC3F,WAAW,CAAC,SAAS,CAAC,KAAG,CAAC,IAAI,EAAE,KAAG,CAAC,IAAI,EAAE,KAAG,CAAC,IAAI,EAAE,KAAG,CAAC,IAAI,EAAE,KAAG,CAAC,IAA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"}
